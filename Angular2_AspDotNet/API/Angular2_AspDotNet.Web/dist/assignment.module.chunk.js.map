{"version":3,"sources":["C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/assignment/assignment.component.html","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/assignment/assignment.component.ts","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/assignment/assignment.model.ts","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/assignment/assignment.module.ts","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/assignment/assignmentlist.component.html","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/assignment/assignmentlist.component.ts"],"names":[],"mappings":"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","file":"assignment.module.chunk.js","sourcesContent":["module.exports = \"<form [formGroup]=\\\"myFormAssignment\\\" novalidate (ngSubmit)=\\\"SaveAssignmentFormData(myFormAssignment.value,'save')\\\">\\r\\n    <div style=\\\"margin-top:10px;\\\">\\r\\n        <div style=\\\"margin:20px;\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label>Assignment</label>\\r\\n                <input type=\\\"text\\\" formControlName=\\\"Title\\\" class=\\\"form-control validation-field\\\" />\\r\\n                <small [hidden]=\\\"myFormAssignment.controls.Title.valid\\\" class=\\\"text-danger\\\">\\r\\n                    Title is required\\r\\n                </small>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <p-checkbox label=\\\"Is Active\\\" binary=\\\"true\\\"\\r\\n                            formControlName=\\\"Active\\\"></p-checkbox>\\r\\n                <!--<div class=\\\"custom-controls-stacked\\\">\\r\\n                    <label class=\\\"custom-control custom-checkbox\\\">\\r\\n                        <input formControlName=\\\"Active\\\" type=\\\"checkbox\\\" class=\\\"custom-control-input\\\">\\r\\n                        <span class=\\\"custom-control-indicator\\\"></span>\\r\\n                        <span class=\\\"custom-control-description\\\">Is Active</span>\\r\\n                    </label>\\r\\n                </div>-->\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" data-toggle=\\\"modal\\\" class=\\\"btn btn-primary\\\" (click)=\\\"SaveAssignmentFormData(myFormAssignment.value,'submit')\\\" [disabled]=\\\"!myFormAssignment.valid\\\">Save</button>\\r\\n            <!--<button type=\\\"button\\\" data-toggle=\\\"modal\\\" class=\\\"btn btn-primary\\\" (click)=\\\"SaveAssignmentFormData(myFormAssignment.value)\\\" data-target=\\\"#lg-modal\\\" [disabled]=\\\"!myFormAssignment.valid\\\" label=\\\"Add Question\\\">Add Question</button>-->\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n</form>\\r\\n\\r\\n<div class=\\\"modal fade\\\" id=\\\"lg-modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"modal-large-label\\\" style=\\\"display: none;\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header state modal-primary\\\">\\r\\n                <h4 class=\\\"modal-title\\\" id=\\\"modal-large-label\\\">Question</h4>\\r\\n                <button #closeDialog type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">×</span></button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\" style=\\\"overflow:scroll\\\">\\r\\n                <form [formGroup]=\\\"myFormQuestionAssignment\\\" novalidate (ngSubmit)=\\\"SaveAssignmentQuestionFormData(myFormQuestionAssignment.value,'submit')\\\">\\r\\n                    <div style=\\\"margin-top:10px;\\\">\\r\\n                        <div style=\\\"margin:20px;\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label>Question</label>\\r\\n                                <input type=\\\"text\\\" formControlName=\\\"QuestionText\\\" class=\\\"form-control validation-field\\\" />\\r\\n                                <small [hidden]=\\\"myFormQuestionAssignment.controls.QuestionText.valid\\\" class=\\\"text-danger\\\">\\r\\n                                    Question is required\\r\\n                                </small>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label>Score</label>\\r\\n                                <input type=\\\"text\\\" formControlName=\\\"Score\\\" class=\\\"form-control validation-field\\\" />\\r\\n                                <small [hidden]=\\\"myFormQuestionAssignment.controls.Score.valid\\\" class=\\\"text-danger\\\">\\r\\n                                    Score is required\\r\\n                                </small>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label>Order</label>\\r\\n                                <input type=\\\"text\\\" formControlName=\\\"Order\\\" class=\\\"form-control validation-field\\\" />\\r\\n                                <small [hidden]=\\\"myFormQuestionAssignment.controls.Order.valid\\\" class=\\\"text-danger\\\">\\r\\n                                    Order is required\\r\\n                                </small>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <!--<label>Status</label>\\r\\n                                <input type=\\\"checkbox\\\" formControlName=\\\"Active\\\" class=\\\"form-control checkbox validation-field\\\" />-->\\r\\n                                <p-checkbox label=\\\"Is Active\\\" binary=\\\"true\\\"\\r\\n                                            formControlName=\\\"Active\\\"></p-checkbox>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label>Question Type</label>\\r\\n                                <select formControlName=\\\"QuestionType\\\" class=\\\"form-control validation-field\\\">\\r\\n                                    <option value=\\\"\\\">--Select--</option>\\r\\n                                    <option value=\\\"1\\\">Single Option</option>\\r\\n                                    <option value=\\\"2\\\">Multiple Option</option>\\r\\n                                </select>\\r\\n                            </div>\\r\\n\\r\\n                            <div *ngIf=\\\"myFormQuestionAssignment.get('QuestionType').value==2\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"col-md-4 col-md-offset-2\\\">\\r\\n                                        <span>\\r\\n                                            <button class=\\\"btn btn-primary\\\"\\r\\n                                                    type=\\\"button\\\"\\r\\n                                                    [disabled]=\\\"!QuestionOption.valid\\\"\\r\\n                                                    (click)=\\\"addQuestion()\\\">\\r\\n                                                Add Another Option\\r\\n                                            </button>\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div formArrayName=\\\"QuestionOption\\\" *ngFor=\\\"let address of QuestionOption.controls; let i=index\\\">\\r\\n                                    <div>\\r\\n                                        <span class=\\\"fa fa-remove pull-right\\\" (click)=\\\"RemoveQuestion(i)\\\">\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                    <div [formGroupName]=\\\"i\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label>Option</label>\\r\\n                                            <input type=\\\"text\\\" formControlName=\\\"OptionText\\\" class=\\\"form-control validation-field\\\" />\\r\\n                                            <small [hidden]=\\\"myFormQuestionAssignment.controls.OptionText.valid\\\" class=\\\"text-danger\\\">\\r\\n                                                Option is required\\r\\n                                            </small>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label class=\\\"custom-control custom-radio\\\">\\r\\n                                                <input name=\\\"IsCorrectAnswer\\\" type=\\\"radio\\\" (click)=\\\"setIsCorrectAnswer(i)\\\"  formControlName=\\\"IsCorrectAnswer\\\" class=\\\"custom-control-input radio-primary\\\">\\r\\n                                                <span class=\\\"custom-control-indicator\\\"></span>\\r\\n                                                <span class=\\\"custom-control-description\\\">Is Corrective Answer</span>\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"modal-footer\\\">\\r\\n                                <button class=\\\"btn btn-primary\\\"\\r\\n                                        type=\\\"button\\\"\\r\\n                                        (click)=\\\"SaveAssignmentQuestionFormData(myFormQuestionAssignment.value,'save')\\\"\\r\\n                                        [disabled]=\\\"!myFormQuestionAssignment.valid\\\">\\r\\n                                    Save\\r\\n                                </button>\\r\\n                                <button class=\\\"btn btn-primary\\\"\\r\\n                                        type=\\\"button\\\"\\r\\n                                        (click)=\\\"SaveAssignmentQuestionFormData(myFormQuestionAssignment.value,'saveandadd')\\\"\\r\\n                                        [disabled]=\\\"!myFormQuestionAssignment.valid\\\">\\r\\n                                    Save and Add\\r\\n                                </button>\\r\\n\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"modal-body\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <p-dataTable [editable]=\\\"true\\\" [value]=\\\"questionList\\\" [rows]=\\\"10\\\" [paginator]=\\\"true\\\" [rowsPerPageOptions]=\\\"[5,10,20,50]\\\"\\r\\n                     resizableColumns=\\\"true\\\" #dtscheduleResult [responsive]=\\\"true\\\">\\r\\n\\r\\n\\r\\n            <p-column field=\\\"QuestionText\\\" header=\\\"Question Text\\\"></p-column>\\r\\n            <p-column [style]=\\\"{'width':'50px'}\\\" field=\\\"Score\\\" header=\\\"Score\\\"></p-column>\\r\\n            <p-column [style]=\\\"{'width':'50px'}\\\" field=\\\"Order\\\" header=\\\"Order\\\"></p-column>\\r\\n            <p-column field=\\\"MultipleOptionSet\\\" header=\\\"MultipleOptionSet\\\">\\r\\n                <ng-template let-options=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                    <ul>\\r\\n                        <li *ngFor=\\\"let option of options.AssignmentQuestionOptions\\\">\\r\\n                            {{ option.OptionText }}\\r\\n                        </li>\\r\\n                    </ul>\\r\\n                </ng-template>\\r\\n            </p-column>\\r\\n            <p-column [style]=\\\"{'width':'100px'}\\\" field=\\\"QuestionType\\\" header=\\\"QuestionType\\\">\\r\\n                <ng-template let-options=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                    {{options.QuestionType == 1? 'Single Option' : 'Multiple Option'}}\\r\\n                </ng-template>\\r\\n                </p-column>\\r\\n            <p-column styleClass=\\\"col-button\\\">\\r\\n                <ng-template pTemplate=\\\"header\\\">\\r\\n                    <div class=\\\"ui-helper-clearfix\\\" style=\\\"width:100%\\\">\\r\\n                        <button #buttonAddQuestion type=\\\"button\\\" pButton icon=\\\"fa-plus\\\" data-toggle=\\\"modal\\\" (click)=\\\"SaveAssignmentFormData(myFormAssignment.value,'addquestion')\\\" data-target=\\\"#lg-modal\\\" [disabled]=\\\"AssignmentId == 0\\\" label=\\\"Add\\\"></button>\\r\\n                    </div>\\r\\n                </ng-template>\\r\\n                <ng-template let-meeting=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                    <button type=\\\"button\\\" title=\\\"Edit\\\" pButton (click)=\\\"redirectToEditPage(meeting)\\\" icon=\\\"fa fa-pencil-square-o\\\"></button>\\r\\n                    <button type=\\\"button\\\" title=\\\"Cancel\\\" pButton (click)=\\\"deleteQuestion(meeting)\\\" icon=\\\"fa fa-trash-o\\\"></button>\\r\\n                </ng-template>\\r\\n            </p-column>\\r\\n        </p-dataTable>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/assignment/assignment.component.html\n// module id = ../../../../../src/app/pages/assignment/assignment.component.html\n// module chunks = assignment.module","\nimport { Component, ViewEncapsulation, ViewChild, TemplateRef, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Validators, FormGroup, FormArray, FormBuilder, FormControl, AbstractControl, ReactiveFormsModule, ValidatorFn } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { EventActionService } from '../eventactions/eventaction.service';\nimport { Location } from '@angular/common';\nimport { IMultiSelectOption, IMultiSelectSettings, IMultiSelectTexts } from 'angular-2-dropdown-multiselect';\nimport { Observable } from 'rxjs/Observable';\nimport { Http, URLSearchParams } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport { LocationModel, TitleModel, SubTitleModel, Title, SubTitle, Action, EventActionStatusModel, events, EventFilterModel, EventViewModel, EventDataModel, EventFilterViewModel, EventAttendeeDataModel, ActionDataModel, ActionResponsiblePersonDataModel, AgendaDataModel } from '../calendar/formeventdata';\nimport { CategoryModel, ActionSourceModel, ActionCommentsListModel } from '../eventactions/eventaction.model';\nimport { MasterEventDataService } from '../calendar/Mastereventdata';\nimport { NgbModal, NgbDateStruct, NgbTimeStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { MeetingDataService } from '../meeting/meeting.service';\nimport { CalendarModule, CheckboxModule, RadioButtonModule } from 'primeng/primeng';\nimport { SignedUserList, HazardListModel, MonitoringMethodModel, DurationUnitModel, HazardModel, RiskAssessmentViewModel, RiskAssessmentTeamViewModel, RiskAssessmentHazardViewModel, RiskAssessmentHazardMeasureViewModel, RiskAssessmentHazardReviewViewModel } from '../riskassessment/riskassessment.model';\nimport { AssignmentListFilterModel, AssignmentQuestionOption, Assignment, AssignmentListData, AssignmentListResult } from '../assignment/assignment.model';\nimport { AssignmentService } from '../assignment/assignment.service';\nimport { LazyLoadEvent, FilterMetadata } from 'primeng/components/common/api';\nimport { MenuItem } from 'primeng/primeng';\nimport { UserService } from \"../user/user.service\";\n\n@Component({\n    selector: 'app-assignment',\n    templateUrl: './assignment.component.html',\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['../../../../node_modules/primeng/resources/primeng.min.css',\n        \"../../../../node_modules/primeng/resources/themes/omega/theme.css\"],\n    providers: [UserService, EventActionService, MasterEventDataService, MeetingDataService, AssignmentService],\n\n})\nexport class AssignmentComponent implements OnInit {\n    myFormAssignment: FormGroup;\n    myFormQuestionAssignment: FormGroup;\n    Title?: string;\n    Active: true;\n    AssignmentId: number = 0;\n    QuestionId: number = 0;\n    QuestionOrder: number = 0;\n    AssignmentList: Assignment[] = [];\n    @ViewChild('closeDialog') closeDialog;\n    //hazardId: number = 0;\n    get QuestionOption(): FormArray {\n        return <FormArray>this.myFormQuestionAssignment.get('QuestionOption');\n    }\n    constructor(private fb: FormBuilder, private _AssignmentService: AssignmentService, private route: ActivatedRoute, private router: Router, private location: Location) { }\n    ngOnInit() {\n        this.myFormAssignment = this.fb.group(\n            {\n                Title: ['', [Validators.required]],\n                Active: true\n            }\n\n        )\n        this.route.params.subscribe(params => {\r\n            this.AssignmentId = params['id'] as number; //log the value of id\r\n            this.AssignmentId = this.AssignmentId === undefined ? 0 : this.AssignmentId;\r\n        });\n\n        let model: AssignmentQuestionOption = new AssignmentQuestionOption();\n        this.addQuestionToForm();\n        this.getQuestionListOfAssignment();\n        this.getList();\n    }\n    questionDetail: AssignmentListResult = new AssignmentListResult();\n    addQuestionToForm() {\n        this.myFormQuestionAssignment = this.fb.group(\n            {\r\n                QuestionText: [this.questionDetail.QuestionText, [Validators.required, Validators.minLength(3)]],\r\n                QuestionType: [this.questionDetail.QuestionType, [Validators.required]],\r\n                Score: [this.questionDetail.Score, [Validators.required]],\r\n                Order: [this.questionDetail.Order, [Validators.required]],\r\n                OptionText: '',\r\n                Active: [this.questionDetail.Active],\r\n                QuestionId: [this.questionDetail.QuestionId],\r\n                QuestionOption: this.fb.array([this.buildOptions(new AssignmentQuestionOption())])\r\n            });\n    }\n    addQuestion(): void {\r\n        this.QuestionOption.push(this.buildOptions());\r\n    }\n    buildOptions(model: AssignmentQuestionOption = new AssignmentQuestionOption()): FormGroup {\r\n        return this.fb.group({\r\n            QuestionOptionID: [model.QuestionOptionID],\r\n            OptionText: [model.OptionText],\r\n            QuestionID: [model.QuestionID],\r\n            IsCorrectAnswer: [model.IsCorrectAnswer],\r\n            iscoorect: [false],\r\n        });\r\n    }\n\n    SaveAssignmentFormData(data: Assignment, button: string) {\n        if (button === 'addquestion' && this.AssignmentId > 0) {\n            this.questionDetail = new AssignmentListResult();\n            if (this.questionList.length != 0)\n            {\n                this.QuestionOrder = this.questionList.reduce(function (left, right) { return left.Order > right.Order ? left : right; }).Order;\r\n            }\n            this.questionDetail.Order = ++this.QuestionOrder;\n            this.addQuestionToForm();\n        }\n        else {\n            data.AssignmentId = this.AssignmentId;\n            data.Title = this.myFormAssignment.controls['Title'].value;\n            data.Active = data.Active;\n            this._AssignmentService.addUpdateAssignment(data).subscribe((res: number) => {\n                this.AssignmentId = res;\n                this.router.navigate(['/pages/assignment/' + this.AssignmentId]);\n                this.questionDetail = new AssignmentListResult();\n                this.addQuestionToForm();\n                this.getList();\n            });\n        }\n    }\n    totalRecords: number = 0;\n    getList() {\r\n        this._AssignmentService.getAssignment(this.AssignmentId)\r\n            .subscribe((res: AssignmentListFilterModel) => {\r\n                this.myFormAssignment = this.fb.group(\n                    {\n                        Title: [res.Title, [Validators.required]],\n                        Active: [res.Active],\n                    }\n\n                )\r\n            });\r\n    }\n\n\n    SaveAssignmentQuestionFormData(data: AssignmentListResult, button: string) {\n        data.QuestionId = this.myFormQuestionAssignment.controls['QuestionId'].value;\n        data.AssignmentId = this.AssignmentId;\n        data.QuestionText = this.myFormQuestionAssignment.controls['QuestionText'].value;\n        data.QuestionType = this.myFormQuestionAssignment.controls['QuestionType'].value;\n        data.Score = this.myFormQuestionAssignment.controls['Score'].value;\n        data.Order = this.myFormQuestionAssignment.controls['Order'].value;\n        data.Active = this.myFormQuestionAssignment.controls['Active'].value;\n        data.AssignmentQuestionOptionViewModel = [];\n        if ((data as any).QuestionOption != undefined && (data as any).QuestionOption != null) {\n            for (let aa of (data as any).QuestionOption) {\n                let assignmentOption: AssignmentQuestionOption = new AssignmentQuestionOption();\n                assignmentOption.OptionText = aa.OptionText;\n                assignmentOption.IsCorrectAnswer = aa.iscoorect;\n                data.AssignmentQuestionOptionViewModel.push(assignmentOption);\n            }\n        }\n        this._AssignmentService.addUpdateQuestionAssignment(data).subscribe((res: number) => {\n            //this.AssignmentId = res;\n            this.questionDetail = new AssignmentListResult();\n            if (this.questionList.length != 0)\n            {\n                this.QuestionOrder = this.questionList.reduce(function (left, right) { return left.Order > right.Order ? left : right; }).Order;\r\n            }            \n            this.questionDetail.Order = ++this.QuestionOrder+1;\n            this.addQuestionToForm();\n            if (button == 'save')\n                this.closeDialog.nativeElement.click();\n            this.getQuestionListOfAssignment();\n        });\n    }\n    setIsCorrectAnswer(index: number) {\n        const control = <FormArray>this.myFormQuestionAssignment.controls['QuestionOption'];\n        for (let i = 0; i < control.length; i++) {\n            let controls = control.controls[i] as any;\n            if (index != i) {\n                controls.controls[\"iscoorect\"].setValue(false);\n            }\n            else {\n                if (controls.controls[\"iscoorect\"].value == null || controls.controls[\"iscoorect\"].value == false)\n                    controls.controls[\"iscoorect\"].setValue(true);\n                else\n                    controls.controls[\"iscoorect\"].setValue(false);\n            }\n        }\n\n    }\n    getQuestionList() {\r\n        //this._AssignmentService.getAssignment(this.AssignmentId)\r\n        //    .subscribe((res: Assignment[]) => {\r\n        //        this.totalRecords = res.length;\r\n        //        this.AssignmentList = res;\r\n        //    });\r\n    }\n\n\n\n\n\n\n\n    RemoveQuestion(i: number) {\r\n        const control = <FormArray>this.myFormQuestionAssignment.controls['QuestionOption'];\n        control.removeAt(i);\r\n    }\r\n\r\n    questionList: AssignmentListResult[] = [];\r\n    getQuestionListOfAssignment() {\n        this.questionList = [];\n        this._AssignmentService.getQuestionListOfAssignment(this.AssignmentId).subscribe((res: AssignmentListResult[]) => {\n            this.questionList = res;\n        });\n    }\n\n\n    public redirectToEditPage(event: AssignmentListResult) {\n        this._AssignmentService.getQuestionDetail(event.QuestionId).subscribe((res: AssignmentListResult) => {\n            this.buttonAddQuestion.nativeElement.click();\n            this.questionDetail = res;\n            this.addQuestionToForm();\n\n            if (res.AssignmentQuestionOptionViewModel != null && res.AssignmentQuestionOptionViewModel.length > 0) {\n                this.RemoveQuestion(0);\n                for (let aa of res.AssignmentQuestionOptionViewModel) {\n                    this.QuestionOption.push(this.buildOptions(aa));\n                }\n            }\n        });\n\n    }\n    public deleteQuestion(event: AssignmentListResult) {\n        if (confirm(\"Are you sure want to delete this question ?\")) {\n            this._AssignmentService.deleteQuestionWithOption(event.QuestionId).subscribe(res => {\n                this.getQuestionListOfAssignment();\n            });\n        }\n    }\n    @ViewChild('buttonAddQuestion') buttonAddQuestion;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/assignment/assignment.component.ts","//import { NgbModal, NgbDateStruct, NgbTimeStruct } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n\r\n\r\nexport class Assignment {\r\n    public AssignmentId: number;\r\n    public Title: string;\r\n    public Active: boolean;\r\n    ///public OrganizationId: number;\r\n}\r\n\r\nexport class AssignmentQuestionOption {\r\n    public QuestionOptionID: number;\r\n    public QuestionID: number;\r\n    public OptionText: string;\r\n    public IsCorrectAnswer: boolean;\r\n}\r\n\r\nexport class AssignmentListResult {\r\n    public QuestionId: number;\r\n    public AssignmentId: number;\r\n    public QuestionText: string;\r\n    public QuestionType: string;\r\n    public Score: number;\r\n    public Order: number;\r\n    public Active: boolean = true;\r\n    public AssignmentQuestionOptionViewModel: AssignmentQuestionOption[];\r\n}\r\n\r\nexport class AssignmentListFilterModel {\r\n    public Title: string;\r\n    public Active: boolean;\r\n    public PageNo: number;\r\n    public PageSize: number;\r\n    public SortOrder: string;\r\n    public SortColumn: string;\r\n}\r\n\r\n\r\n\r\nexport class AssignmentListData {\r\n\r\n    public TotalRecords: number;\r\n    public AssignmentListResult: AssignmentListResult[] = [];\r\n}\r\n\r\nexport class AssignmentListResultV1 {\r\n    public Title: string\r\n    public RowID: number;\r\n    public AssignmentID: number;\r\n    public Active: string;\r\n}\r\nexport class AssignmentListViewResult {\r\n\r\n    public TotalRecords: number;\r\n    public AssignmentListResult: AssignmentListResultV1[] = [];\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/assignment/assignment.model.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DirectivesModule } from '../../theme/directives/directives.module';\nimport { AssignmentListComponent } from './assignmentlist.component';\nimport { AssignmentComponent } from './assignment.component';\nimport { MultiselectDropdownModule } from 'angular-2-dropdown-multiselect';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ChartModule, CalendarModule, SharedModule, DataTableModule, MultiSelectModule, SelectItem, CheckboxModule } from 'primeng/primeng';\n\nexport const routes = [\n    { path: '', component: AssignmentComponent, pathMatch: 'full' },\n    { path: 'list', component: AssignmentListComponent, data: { breadcrumb: 'List' } },\n    { path: 'assignment', component: AssignmentComponent, data: { breadcrumb: 'Assignment' } },\n    { path: ':id', component: AssignmentComponent, data: { breadcrumb: 'Edit' } },\n]\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        DirectivesModule,\n        MultiselectDropdownModule,\n        NgbModule.forRoot(),\n        CalendarModule,\r\n        SharedModule,\n        DataTableModule,\n        MultiSelectModule,\n        CheckboxModule,\n        RouterModule.forChild(routes)\n    ],\n    declarations: [\n        AssignmentComponent,\n        AssignmentListComponent\n    ]\n})\nexport class AssignmentModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/assignment/assignment.module.ts","module.exports = \"<p-dataTable [value]=\\\"data\\\" [lazy]=\\\"true\\\" [rows]=\\\"10\\\" [paginator]=\\\"true\\\" [rowsPerPageOptions]=\\\"[5,10,20,50]\\\"\\r\\n             #dt resizableColumns=\\\"true\\\" reorderableColumns=\\\"true\\\" [responsive]=\\\"true\\\" [totalRecords]=\\\"totalRecords\\\" (onLazyLoad)=\\\"loadCarsLazy($event)\\\">\\r\\n    <p-column field=\\\"Title\\\" header=\\\"Title\\\" [filter]=\\\"true\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n    <p-column field=\\\"Active\\\" header=\\\"Status\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n    <p-column styleClass=\\\"col-button\\\">\\r\\n        <ng-template pTemplate=\\\"header\\\">\\r\\n            <div class=\\\"ui-helper-clearfix\\\" style=\\\"width:100%\\\">\\r\\n                <button type=\\\"button\\\" pButton icon=\\\"fa-plus\\\" (click)=\\\"redirectToNewPage()\\\" label=\\\"Add\\\"></button>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n        <ng-template let-meeting=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n            <button type=\\\"button\\\" title=\\\"Edit\\\" pButton (click)=\\\"redirectToEditPage(meeting)\\\" icon=\\\"fa fa-pencil-square-o\\\"></button>\\r\\n            <button type=\\\"button\\\" title=\\\"Cancel\\\" pButton (click)=\\\"deleteAction(meeting)\\\" icon=\\\"fa fa-trash-o\\\"></button>\\r\\n        </ng-template>\\r\\n\\r\\n    </p-column>\\r\\n</p-dataTable>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<!--<p-dataTable [value]=\\\"data\\\" [lazy]=\\\"true\\\" [rows]=\\\"10\\\" [paginator]=\\\"true\\\" [rowsPerPageOptions]=\\\"[5,10,20,50]\\\"\\r\\n             #dt resizableColumns=\\\"true\\\" reorderableColumns=\\\"true\\\" [responsive]=\\\"true\\\" [totalRecords]=\\\"totalRecords\\\" (onLazyLoad)=\\\"loadCarsLazy($event)\\\">\\r\\n    <p-column field=\\\"QuestionText\\\" header=\\\"Question\\\" [filter]=\\\"true\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n    <p-column field=\\\"DuratiuonUnit\\\" header=\\\"Duratiuon Unit\\\" [filter]=\\\"true\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n    <p-column field=\\\"QuestionType\\\" header=\\\"Question Type\\\" [filter]=\\\"true\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n    <p-column field=\\\"Score\\\" header=\\\"Score\\\"  [filter]=\\\"true\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n    <p-column field=\\\"Active\\\" header=\\\"Status\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n    <p-column styleClass=\\\"col-button\\\">\\r\\n        <ng-template pTemplate=\\\"header\\\">\\r\\n            <div class=\\\"ui-helper-clearfix\\\" style=\\\"width:100%\\\">\\r\\n                <button type=\\\"button\\\" pButton icon=\\\"fa-plus\\\" (click)=\\\"redirectToNewPage()\\\" label=\\\"Add\\\"></button>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n        <ng-template let-meeting=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n            <button type=\\\"button\\\" title=\\\"Edit\\\" pButton (click)=\\\"redirectToEditPage(meeting)\\\" icon=\\\"fa fa-pencil-square-o\\\"></button>\\r\\n            <button type=\\\"button\\\" title=\\\"Cancel\\\" pButton (click)=\\\"deleteAction(meeting)\\\" icon=\\\"fa fa-trash-o\\\"></button>\\r\\n        </ng-template>\\r\\n\\r\\n    </p-column>\\r\\n</p-dataTable>-->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/assignment/assignmentlist.component.html\n// module id = ../../../../../src/app/pages/assignment/assignmentlist.component.html\n// module chunks = assignment.module","import { Component, ViewEncapsulation, ViewChild, TemplateRef, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Validators, FormGroup, FormArray, FormBuilder } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { EventActionService } from '../eventactions/eventaction.service';\nimport { Location } from '@angular/common';\nimport { IMultiSelectOption, IMultiSelectSettings, IMultiSelectTexts } from 'angular-2-dropdown-multiselect';\nimport { Observable } from 'rxjs/Observable';\nimport { Http, URLSearchParams } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport { LocationModel, TitleModel, SubTitleModel, Title, SubTitle, Action, EventActionStatusModel, events, EventFilterModel, EventViewModel, EventDataModel, EventFilterViewModel, EventAttendeeDataModel, ActionDataModel, ActionResponsiblePersonDataModel, AgendaDataModel } from '../calendar/formeventdata';\nimport { CategoryModel, ActionSourceModel, ActionCommentsListModel } from '../eventactions/eventaction.model';\nimport { MasterEventDataService } from '../calendar/Mastereventdata';\nimport { LazyLoadEvent, FilterMetadata } from 'primeng/components/common/api';\r\nimport { UserViewModel, RoleViewModel, SecurityQuestionModel, OrgaizationViewModel, UserViewListModel, UserViewList } from '../user/user.model';\r\nimport { AccordionModule, MultiSelectModule, SelectItem, CheckboxModule, MenuItem } from 'primeng/primeng';     //accordion and accordion tab\r\nimport { UserService } from \"../user/user.service\";\nimport { AssignmentService } from '../assignment/assignment.service';\n\nimport { AssignmentListResultV1, AssignmentListViewResult, AssignmentListFilterModel, AssignmentListResult, AssignmentListData } from '../assignment/assignment.model';\n@Component({\n    selector: 'app-assignmentlist',\n    templateUrl: './assignmentlist.component.html',\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['../../../../node_modules/primeng/resources/primeng.min.css',\n        \"../../../../node_modules/primeng/resources/themes/omega/theme.css\"],\n    providers: [EventActionService, MasterEventDataService, UserService, AssignmentService],\n\n\n})\n\nexport class AssignmentListComponent implements OnInit {\n    filterData: AssignmentListFilterModel;\n    data: AssignmentListResultV1[];\n    totalRecords: number = 0;\n    constructor(private _AssignmentService: AssignmentService, private _UserService: UserService, private router: Router, private location: Location, private _fb: FormBuilder, private _dataService: EventActionService, private route: ActivatedRoute, private _masterDataService: MasterEventDataService) { }\n    ngOnInit() {\n        this.filterData = new AssignmentListFilterModel();\n        this.filterData.PageNo = 1;\n        this.filterData.PageSize = 10;\n        this.filterData.SortColumn = \"Title\";\n        this.filterData.SortOrder = \"asc\";\n    }\n    getList() {\r\n        this._AssignmentService.getAssignmentList(this.filterData)\r\n            .subscribe((res: AssignmentListViewResult) => {\r\n                this.totalRecords = res.TotalRecords;\r\n                this.data = res.AssignmentListResult;\r\n            });\r\n    }\n    public redirectToEditPage(event: AssignmentListResultV1) {\n        this.router.navigate(['/pages/assignment/' + event.AssignmentID]);\n    }\n    public deleteAction(event: AssignmentListResultV1) {\n        if (confirm(\"Are you sure want to delete this assessment ?\")) {\n            this._AssignmentService.deleteAssignment(event.AssignmentID).subscribe(res => {\n                if (res == 0){\n                    alert(\"Assignment is Active with a training. Please deactivate from training to Delete.\");\r\n                }\n                else {\n                    this.getList();\r\n                }\n            });\n        }\n    }\n    redirectToNewPage() {\n        this.router.navigate(['/pages/assignment']);\n    }\n\r\n    loadCarsLazy(event: LazyLoadEvent) {\r\n\r\n        this.filterData.PageNo = (event.first / event.rows) + 1;\r\n        this.filterData.PageSize = event.rows;\r\n        this.filterData.SortColumn = event.sortField == undefined ? \"Title\" : event.sortField;\r\n        this.filterData.SortOrder = event.sortOrder == 1 ? \"asc\" : \"desc\";\r\n        this.filterData.Title = event.filters.Title == undefined ? '' : event.filters.Title.value;\r\n\r\n        this.getList();\r\n\r\n    }\r\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/assignment/assignmentlist.component.ts"],"sourceRoot":"webpack:///"}