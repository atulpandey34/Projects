{"version":3,"sources":["C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/login/forgotpassword.component.html","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/login/forgotpassword.component.ts","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/login/login.component.html","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/login/login.component.scss","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/login/login.component.ts","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/login/login.module.ts","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/login/resetpassword.component.html","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/login/resetpassword.component.ts"],"names":[],"mappings":"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","file":"login.module.chunk.js","sourcesContent":["module.exports = \"<div class=\\\"d-flex justify-content-center align-items-center w-100 h-100 login-container\\\">\\r\\n    <div class=\\\"col-xl-4 col-md-6 col-10\\\">\\r\\n        <div class=\\\"card border-0 box-shadow rounded-0\\\">\\r\\n            <!--<div class=\\\"card-header d-flex justify-content-center align-items-center border-0 box-shadow\\\">\\r\\n                <i class=\\\"fa fa-sign-in\\\" aria-hidden=\\\"true\\\"></i>\\r\\n            </div>-->\\r\\n            <div class=\\\"card-block text-center pb-1\\\">\\r\\n                <h2>Forgot Pasword</h2>\\r\\n                \\r\\n\\r\\n                <form [formGroup]=\\\"form\\\" novalidate (ngSubmit)=\\\"onSubmit(form.value)\\\" class=\\\"text-left mt-4\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>User Name </label>\\r\\n                        <input formControlName=\\\"UserName\\\" class=\\\"form-control validation-field\\\" (ngModelChange)=\\\"GetSecurityQuestions()\\\" placeholder=\\\"User Name\\\" type=\\\"text\\\">\\r\\n                        <small *ngIf=\\\"!form.controls.UserName.valid\\\" class=\\\"text-danger\\\">\\r\\n                            UserName is required.\\r\\n                        </small>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\" *ngIf=\\\"securityQuestion1.length >0\\\">\\r\\n                        \\r\\n                        <label>{{securityQuestion1}}</label>\\r\\n                       \\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\" *ngIf=\\\"securityQuestion1.length >0\\\">\\r\\n                        <label> Answer</label>\\r\\n                        <input type=\\\"text\\\" formControlName=\\\"SecurityAnswer1\\\" class=\\\"form-control  validation-field\\\">\\r\\n                        <small *ngIf=\\\"!form.controls.SecurityAnswer1.valid\\\" class=\\\"text-danger\\\">\\r\\n                            Security Answer  is required.\\r\\n                        </small>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\" *ngIf=\\\"securityQuestion2.length >0\\\">\\r\\n                        \\r\\n                        \\r\\n                        <label>{{securityQuestion2}}</label>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\" *ngIf=\\\"securityQuestion2.length >0\\\">\\r\\n                        <label> Answer </label>\\r\\n                        <input type=\\\"text\\\" formControlName=\\\"SecurityAnswer2\\\" class=\\\"form-control  validation-field\\\">\\r\\n                        <small *ngIf=\\\"!form.controls.SecurityAnswer2.valid\\\" class=\\\"text-danger\\\">\\r\\n                            Security Answer  is required.\\r\\n                        </small>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <button [disabled]=\\\"!form.valid\\\" class=\\\"btn btn-block\\\" type=\\\"submit\\\">Save</button>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/login/forgotpassword.component.html\n// module id = ../../../../../src/app/pages/login/forgotpassword.component.html\n// module chunks = login.module","import { Component, ViewEncapsulation, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormControl, AbstractControl, FormBuilder, Validators, ReactiveFormsModule, ValidatorFn } from '@angular/forms';\nimport { CustomValidators } from 'ng2-validation';\nimport { LoginService } from \"../login/login.service\";\nimport { ResetPassswordModel, SecurityQustionOfUserModel } from '../login/login.model';\nimport { UserService } from \"../user/user.service\";\nimport { UserViewModel, RoleViewModel, SecurityQuestionModel, OrgaizationViewModel } from '../user/user.model';\n\n@Component({\n    selector: 'app-forgotpassword',\n    templateUrl: './forgotpassword.component.html',\n    styleUrls: ['./login.component.scss'],\n    providers: [LoginService, UserService],\n    encapsulation: ViewEncapsulation.None\n})\nexport class ForgotPasswordComponent implements OnInit {\n    public router: Router;\n    public form: FormGroup;\n    securityQuestionList: SecurityQuestionModel[];\n    securityQuestionList1: SecurityQuestionModel[];\n    securityQuestionList2: SecurityQuestionModel[];\n    securityQuestion1: string='';\n    securityQuestion2: string='';\n\n    constructor(private _UserService: UserService, router: Router, private fb: FormBuilder, private _loginService: LoginService) {\n        this.router = router;\n        this.form = this.fb.group({\n            UserName: new FormControl('', [Validators.required]),\n            //SecurityQuestion1: ['', Validators.compose([Validators.required])],\n            SecurityAnswer1: ['', Validators.compose([Validators.required])],\n            //SecurityQuestion2: ['', Validators.compose([Validators.required])],\n            SecurityAnswer2: ['', Validators.compose([Validators.required])],\n        });\n\n    }\n\n\n\n    ngOnInit() {\n\n        this._loginService.getSecurityQuestion().subscribe((res: SecurityQuestionModel[]) => {\n            this.securityQuestionList = res;\n            this.securityQuestionList1 = res;\n            this.securityQuestionList2 = res;\n        });\n\n    }\n\n    public onSubmit(values: Object): void {\n        if (this.form.valid) {\n            this._loginService.forgotPassword(this.form.value).subscribe((res: string) => {\n                if (res == \"Password sent successfully\")\n                    this.router.navigate(['login']);\n                else\n                    alert(\"Invalid data\");\n            });\n        }\n    }\n    SecurityQuestion1Changesd(questionId: number) {\n        this.securityQuestionList2 = this.securityQuestionList;\n        this.securityQuestionList2 = this.securityQuestionList2.filter(x => x.SecurityQuestionID != questionId);\n\n    }\n    SecurityQuestion2Changesd(questionId: number) {\n        this.securityQuestionList1 = this.securityQuestionList;\n        this.securityQuestionList1 = this.securityQuestionList1.filter(x => x.SecurityQuestionID != questionId);\n    }\n    ngAfterViewInit() {\n        document.getElementById('preloader').classList.add('hide');\n    }\n\n    GetSecurityQuestions() {\n        this._loginService.getSecurityQuestionOfUser(this.form.controls[\"UserName\"].value).subscribe((res: SecurityQustionOfUserModel) => {\n            this.securityQuestion1 = res.SecurityQuestion1;\n            this.securityQuestion2 = res.SecurityQuestion2;\n        });\n    }\n}\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/login/forgotpassword.component.ts","module.exports = \"<div class=\\\"d-flex justify-content-center align-items-center w-100 h-100 login-container\\\">\\n    <div class=\\\"col-xl-4 col-md-6 col-10\\\">\\n        <div class=\\\"card border-0 box-shadow rounded-0\\\">\\n            <div class=\\\"card-header d-flex justify-content-center align-items-center border-0 box-shadow\\\">\\n                <i class=\\\"fa fa-sign-in\\\" aria-hidden=\\\"true\\\"></i>\\n            </div>\\n            <div class=\\\"card-block text-center pb-1\\\">\\n                <h2>Member login</h2>\\n                <a routerLink=\\\"/register\\\" class=\\\"transition\\\">Don't have an account? Sign up now!</a>\\n\\n                <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit(form.value)\\\" class=\\\"text-left mt-4\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <input [formControl]=\\\"email\\\" class=\\\"form-control validation-field\\\" placeholder=\\\"User Name\\\" type=\\\"text\\\">                      \\n                        <small class=\\\"text-danger\\\" *ngIf=\\\"form.get('email').touched && form.get('email').hasError('required')\\\">Email is required</small>                              \\n                        <small class=\\\"text-danger\\\" *ngIf=\\\"form.get('email').touched && form.get('email').hasError('email')\\\">Invalid email address</small>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <input [formControl]=\\\"password\\\" class=\\\"form-control validation-field\\\" placeholder=\\\"Password\\\" type=\\\"password\\\">\\n                        <small class=\\\"text-danger\\\" *ngIf=\\\"form.get('password').touched && form.get('password').hasError('required')\\\">Password is required</small>                              \\n                        <small class=\\\"text-danger\\\" *ngIf=\\\"form.get('password').touched && form.get('password').hasError('minlength')\\\">Password isn't long enough, minimum of 6 characters</small>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label class=\\\"custom-control custom-checkbox\\\">\\n                            <input class=\\\"custom-control-input checkbox-main\\\" [formControl]=\\\"keepLogin\\\" type=\\\"checkbox\\\">\\n                            <span class=\\\"custom-control-indicator\\\"></span>\\n                            <span class=\\\"custom-control-description align-middle\\\">Keep me signed in.</span>\\n                        </label>\\n                        <a class=\\\"transition pull-right\\\" (click)=\\\"RedirectToForgotPassword()\\\">Forgot password?</a>                     \\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <button [disabled]=\\\"!form.valid\\\" class=\\\"btn btn-block\\\" type=\\\"submit\\\">Sign in</button>\\n                    </div>\\n                </form>\\n            </div>\\n            <div class=\\\"card-footer text-center bg-transparent\\\">\\n                <ul class=\\\"list-inline mb-0\\\">\\n                    <li class=\\\"list-inline-item\\\">\\n                        <span class=\\\"fa-stack fa-lg\\\">\\n                            <i class=\\\"fa fa-square-o fa-stack-2x\\\"></i>\\n                            <i class=\\\"fa fa-facebook fa-stack-1x\\\"></i>\\n                        </span>\\n                    </li>\\n                    <li class=\\\"list-inline-item\\\">\\n                        <span class=\\\"fa-stack fa-lg\\\">\\n                            <i class=\\\"fa fa-square-o fa-stack-2x\\\"></i>\\n                            <i class=\\\"fa fa-twitter fa-stack-1x\\\"></i>\\n                        </span>\\n                    </li>\\n                    <li class=\\\"list-inline-item\\\">\\n                        <span class=\\\"fa-stack fa-lg\\\">\\n                            <i class=\\\"fa fa-square-o fa-stack-2x\\\"></i>\\n                            <i class=\\\"fa fa-google fa-stack-1x\\\"></i>\\n                        </span>\\n                    </li>\\n                </ul>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n       \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/login/login.component.html\n// module id = ../../../../../src/app/pages/login/login.component.html\n// module chunks = login.module","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".login-container {\\n  position: absolute; }\\n  .login-container .card .card-header {\\n    width: 80px;\\n    height: 80px;\\n    margin: 0 auto;\\n    margin-top: -40px;\\n    border-radius: 50%;\\n    font-size: 36px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/login/login.component.scss\n// module id = ../../../../../src/app/pages/login/login.component.scss\n// module chunks = login.module","import { Component, ViewEncapsulation, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormControl, AbstractControl, FormBuilder, Validators } from '@angular/forms';\nimport { CustomValidators } from 'ng2-validation';\nimport { LoginService } from \"../login/login.service\";\nimport { LggedInUserModel } from '../login/login.model';\nimport { CookieService, CookieOptions } from 'ngx-cookie';\n\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss'],\n    providers: [LoginService],\n    encapsulation: ViewEncapsulation.None\n})\nexport class LoginComponent implements OnInit {\n    public router: Router;\n    public form: FormGroup;\n    public email: AbstractControl;\n    public password: AbstractControl;\n    public keepLogin: AbstractControl;\n    cookieOptions: any;\n\n    constructor(private _cookieService: CookieService, router: Router, fb: FormBuilder, private _loginService: LoginService) {\n        this.router = router;\n        this.form = fb.group({\n            'email': ['', Validators.compose([Validators.required])],\n            'password': ['', Validators.compose([Validators.required, Validators.minLength(6)])],\n            'keepLogin': [false]\n        });\n\n        this.email = this.form.controls['email'];\n        this.password = this.form.controls['password'];\n        this.keepLogin = this.form.controls['keepLogin'];\n    }\n    ngOnInit() {\n        let token = sessionStorage[\"apiAuthToken\"];\n        if (token != undefined && token != null && token != \"\") {\n            this.router.navigate(['pages/dashboard']);\n        }\n        else {\n            var userName = this._cookieService.get(\"username\");\n            var password = this._cookieService.get(\"password\");\n            if (userName != undefined && userName != null && userName != \"\")\n                this.loginEncryptedUser(userName, password);\n        }\n    }\n    public onSubmit(values: Object): void {\n        if (this.form.valid) {\n            this.loginUser(this.form.controls['email'].value, this.form.controls['password'].value);\n\n        }\n    }\n    loginUser(username: string, password: string) {\n        this._loginService.loginUser(username, password).subscribe((res: LggedInUserModel) => {\n            if (res.UserId > 0) {\n                document.cookie.split(\";\").forEach(function (c) { document.cookie = c.replace(/^ +/, \"\").replace(/=.*/, \"=;expires=\" + new Date().toUTCString() + \";path=/\"); });\n                sessionStorage[\"UserId\"] = res.UserId;\n                sessionStorage[\"apiAuthToken\"] = res.Token;\n                sessionStorage[\"RoleId\"] = res.RoleList;\n                if (this.form.controls['keepLogin'].value == true || this.form.controls['keepLogin'].value == \"true\") {\n                    this.createCookie(\"username\", res.UserName,7);\n                    this.createCookie(\"password\", res.Password,7);\n                }\n                if (res.IsNewUser == true) {\n                    this.router.navigate(['login/resetpassword']);\n                }\n                else {\n                    this.router.navigate(['pages/dashboard']);\n                }\n            }\n            else {\n                alert(\"Invalid Credentials.\");\n            }\n        });\n    }\n    ngAfterViewInit() {\n        document.getElementById('preloader').classList.add('hide');\n    }\n    RedirectToForgotPassword() {\n        this.router.navigate(['login/forgotpassword']);\n    }\n    createCookie(name: string, value: string, days: number) {\n        //this.cookieOptions.domain = window.location.hostname;\n        //this.cookieOptions.expires = new Date(new Date().getTime() + 7 * 24 * 60 * 60 * 1000);\n        //this.cookieOptions.httpOnly = true;\n        //this.cookieOptions.path = window.location.pathname;\n        //this.cookieOptions.secure = false;\n        //this.cookieOptions.storeUnencoded = true;\n        var expires = \"\";\r\n        \r\n        if (days) {\r\n            var date = new Date();\r\n            date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));\r\n            expires = \"; expires=\" + date.toUTCString();\r\n        }\r\n        document.cookie = name + \"=\" + value + expires + \"; path=/\";\n        //this._cookieService.put(key, value);\n\n    }\n    loginEncryptedUser(username: string, password: string) {\n        this._loginService.loginEncryptedUser(username, password).subscribe((res: LggedInUserModel) => {\n            if (res.UserId > 0) {\n                document.cookie.split(\";\").forEach(function (c) { document.cookie = c.replace(/^ +/, \"\").replace(/=.*/, \"=;expires=\" + new Date().toUTCString() + \";path=/\"); });\n                \n                sessionStorage[\"UserId\"] = res.UserId;\n                sessionStorage[\"apiAuthToken\"] = res.Token;\n                sessionStorage[\"RoleId\"] = res.RoleList;\n                \n\n                this.createCookie(\"username\", res.UserName, 7);\n                this.createCookie(\"password\", res.Password,7);\n\n                if (res.IsNewUser == true) {\n                    this.router.navigate(['login/resetpassword']);\n                }\n                else {\n                    this.router.navigate(['pages/dashboard']);\n                }\n            }\n            else {\n                alert(\"Invalid Credentials.\");\n            }\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/login/login.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { LoginComponent } from './login.component';\nimport { ResetPasswordComponent } from './resetpassword.component';\nimport { ForgotPasswordComponent } from './forgotpassword.component';\n\nexport const routes = [\n    { path: '', component: LoginComponent, pathMatch: 'full' },\n    { path: 'resetpassword', component: ResetPasswordComponent, data: { breadcrumb: 'Reset Password' } },\n    { path: 'forgotpassword', component: ForgotPasswordComponent, data: { breadcrumb: 'Forgot Password' } }\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule.forChild(routes)\n    ],\n    declarations: [LoginComponent, ResetPasswordComponent, ForgotPasswordComponent]\n})\n\nexport class LoginModule { }\n\n\n// WEBPACK FOOTER //\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/login/login.module.ts","module.exports = \"<div class=\\\"d-flex justify-content-center align-items-center w-100 h-100 login-container\\\">\\r\\n    <div class=\\\"col-xl-4 col-md-6 col-10\\\">\\r\\n        <div class=\\\"card border-0 box-shadow rounded-0\\\">\\r\\n            <!--<div class=\\\"card-header d-flex justify-content-center align-items-center border-0 box-shadow\\\">\\r\\n                <i class=\\\"fa fa-sign-in\\\" aria-hidden=\\\"true\\\"></i>\\r\\n            </div>-->\\r\\n            <div class=\\\"card-block text-center pb-1\\\">\\r\\n                <h2>Reset Pasword</h2>\\r\\n\\r\\n                <form [formGroup]=\\\"form\\\" novalidate (ngSubmit)=\\\"onSubmit(form.value)\\\" class=\\\"text-left mt-4\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>New Password </label>\\r\\n                        <input formControlName=\\\"Password\\\" class=\\\"form-control validation-field\\\" placeholder=\\\"Password\\\" type=\\\"password\\\">\\r\\n                        <small *ngIf=\\\"!form.controls.Password.valid\\\" class=\\\"text-danger\\\">\\r\\n                            Password is required and minimum 8 characters.\\r\\n                        </small>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Confirm Password </label>\\r\\n                        <input formControlName=\\\"ConfirmPassword\\\" class=\\\"form-control validation-field\\\" placeholder=\\\"Confirm Password\\\" type=\\\"password\\\">\\r\\n                        <small *ngIf=\\\"!form.controls.ConfirmPassword.valid\\\" class=\\\"text-danger\\\">\\r\\n                            Confirm Password is required and minimum 8 characters.\\r\\n                        </small>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Security Question 1</label>\\r\\n                        <select formControlName=\\\"SecurityQuestion1\\\" class=\\\"form-control  validation-field\\\" (change)=\\\"SecurityQuestion1Changesd($event.target.value)\\\">\\r\\n                            <option value=\\\"\\\">--Select--</option>\\r\\n                            <option *ngFor=\\\"let subtitle of securityQuestionList1 \\\"\\r\\n                                    value={{subtitle.SecurityQuestionID}}>\\r\\n                                {{subtitle.Question}}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                        <!--display error message if name is not valid-->\\r\\n                        <small *ngIf=\\\"!form.controls.SecurityQuestion1.valid\\\" class=\\\"text-danger\\\">\\r\\n                            Security Question 1 is required .\\r\\n                        </small>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Security Answer 1</label>\\r\\n                        <input type=\\\"text\\\" formControlName=\\\"SecurityAnswer1\\\" class=\\\"form-control  validation-field\\\">\\r\\n                        <small *ngIf=\\\"!form.controls.SecurityAnswer1.valid\\\" class=\\\"text-danger\\\">\\r\\n                            Security Answer 1 is required.\\r\\n                        </small>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Security Question 2</label>\\r\\n                        <select formControlName=\\\"SecurityQuestion2\\\" class=\\\"form-control  validation-field\\\" (change)=\\\"SecurityQuestion2Changesd($event.target.value)\\\">\\r\\n                            <option value=\\\"\\\">--Select--</option>\\r\\n                            <option *ngFor=\\\"let subtitle of securityQuestionList2 \\\"\\r\\n                                    value={{subtitle.SecurityQuestionID}}>\\r\\n                                {{subtitle.Question}}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                        <small *ngIf=\\\"!form.controls.SecurityQuestion2.valid\\\" class=\\\"text-danger\\\">\\r\\n                            Security Answer 2 is required.\\r\\n                        </small>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Security Answer 2</label>\\r\\n                        <input type=\\\"text\\\" formControlName=\\\"SecurityAnswer2\\\" class=\\\"form-control  validation-field\\\">\\r\\n                        <small *ngIf=\\\"!form.controls.SecurityAnswer2.valid\\\" class=\\\"text-danger\\\">\\r\\n                            Security Answer 2 is required.\\r\\n                        </small>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <button [disabled]=\\\"!form.valid\\\" class=\\\"btn btn-block\\\" type=\\\"submit\\\">Set Password</button>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/login/resetpassword.component.html\n// module id = ../../../../../src/app/pages/login/resetpassword.component.html\n// module chunks = login.module","import { Component, ViewEncapsulation, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormControl, AbstractControl, FormBuilder, Validators, ReactiveFormsModule, ValidatorFn } from '@angular/forms';\nimport { CustomValidators } from 'ng2-validation';\nimport { LoginService } from \"../login/login.service\";\nimport { ResetPassswordModel } from '../login/login.model';\nimport { UserService } from \"../user/user.service\";\nimport { UserViewModel, RoleViewModel, SecurityQuestionModel, OrgaizationViewModel } from '../user/user.model';\n\n@Component({\n    selector: 'app-resetpassword',\n    templateUrl: './resetpassword.component.html',\n    styleUrls: ['./login.component.scss'],\n    providers: [LoginService, UserService],\n    encapsulation: ViewEncapsulation.None\n})\nexport class ResetPasswordComponent implements OnInit {\n    public router: Router;\n    public form: FormGroup;\n    securityQuestionList: SecurityQuestionModel[];\n    securityQuestionList1: SecurityQuestionModel[];\n    securityQuestionList2: SecurityQuestionModel[];\n\n    constructor(private _UserService: UserService, router: Router, private fb: FormBuilder, private _loginService: LoginService) {\n        this.router = router;\n        this.form = this.fb.group({\n            Password: new FormControl('', [Validators.required, Validators.minLength(8)]),\n            ConfirmPassword: new FormControl('', [Validators.required, Validators.minLength(8), this.validateConfirmPassword.bind(this)]),\n            SecurityQuestion1: ['', Validators.compose([Validators.required])],\n            SecurityAnswer1: ['', Validators.compose([Validators.required])],\n            SecurityQuestion2: ['', Validators.compose([Validators.required])],\n            SecurityAnswer2: ['', Validators.compose([Validators.required])],\n        });\n\n    }\n\n    validateConfirmPassword(control: AbstractControl): { [key: string]: any } {\n        let result: boolean = null;\r\n        if (control != undefined) {\r\n            if (control.value == null || control.value == \"\")\r\n                result = true;\r\n            if (this.form != undefined && this.form.controls[\"Password\"].value != this.form.controls[\"ConfirmPassword\"].value) {\r\n                result = true;\r\n                this.form.controls[\"Password\"].updateValueAndValidity();\r\n            }\r\n            \r\n           \r\n        }\r\n        return result ? { 'password': { value: \"Invalid\" } } : null;\r\n    }\n\n    ngOnInit() {\n\n        this._UserService.getSecurityQuestionList().subscribe((res: SecurityQuestionModel[]) => {\n            this.securityQuestionList = res;\n            this.securityQuestionList1 = res;\n            this.securityQuestionList2 = res;\n        });\n    }\n\n    public onSubmit(values: Object): void {\n        if (this.form.valid) {\n            this._loginService.resetPassword(this.form.value).subscribe((res: string) => {\n                if (res == \"Password updated successfully\")\n                    this.router.navigate(['pages/dashboard']);\n            });\n        }\n    }\n    SecurityQuestion1Changesd(questionId: number) {\n        this.securityQuestionList2 = this.securityQuestionList;\n        this.securityQuestionList2 = this.securityQuestionList2.filter(x => x.SecurityQuestionID != questionId);\n\n    }\n    SecurityQuestion2Changesd(questionId: number) {\n        this.securityQuestionList1 = this.securityQuestionList;\n        this.securityQuestionList1 = this.securityQuestionList1.filter(x => x.SecurityQuestionID != questionId);\n    }\n    ngAfterViewInit() {\n        document.getElementById('preloader').classList.add('hide');\n    }\n\n}\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/login/resetpassword.component.ts"],"sourceRoot":"webpack:///"}