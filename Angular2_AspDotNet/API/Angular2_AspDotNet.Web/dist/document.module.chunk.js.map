{"version":3,"sources":["C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/document/document.component.html","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/document/document.component.ts","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/document/document.model.ts","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/document/document.module.ts","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/document/document.service.ts","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/document/documentlist.component.html","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/document/documentlist.component.ts"],"names":[],"mappings":"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","file":"document.module.chunk.js","sourcesContent":["module.exports = \"<form [formGroup]=\\\"myFormDocument\\\" novalidate (ngSubmit)=\\\"SaveDocumentFormData(myFormDocument.value,'save')\\\">\\r\\n    <div style=\\\"margin-top:10px;\\\">\\r\\n        <div style=\\\"margin:20px;\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label>Document Name</label>\\r\\n                <input type=\\\"text\\\" formControlName=\\\"DocumentName\\\" maxlength=\\\"200\\\" class=\\\"form-control validation-field\\\" />\\r\\n                <small [hidden]=\\\"myFormDocument.controls.DocumentName.valid\\\" class=\\\"text-danger\\\">\\r\\n                    Document Name is required\\r\\n                </small>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label>Document Type</label>\\r\\n                <select #DocumentTypeDropdown formControlName=\\\"DocumentType\\\" class=\\\"form-control\\\">\\r\\n                    <option value=\\\"0\\\">--Select--</option>\\r\\n                    <option *ngFor=\\\"let documentType of documentTypeList \\\"\\r\\n                            value={{documentType.MasterDocumentTypeID}}>\\r\\n                        {{documentType.Type}}\\r\\n                    </option>\\r\\n                </select>\\r\\n                <!--<i class=\\\"fa fa-plus fa-3x\\\" aria-hidden=\\\"true\\\" style=\\\"float:left;\\\"></i>-->\\r\\n                <div>\\r\\n                    <button #buttonDocumentType type=\\\"button\\\" pButton icon=\\\"fa-plus\\\" data-toggle=\\\"modal\\\" data-target=\\\"#lg-modal\\\" label=\\\"Add\\\" (click)=\\\"setMasterFormType('Document Type')\\\" style=\\\"float: right;margin-top: 4px;\\\"></button>\\r\\n                </div>\\r\\n                <small [hidden]=\\\"myFormDocument.controls.DocumentType.valid\\\" class=\\\"text-danger\\\">\\r\\n                    Document Type is required\\r\\n                </small>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label>Folder</label>\\r\\n                <select formControlName=\\\"FolderID\\\" class=\\\"form-control\\\">\\r\\n                    <option value=\\\"0\\\">--Select--</option>\\r\\n                    <option *ngFor=\\\"let df of documentFolder \\\"\\r\\n                            value={{df.MasterDocumentFolderID}}>\\r\\n                        {{df.FolderName}}\\r\\n                    </option>\\r\\n                </select>\\r\\n                <div>\\r\\n                    <button #buttonDocumentType type=\\\"button\\\" pButton icon=\\\"fa-plus\\\" data-toggle=\\\"modal\\\" data-target=\\\"#lg-modal\\\" label=\\\"Add\\\" (click)=\\\"setMasterFormType('Folder')\\\" style=\\\"float: right;margin-top: 4px;\\\"></button>\\r\\n                </div>\\r\\n                <small [hidden]=\\\"myFormDocument.controls.FolderID.valid\\\" class=\\\"text-danger\\\">\\r\\n                    Folder is required\\r\\n                </small>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label>Review Frequency Unit</label>\\r\\n                <select formControlName=\\\"ReviewFrequencyUnitID\\\" class=\\\"form-control\\\">\\r\\n                    <option value=\\\"0\\\">--Select--</option>\\r\\n                    <option *ngFor=\\\"let rf of reviewFrequency \\\"\\r\\n                            value={{rf.MasterReviewFrequencyUnitID}}>\\r\\n                        {{rf.ReviewFrequencyUnit}}\\r\\n                    </option>\\r\\n                </select>\\r\\n                <div>\\r\\n                    <button #buttonDocumentType type=\\\"button\\\" pButton icon=\\\"fa-plus\\\" data-toggle=\\\"modal\\\" data-target=\\\"#lg-modal\\\" label=\\\"Add\\\" (click)=\\\"setMasterFormType('Review frequency unit')\\\" style=\\\"float: right;margin-top: 4px;\\\"></button>\\r\\n                </div>\\r\\n                <small [hidden]=\\\"myFormDocument.controls.ReviewFrequencyUnitID.valid\\\" class=\\\"text-danger\\\">\\r\\n                    ReviewFrequency Unit is required\\r\\n                </small>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label>Review Frequency</label>\\r\\n                <input type=\\\"text\\\" maxlength=\\\"9\\\" formControlName=\\\"ReviewFrequency\\\" class=\\\"form-control\\\" />\\r\\n                <small [hidden]=\\\"myFormDocument.controls.ReviewFrequency.valid\\\" class=\\\"text-danger\\\">\\r\\n                    Review Frequency is required\\r\\n                </small>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label>Document Path Type</label>\\r\\n                <label class=\\\"custom-control custom-radio\\\">\\r\\n                    <input type=\\\"radio\\\" name=\\\"DocumentPathType\\\" [checked]=\\\"DocumentPathType ===1\\\" formControlName=\\\"DocumentPathType\\\" (click)=\\\"EnableDisableLinkOrUpload(1)\\\" value=\\\"1\\\" class=\\\"custom-control-input\\\">\\r\\n                    <span class=\\\"custom-control-indicator\\\"></span>\\r\\n                    <span class=\\\"custom-control-description\\\">Url</span>\\r\\n                </label>\\r\\n                <label class=\\\"custom-control custom-radio\\\">\\r\\n                    <input type=\\\"radio\\\" name=\\\"DocumentPathType\\\" [checked]=\\\"DocumentPathType === 2\\\" (click)=\\\"EnableDisableLinkOrUpload(2)\\\" formControlName=\\\"DocumentPathType\\\" value=\\\"2\\\" class=\\\"custom-control-input\\\">\\r\\n                    <span class=\\\"custom-control-indicator\\\"></span>\\r\\n                    <span class=\\\"custom-control-description\\\">Physical file</span>\\r\\n                </label>\\r\\n                <small [hidden]=\\\"myFormDocument.controls.DocumentPathType.valid\\\" class=\\\"text-danger\\\">\\r\\n                    Document Path Type is required\\r\\n                </small>\\r\\n                <button *ngIf=\\\"DocumentVersionID>0\\\" (click)=\\\"showNewVersionForm();\\\" type=\\\"button\\\" data-toggle=\\\"modal\\\" class=\\\"btn btn-primary\\\" style=\\\"float:right;\\\">New Version</button>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"IsNewVersion==true || DocumentId==0\\\">\\r\\n                <div class=\\\"form-group\\\" *ngIf=\\\"DocumentPathType==1\\\">\\r\\n                    <label>External Link</label>\\r\\n\\r\\n                    <input type=\\\"text\\\" maxlength=\\\"200\\\" #youtubelinktextbox formControlName=\\\"ExternalLink\\\" class=\\\"form-control validation-field\\\">\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\" *ngIf=\\\"DocumentPathType==2\\\">\\r\\n                    <div class=\\\"input-group file-upload\\\">\\r\\n                        <input type=\\\"file\\\" (change)=\\\"fileChange(input)\\\" #input class=\\\"file-upload-btn\\\" />\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Choose a file...\\\" value=\\\"{{fileName}}\\\">\\r\\n                        <i class=\\\"fa fa-times delete-file\\\" (click)=\\\"removeFile()\\\" *ngIf=\\\"fileToUpload\\\"></i>\\r\\n                        <span class=\\\"input-group-btn\\\">\\r\\n                            <button class=\\\"btn btn-primary\\\" type=\\\"button\\\"><i class=\\\"fa fa-upload\\\"></i></button>\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\" *ngIf=\\\"DocumentVersionID>0\\\">\\r\\n                    <label>Version</label>\\r\\n                    <input type=\\\"text\\\" maxlength=\\\"9\\\" formControlName=\\\"VersionNumber\\\" class=\\\"form-control\\\" />\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\" *ngIf=\\\"DocumentVersionID>0\\\">\\r\\n                    <label>Changes</label>\\r\\n                    <input type=\\\"text\\\" maxlength=\\\"8000\\\" formControlName=\\\"SummaryOfChanges\\\" class=\\\"form-control\\\" />\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" data-toggle=\\\"modal\\\" class=\\\"btn btn-primary\\\" (click)=\\\"SaveDocumentFormData(myFormDocument.value,'button')\\\" [disabled]=\\\"!myFormDocument.valid\\\">Save</button>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n</form>\\r\\n\\r\\n<div class=\\\"modal fade\\\" id=\\\"lg-modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"modal-large-label\\\" style=\\\"display: none;\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header state modal-primary\\\">\\r\\n                <h4 class=\\\"modal-title\\\" id=\\\"modal-large-label\\\">Add {{this.MasterFormType}}</h4>\\r\\n                <button #closeDialog type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">×</span></button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\" style=\\\"overflow:scroll\\\">\\r\\n                <form [formGroup]=\\\"myFormPopup\\\" novalidate (ngSubmit)=\\\"SaveMasterPopupFormData(myFormPopup.value,'submit')\\\">\\r\\n                    <div style=\\\"margin-top:10px;\\\">\\r\\n                        <div style=\\\"margin:20px;\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label>{{this.MasterFormType}}</label>\\r\\n                                <input type=\\\"text\\\" formControlName=\\\"MasterValueText\\\" class=\\\"form-control validation-field\\\" />\\r\\n                                <small *ngIf=\\\"!myFormPopup.controls.MasterValueText.valid\\\" class=\\\"text-danger\\\">\\r\\n                                    Value is required and must be unique\\r\\n                                </small>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"modal-footer\\\">\\r\\n                                <button class=\\\"btn btn-primary\\\"\\r\\n                                        type=\\\"button\\\"\\r\\n                                        (click)=\\\"SaveMasterPopupFormData(myFormPopup.value,'submit')\\\"\\r\\n                                        [disabled]=\\\"!myFormPopup.valid\\\">\\r\\n                                    Save\\r\\n                                </button>\\r\\n\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal-body\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <p-dataTable [editable]=\\\"true\\\" [value]=\\\"documentVersionListData\\\" [rows]=\\\"10\\\" [paginator]=\\\"true\\\" [rowsPerPageOptions]=\\\"[5,10,20,50]\\\"\\r\\n                     resizableColumns=\\\"true\\\" [responsive]=\\\"true\\\">\\r\\n\\r\\n\\r\\n            <p-column [style]=\\\"{'width':'5%'}\\\" field=\\\"VersionNumber\\\" header=\\\"Version\\\"></p-column>\\r\\n            <p-column [style]=\\\"{'width':'30%'}\\\" field=\\\"ExternalLink\\\" header=\\\"FilePath\\\">\\r\\n                <ng-template let-col let-car=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                    <div class=\\\"form-group\\\" [hidden]=\\\"car.ExternalLink ==''\\\">\\r\\n                        <a style=\\\"text-decoration:underline;\\\" target=\\\"_blank\\\" href=\\\"{{car.ExternalLink}}\\\">{{car.ExternalLink}}</a>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\" [hidden]=\\\"car.FilePath ==null\\\">\\r\\n                        <a (click)=\\\"downloadMaterial(car.DocumentVersionID, car.FileName)\\\" *ngIf=\\\"car.FilePath !=null\\\" style=\\\"text-decoration:underline;\\\" href=\\\"javascript:void(0)\\\">\\r\\n                            {{car.FileName}}\\r\\n                        </a>\\r\\n                    </div>\\r\\n                </ng-template>\\r\\n            </p-column>\\r\\n            <p-column [style]=\\\"{'width':'40%'}\\\" field=\\\"SummaryOfChanges\\\" header=\\\"Changes\\\">\\r\\n                <ng-template let-document=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                    <div>\\r\\n                        <span title=\\\"{{document.SummaryOfChanges}}\\\">{{document.SummaryOfChanges}}</span>\\r\\n                    </div>\\r\\n                </ng-template>\\r\\n\\r\\n            </p-column>\\r\\n            <p-column [style]=\\\"{'width':'10%'}\\\" field=\\\"UploadDate\\\" header=\\\"Upload Date\\\"></p-column>\\r\\n            <p-column [style]=\\\"{'width':'10%'}\\\" field=\\\"UploadedBy\\\" header=\\\"Uploaded By\\\"></p-column>\\r\\n            <p-column [style]=\\\"{'width':'5%'}\\\" styleClass=\\\"col-button\\\">\\r\\n                <ng-template let-meeting=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                    <button type=\\\"button\\\" title=\\\"Delete\\\" pButton (click)=\\\"deleteDocumentVersion(meeting)\\\" icon=\\\"fa fa-trash-o\\\"></button>\\r\\n                </ng-template>\\r\\n            </p-column>\\r\\n        </p-dataTable>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<iframe style=\\\"display:none;\\\" #iframeDownload src=\\\"\\\"></iframe>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/document/document.component.html\n// module id = ../../../../../src/app/pages/document/document.component.html\n// module chunks = document.module","\nimport { Component, ViewEncapsulation, ViewChild, TemplateRef, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Validators, FormGroup, FormArray, FormBuilder, FormControl, AbstractControl, ReactiveFormsModule, ValidatorFn } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport { DocumentViewModel, DocumentTypeViewModel, DocumentVersionViewModel, MasterReviewFrequencyUnitViewModel, MasterDocumentFolderViewModel, MasterPopupViewModel } from '../document/document.model';\nimport { DocumentService } from '../document/document.service';\nimport { environment } from '../../../environments/environment';\nimport * as FileSaver from 'file-saver';\nlet apiURL = environment.apiEndpoint;\n\n@Component({\n    selector: 'app-document',\n    templateUrl: './document.component.html',\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['../../../../node_modules/primeng/resources/primeng.min.css',\n        \"../../../../node_modules/primeng/resources/themes/omega/theme.css\",\n        '../form-elements/controls/file-uploader/file-uploader.component.scss',],\n    providers: [DocumentService],\n\n})\nexport class DocumentComponent implements OnInit {\n    public apiEndPoint: string;\n    myFormDocument: FormGroup; // Model for form\n    myFormPopup: FormGroup;\n    documentTypeList: DocumentTypeViewModel[];//Model for document type dropdown\n    reviewFrequency: MasterReviewFrequencyUnitViewModel[];\n    documentFolder: MasterDocumentFolderViewModel[];\n    documentVersionListData: DocumentVersionViewModel[] = []; // for document version child grid\n    totalDocumentVersionRecords: number = 0;\n    DocumentId: number = 0;\n    DocumentVersionID: number = 0;\n    DocumentPathType: number;\n    IsNewVersion: boolean = false;\n    MasterFormType: string;\n    //MasterFormTypeId: number;\n    MasterFormDocumentType: number=0;\n    MasterFormReviewFrequencyUnitID: number=0;\n    MasterFormFolderID: number = 0;\n    @ViewChild('closeDialog') closeDialog;\n    constructor(private fb: FormBuilder, private _DocumentService: DocumentService, private route: ActivatedRoute, private router: Router, private location: Location) {\n        this.apiEndPoint = apiURL;\n        this.apiEndPoint = this.apiEndPoint + \"/\";\n    }\n    ngOnInit() {\n        this.onload();\n    }\n\n    onload() {\n        this.route.params.subscribe(params => {\r\n            this.DocumentId = params['id'] as number; //log the value of id\r\n            this.DocumentId = this.DocumentId === undefined ? 0 : this.DocumentId;\r\n        });\n        this.getDocumentTypeList();\n        this.getMasterReviewFrequency();\n        this.getAllMasterDocumentFolder();\n        let documentModel = new DocumentViewModel();\n        this.addhtmltoform(documentModel);\n        if (this.DocumentId > 0) {\n            this._DocumentService.getSingleDocument(this.DocumentId).subscribe((res: DocumentViewModel) => {\n                this.DocumentVersionID = res.DocumentVersionID;\n                this.DocumentPathType = res.DocumentPathType;\n                this.IsNewVersion = false;\n                this.addhtmltoform(res);\n            });\n        }\n        this.getDocumentVersionList();\n        this.addMasterPopupToForm();\n    }\n    getDocumentTypeList() {\n        this._DocumentService.getDocumentTypeList().subscribe((res: DocumentTypeViewModel[]) => {\n            this.documentTypeList = res;\n        });\n    }\n    getAllMasterDocumentFolder() {\n        this._DocumentService.getAllMasterDocumentFolder().subscribe((res: MasterDocumentFolderViewModel[]) => {\n            this.documentFolder = res;\n        });\n    }\n    getMasterReviewFrequency() {\n        this._DocumentService.getMasterReviewFrequency().subscribe((res: MasterReviewFrequencyUnitViewModel[]) => {\n            this.reviewFrequency = res;\n        });\n    }\n    addhtmltoform(model: DocumentViewModel) {\n        this.myFormDocument = this.fb.group(\n            {\r\n                DocumentId: [model.DocumentId],\r\n                DocumentName: [model.DocumentName, [Validators.required]],\r\n                DocumentType: [model.DocumentType, [Validators.required]],\r\n                FolderID: [model.FolderID, [Validators.required]],\r\n                ReviewFrequency: [model.ReviewFrequency, [Validators.required]],\r\n                ReviewFrequencyUnitID: [model.ReviewFrequencyUnitID, [Validators.required]],\r\n                VersionNumber: [model.VersionNumber],\r\n                DocumentPathType: [model.DocumentPathType, [Validators.required]],\r\n                FilePath: [model.FilePath],\r\n                SummaryOfChanges: [model.SummaryOfChanges],\r\n                ExternalLink: [model.ExternalLink],\r\n            });\n    }\n    formPopupModel: MasterPopupViewModel = new MasterPopupViewModel();\n    addMasterPopupToForm() {\n        this.myFormPopup = this.fb.group(\n            {\r\n                MasterValueText: [this.formPopupModel.MasterValueText, [Validators.required, this.validateDistinct.bind(this)]],\r\n            });\n    }\n    validateDistinct(control: AbstractControl): { [key: string]: any } {\n        let result: boolean = null;\r\n        if (control.value == null || control.value == \"\")\r\n            result = true;\r\n        else if (control.value != \"\") {\r\n            if (this.MasterFormType == 'Document Type') {\r\n                this._DocumentService.validateDocumentType(control.value).subscribe((res: boolean) => {\r\n                    if (res == false) {\r\n                        result = true;\r\n                        this.myFormPopup.controls[\"MasterValueText\"].setErrors({ remote: \"Document type already exists.\" });\r\n                    }\r\n                });\r\n            }\r\n            else if (this.MasterFormType == 'Review frequency unit') {\r\n                this._DocumentService.validateReviewFrequencyUnit(control.value).subscribe((res: boolean) => {\r\n                    if (res == false) {\r\n                        result = true;\r\n                        this.myFormPopup.controls[\"MasterValueText\"].setErrors({ remote: \"Review frequency unit already exists.\" });\r\n                    }\r\n                });\r\n            }\r\n            else if (this.MasterFormType == 'Folder') {\r\n                this._DocumentService.validateFolder(control.value).subscribe((res: boolean) => {\r\n                    if (res == false) {\r\n                        result = true;\r\n                        this.myFormPopup.controls[\"MasterValueText\"].setErrors({ remote: \"Folder already exists.\" });\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        else\r\n            result = null;\r\n        return result ? { 'MasterValueText': { value: control.value } } : null;\r\n    }\n    SaveDocumentFormData(data: DocumentViewModel, button: string) {\n        this._DocumentService.saveDocument(data).subscribe(res => {\n            this.DocumentVersionID = res.DocumentVersionID\n            this.DocumentId = res.DocumentId;\n            this.getDocumentVersionList();\n            this.saveMaterial();\n            //this.router.navigate(['/pages/document/' + res.DocumentId]);\n        });\n    }\n    SaveMasterPopupFormData(data: MasterPopupViewModel, button: string) {\n        if (this.MasterFormType == 'Document Type') {\n            this._DocumentService.addMasterDocumentType(data.MasterValueText).subscribe((res: number) => {\n                this.getDocumentTypeList();\n                this.MasterFormDocumentType = res;\n                if (this.DocumentId > 0) {\n                    this._DocumentService.getSingleDocument(this.DocumentId).subscribe((res: DocumentViewModel) => {\n                        if (this.MasterFormDocumentType != 0) {\n                            res.DocumentType = this.MasterFormDocumentType;\n                        }\n                        if (this.MasterFormReviewFrequencyUnitID != 0) {\n                            res.ReviewFrequencyUnitID = this.MasterFormReviewFrequencyUnitID;\r\n                        }\n                        if (this.MasterFormFolderID != 0) {\n                            res.FolderID = this.MasterFormFolderID;\r\n                        }\n                        this.addhtmltoform(res);\n                    });\n                } else {\n                    let documentModel = new DocumentViewModel();\n                    var docform = this.myFormDocument;\n                    documentModel.DocumentName = docform.controls.DocumentName.value;\n                    documentModel.ReviewFrequency = docform.controls.ReviewFrequency.value;\n                    documentModel.VersionNumber = docform.controls.VersionNumber.value;\n                    documentModel.DocumentPathType = docform.controls.DocumentPathType.value;\n                    documentModel.DocumentType = this.MasterFormDocumentType;\n                    documentModel.ReviewFrequencyUnitID = this.MasterFormReviewFrequencyUnitID;\n                    documentModel.FolderID = this.MasterFormFolderID;\n                    this.addhtmltoform(documentModel);\n                }\n            });\r\n        }\n        else if (this.MasterFormType == 'Review frequency unit') {\n            this._DocumentService.addMasterReviewFrequencyUnit(data.MasterValueText).subscribe((res: number) => {\n                this.getMasterReviewFrequency();\n                this.MasterFormReviewFrequencyUnitID = res;\n                if (this.DocumentId > 0) {\n                    this._DocumentService.getSingleDocument(this.DocumentId).subscribe((res: DocumentViewModel) => {\n                        if (this.MasterFormDocumentType != 0) {\n                            res.DocumentType = this.MasterFormDocumentType;\n                        }\n                        if (this.MasterFormReviewFrequencyUnitID != 0) {\n                            res.ReviewFrequencyUnitID = this.MasterFormReviewFrequencyUnitID;\r\n                        }\n                        if (this.MasterFormFolderID != 0) {\n                            res.FolderID = this.MasterFormFolderID;\r\n                        }\n                        this.addhtmltoform(res);\n                    });\n                } else {\n                    let documentModel = new DocumentViewModel();\n                    var docform = this.myFormDocument;\n                    documentModel.DocumentName = docform.controls.DocumentName.value;\n                    documentModel.ReviewFrequency = docform.controls.ReviewFrequency.value;\n                    documentModel.VersionNumber = docform.controls.VersionNumber.value;\n                    documentModel.DocumentPathType = docform.controls.DocumentPathType.value;\n                    documentModel.DocumentType = this.MasterFormDocumentType;\n                    documentModel.ReviewFrequencyUnitID = this.MasterFormReviewFrequencyUnitID;\n                    documentModel.FolderID = this.MasterFormFolderID;\n                    this.addhtmltoform(documentModel);\n                }\n            });\n        }\n        else if (this.MasterFormType == 'Folder') {\n            this._DocumentService.addMasterDocumentFolder(data.MasterValueText).subscribe((res: number) => {\n                this.getAllMasterDocumentFolder();\n                this.MasterFormFolderID = res;\n                if (this.DocumentId > 0) {\n                    this._DocumentService.getSingleDocument(this.DocumentId).subscribe((res: DocumentViewModel) => {\n                        if (this.MasterFormDocumentType != 0) {\n                            res.DocumentType = this.MasterFormDocumentType;\n                        }\n                        if (this.MasterFormReviewFrequencyUnitID != 0) {\n                            res.ReviewFrequencyUnitID = this.MasterFormReviewFrequencyUnitID;\r\n                        }\n                        if (this.MasterFormFolderID != 0) {\n                            res.FolderID = this.MasterFormFolderID;\r\n                        }\n                        this.addhtmltoform(res);\n                    });\n                } else {\n                    let documentModel = new DocumentViewModel();\n                    var docform = this.myFormDocument;\n                    documentModel.DocumentName = docform.controls.DocumentName.value;\n                    documentModel.ReviewFrequency = docform.controls.ReviewFrequency.value;\n                    documentModel.VersionNumber = docform.controls.VersionNumber.value;\n                    documentModel.DocumentPathType = docform.controls.DocumentPathType.value;\n                    documentModel.DocumentType = this.MasterFormDocumentType;\n                    documentModel.ReviewFrequencyUnitID = this.MasterFormReviewFrequencyUnitID;\n                    documentModel.FolderID = this.MasterFormFolderID;\n                    this.addhtmltoform(documentModel);\n                }\n            });\n        }\n\n        \n        this.closeDialog.nativeElement.click();\n    }\n    setMasterFormType(masterFormType: string) {\n        this.MasterFormType = masterFormType;\n        this.addMasterPopupToForm();\n    }\n    showNewVersionForm() {\n        this.IsNewVersion = true;\n    }\n    getDocumentVersionList() {\n        this.documentVersionListData = [];\n        this.totalDocumentVersionRecords = 0;\n        this._DocumentService.getDocumentVersionList(this.DocumentId).subscribe((res: DocumentVersionViewModel[]) => {\n            this.documentVersionListData = res;\n            this.totalDocumentVersionRecords = res.length;\n        });\n    }\n    \n    EnableDisableLinkOrUpload(value: number) {\n        this.DocumentPathType = value;\n    }\n    fileName: string;\n    fileToUpload: File;\n    fileChange(input) {\n        const reader = new FileReader();\n        if (input.files.length) {\n            this.fileName = input.files[0].name;\n            this.fileToUpload = input.files[0];\n        }\n    }\n\n    removeFile(): void {\n        this.fileName = '';\n        this.fileToUpload = null;\n    }\n\n    saveMaterial() {\n        if (this.fileToUpload != null && this.fileToUpload != undefined) {\n            let file = this.fileToUpload;\n            let _formData = new FormData();\r\n            _formData.append(\"FileName\", file.name);\r\n            _formData.append(\"MyFile\", file);\r\n            _formData.append(\"DocumentVersionID\", this.DocumentVersionID.toString());\r\n            let body = _formData;\n            this._DocumentService.uploadMaterial(body).subscribe(res => {\n                this.removeFile();\n                this.router.navigate(['/pages/document/' + this.DocumentId]);\n                this.onload();\n            });\n\n        }\n    }\n    deleteDocumentVersion(event: DocumentVersionViewModel) {\n        if (confirm(\"Are you sure want to delete?\")) {\n            this._DocumentService.deleteDocumentVersion(event.DocumentVersionID).subscribe(res => {\n                this.getDocumentVersionList();\n            });\n        }\n    }\n    downloadMaterial(id: number, fileName: string) {\r\n        this._DocumentService.downloadMaterial(id).subscribe(res => {\r\n            FileSaver.saveAs(res, fileName);\r\n        });\n    }\n\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/document/document.component.ts","// Detail page models\r\nexport class DocumentViewModel {\r\n    public DocumentId: number;\r\n    public DocumentName: string;\r\n    public DocumentType: number;\r\n    public FolderID: number;\r\n    public ReviewFrequency: string;\r\n    public ReviewFrequencyUnitID: number;\r\n    public DocumentVersionID: number;\r\n    public VersionNumber: number;\r\n    public DocumentPathType: number;\r\n    public FilePath: string;\r\n    public SummaryOfChanges: string;\r\n    public ExternalLink: string;\r\n\r\n    constructor() {\r\n    }\r\n}\r\nexport class DocumentTypeViewModel {\r\n    public MasterDocumentTypeID: number;\r\n    public Type: string;\r\n\r\n    constructor() {\r\n    }\r\n}\r\nexport class MasterReviewFrequencyUnitViewModel {\r\n    public MasterReviewFrequencyUnitID: number;\r\n    public ReviewFrequencyUnit: string;\r\n}\r\nexport class MasterDocumentFolderViewModel {\r\n    public MasterDocumentFolderID: number;\r\n    public FolderName: string;\r\n}\r\nexport class MasterPopupViewModel {\r\n    public MasterValueText: string;\r\n}\r\n//document version child grid\r\nexport class DocumentVersionViewModel {\r\n    public DocumentVersionID: number;\r\n    public DocumentId: number;\r\n    public UploadedBy: string;\r\n    public ApprovedBy: number;\r\n    public VersionNumber: string;\r\n    public FilePath: string;\r\n    public FileName: string;\r\n    public ExternalLink: string;\r\n    public UploadDate: string;\r\n    public SummaryOfChanges: string;\r\n\r\n    constructor() {\r\n    }\r\n\r\n}\r\n\r\n// List page models\r\nexport class DocumentListFilterModel {\r\n    public DocumentName: string;\r\n    public UploadBy: string;\r\n    public Version: string;\r\n    public Review: string;\r\n    public Type: string;\r\n    public FolderName: string;\r\n    public PageNo: number;\r\n    public PageSize: number;\r\n    public SortOrder: string;\r\n    public SortColumn: string;\r\n}\r\nexport class DocumentListResultV1 {\r\n    public DocumentID: number;\r\n    public DocumentName: string;\r\n    public UploadedBy: string;\r\n    public VersionNumber: string;\r\n    public Review: string;\r\n    public DocumentType: string;\r\n    public FolderName: string;\r\n    public RowID: number;\r\n}\r\nexport class DocumentListViewResult {\r\n\r\n    public TotalRecords: number;\r\n    public DocumentListResult: DocumentListResultV1[] = [];\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/document/document.model.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DirectivesModule } from '../../theme/directives/directives.module';\nimport { DocumentListComponent } from './documentlist.component';\nimport { DocumentComponent } from './document.component';\nimport { MultiselectDropdownModule } from 'angular-2-dropdown-multiselect';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ChartModule, CalendarModule, SharedModule, DataTableModule, MultiSelectModule, SelectItem, CheckboxModule } from 'primeng/primeng';\n\nexport const routes = [\n    { path: '', component: DocumentComponent, pathMatch: 'full' },\n    { path: 'list', component: DocumentListComponent, data: { breadcrumb: 'List' } },\n    { path: 'document', component: DocumentComponent, data: { breadcrumb: 'Document' } },\n    { path: ':id', component: DocumentComponent, data: { breadcrumb: 'Edit' } },\n]\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        DirectivesModule,\n        MultiselectDropdownModule,\n        NgbModule.forRoot(),\n        CalendarModule,\r\n        SharedModule,\n        DataTableModule,\n        MultiSelectModule,\n        CheckboxModule,\n        RouterModule.forChild(routes)\n    ],\n    declarations: [\n        DocumentComponent,\n        DocumentListComponent\n    ]\n})\nexport class DocumentModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/document/document.module.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\n//import { Observable } from 'rxjs/Observable';\r\nimport { Observable } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport 'rxjs/add/operator/map';\r\nimport { IMultiSelectOption, IMultiSelectSettings, IMultiSelectTexts } from 'angular-2-dropdown-multiselect';\r\n\r\nimport { DocumentListFilterModel, DocumentViewModel} from '../document/document.model';\r\nimport { environment } from '../../../environments/environment';\r\nimport { ResponseContentType } from '@angular/http';\r\nlet apiURL = environment.apiEndpoint;\r\n@Injectable()\r\nexport class DocumentService {\r\n\r\n    constructor(private http: Http) {\r\n    }\r\n\r\n    getDocumentList(filter: DocumentListFilterModel): Observable<any> {\r\n        return this.http.post(apiURL + '/Document/GetDocumentListData', filter).map(response => response.json());\r\n    }\r\n\r\n    getDocumentTypeList(): Observable<any> {\r\n        return this.http.get(apiURL + '/Document/GetAllDocumentsType').map(response => response.json());\r\n    }\r\n\r\n    getAllMasterDocumentFolder(): Observable<any> {\r\n        return this.http.get(apiURL + '/Document/GetAllMasterDocumentFolder').map(response => response.json());\r\n    }\r\n\r\n    getMasterReviewFrequency(): Observable<any> {\r\n        return this.http.get(apiURL + '/Document/GetMasterReviewFrequency').map(response => response.json());\r\n    }\r\n\r\n    getSingleDocument(id: number): Observable<any> {\r\n        return this.http.get(apiURL + '/Document/GetSingleDocument?id=' + id).map(response => response.json());\r\n    }\r\n    validateDocumentType(documentType: string): Observable<any> {\r\n        return this.http.get(apiURL + '/Document/ValidateDocumentType?documentType=' + documentType).map(response => response.json());\r\n    }\r\n    validateReviewFrequencyUnit(value: string): Observable<any> {\r\n        return this.http.get(apiURL + '/Document/ValidateReviewFrequencyUnit?value=' + value).map(response => response.json());\r\n    }\r\n    validateFolder(value: string): Observable<any> {\r\n        return this.http.get(apiURL + '/Document/ValidateFolder?value=' + value).map(response => response.json());\r\n    }\r\n    saveDocument(document: DocumentViewModel): Observable<any> {\r\n        return this.http.post(apiURL + '/Document/AddUpdateDocument', document).map(response => response.json());\r\n    }\r\n\r\n    getDocumentVersionList(documentid: number): Observable<any> {\r\n        return this.http.get(apiURL + '/Document/GetDocumentVersionList?documentid='+documentid).map(response => response.json());\r\n    }\r\n    deleteDocument(id: number): Observable<any> {\r\n        return this.http.get(apiURL + '/Document/DeleteDocument?id=' + id).map(response => response.json());\r\n    }\r\n    deleteDocumentVersion(id: number): Observable<any> {\r\n        return this.http.get(apiURL + '/Document/DeleteDocumentVersion?documentVesionId=' + id).map(response => response.json());\r\n    }\r\n    addMasterReviewFrequencyUnit(MasterValueText: string): Observable<any> {\r\n        return this.http.get(apiURL + '/Document/AddMasterReviewFrequencyUnit?MasterValueText='+ MasterValueText).map(response => response.json());\r\n    }\r\n    addMasterDocumentFolder(MasterValueText: string): Observable<any> {\r\n        return this.http.get(apiURL + '/Document/AddMasterDocumentFolder?MasterValueText='+ MasterValueText).map(response => response.json());\r\n    }\r\n    addMasterDocumentType(MasterValueText: string): Observable<any> {\r\n        return this.http.get(apiURL + '/Document/AddMasterDocumentType?MasterValueText='+ MasterValueText).map(response => response.json());\r\n    }\r\n    uploadMaterial(body: FormData) {\r\n        return this.http.post(apiURL + '/Document/SaveMaterial', body).map(res => { });\r\n    }\r\n    downloadMaterial(id: number): Observable<Blob> {\r\n        let options = new RequestOptions({ responseType: ResponseContentType.Blob });\r\n        return this.http.get(apiURL + '/Document/DownLoadMaterialBlob?id=' + id, options)\r\n            .map(response => <Blob>response.blob());\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/document/document.service.ts","module.exports = \"<p-dataTable [value]=\\\"data\\\" [lazy]=\\\"true\\\" [rows]=\\\"10\\\" [paginator]=\\\"true\\\" [rowsPerPageOptions]=\\\"[5,10,20,50]\\\"\\r\\n             #dt resizableColumns=\\\"true\\\" reorderableColumns=\\\"true\\\" [responsive]=\\\"true\\\" [totalRecords]=\\\"totalRecords\\\" (onLazyLoad)=\\\"loadDocumentList($event)\\\">\\r\\n    <p-column field=\\\"DocumentName\\\" header=\\\"Document Name\\\" [filter]=\\\"true\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n    <p-column field=\\\"UploadedBy\\\" header=\\\"Upload By\\\" [filter]=\\\"true\\\"  [sortable]=\\\"true\\\"></p-column>\\r\\n    <p-column field=\\\"FolderName\\\" header=\\\"Folder\\\" [filter]=\\\"true\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n    <p-column field=\\\"VersionNumber\\\" header=\\\"Version\\\" [filter]=\\\"true\\\"  [sortable]=\\\"true\\\"></p-column>\\r\\n    <p-column field=\\\"Review\\\" header=\\\"Review\\\" [filter]=\\\"true\\\"  [sortable]=\\\"true\\\"></p-column>\\r\\n    <p-column field=\\\"DocumentType\\\" header=\\\"Type\\\" [filter]=\\\"true\\\"  [sortable]=\\\"true\\\"></p-column>\\r\\n    <p-column styleClass=\\\"col-button\\\">\\r\\n        <ng-template pTemplate=\\\"header\\\">\\r\\n            <div class=\\\"ui-helper-clearfix\\\" style=\\\"width:100%\\\">\\r\\n                <button type=\\\"button\\\" pButton icon=\\\"fa-plus\\\" (click)=\\\"redirectToNewPage()\\\" label=\\\"Add\\\"></button>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n        <ng-template let-meeting=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n            <button type=\\\"button\\\" title=\\\"Edit\\\" pButton (click)=\\\"redirectToEditPage(meeting)\\\" icon=\\\"fa fa-pencil-square-o\\\"></button>\\r\\n            <button type=\\\"button\\\" title=\\\"Cancel\\\" pButton (click)=\\\"deleteAction(meeting)\\\" icon=\\\"fa fa-trash-o\\\"></button>\\r\\n        </ng-template>\\r\\n\\r\\n    </p-column>\\r\\n</p-dataTable>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/document/documentlist.component.html\n// module id = ../../../../../src/app/pages/document/documentlist.component.html\n// module chunks = document.module","import { Component, ViewEncapsulation, ViewChild, TemplateRef, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Validators, FormGroup, FormArray, FormBuilder } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport { LazyLoadEvent, FilterMetadata } from 'primeng/components/common/api';\r\nimport { DocumentService } from '../document/document.service';\nimport { DocumentListResultV1, DocumentListViewResult, DocumentListFilterModel } from '../document/document.model';\n\n@Component({\n    selector: 'app-documentlist',\n    templateUrl: './documentlist.component.html',\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['../../../../node_modules/primeng/resources/primeng.min.css',\n        \"../../../../node_modules/primeng/resources/themes/omega/theme.css\"],\n    providers: [DocumentService],\n\n\n})\n\nexport class DocumentListComponent implements OnInit {\n    filterData: DocumentListFilterModel;\n    data: DocumentListResultV1[];\n    totalRecords: number = 0;\n    constructor(private _DocumentService: DocumentService, private router: Router, private location: Location, private _fb: FormBuilder, private route: ActivatedRoute) { }\n    ngOnInit() {\n        this.filterData = new DocumentListFilterModel();\n        this.filterData.PageNo = 1;\n        this.filterData.PageSize = 10;\n        this.filterData.SortColumn = \"DocumentName\";\n        this.filterData.SortOrder = \"asc\";\n    }\n    getList() {\r\n        this._DocumentService.getDocumentList(this.filterData)\r\n            .subscribe((res: DocumentListViewResult) => {\r\n                this.totalRecords = res.TotalRecords;\r\n                this.data = res.DocumentListResult;\r\n            });\r\n    }\n    public redirectToEditPage(event: DocumentListResultV1) {\n        this.router.navigate(['/pages/document/' + event.DocumentID]);\n    }\n\n    public deleteAction(event: DocumentListResultV1) {\n        if (confirm(\"Are you sure want to delete this document ?\")) {\n            this._DocumentService.deleteDocument(event.DocumentID).subscribe(res => {\n                this.getList();\n            });\n        }\n    }\n    \n    redirectToNewPage() {\n        this.router.navigate(['/pages/document']);\n    }\n\r\n    loadDocumentList(event: LazyLoadEvent) {\r\n\r\n        this.filterData.PageNo = (event.first / event.rows) + 1;\r\n        this.filterData.PageSize = event.rows;\r\n        this.filterData.SortColumn = event.sortField == undefined ? \"DocumentName\" : event.sortField;\r\n        this.filterData.SortOrder = event.sortOrder == 1 ? \"asc\" : \"desc\";\r\n        this.filterData.DocumentName = event.filters.DocumentName == undefined ? '' : event.filters.DocumentName.value;\r\n        this.filterData.UploadBy = event.filters.UploadedBy == undefined ? '' : event.filters.UploadedBy.value;\r\n        this.filterData.Version = event.filters.VersionNumber == undefined ? '' : event.filters.VersionNumber.value;\r\n        this.filterData.Review = event.filters.Review == undefined ? '' : event.filters.Review.value;\r\n        this.filterData.Type = event.filters.DocumentType == undefined ? '' : event.filters.DocumentType.value;\r\n        this.getList();\r\n\r\n    }\r\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/document/documentlist.component.ts"],"sourceRoot":"webpack:///"}