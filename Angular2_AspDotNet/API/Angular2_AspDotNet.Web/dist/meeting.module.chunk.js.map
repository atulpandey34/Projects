{"version":3,"sources":["C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/meeting/meeting.component.css","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/meeting/meeting.component.html","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/meeting/meeting.component.ts","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/meeting/meeting.module.ts","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/meeting/meetinglist.component.html","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/meeting/meetinglist.component.ts"],"names":[],"mappings":"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","file":"meeting.module.chunk.js","sourcesContent":["exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".ngb-tp {\\r\\n    padding-left: 30% !important;\\r\\n    padding-right: 30% !important;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/meeting/meeting.component.css\n// module id = ../../../../../src/app/pages/meeting/meeting.component.css\n// module chunks = meeting.module","module.exports = \"<div class=\\\"modal-body\\\">\\r\\n    <form [formGroup]=\\\"myForm\\\" novalidate (ngSubmit)=\\\"saveeventformdata(myForm.value)\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label>Meeting</label>\\r\\n            <select formControlName=\\\"subTitle\\\" class=\\\"form-control\\\">\\r\\n                <option value=\\\"\\\">--Select--</option>\\r\\n                <option *ngFor=\\\"let subtitle of subTitleList \\\"\\r\\n                        value={{subtitle.id}}>\\r\\n                    {{subtitle.name}}\\r\\n                </option>\\r\\n            </select>\\r\\n            <!--display error message if name is not valid-->\\r\\n            <small *ngIf=\\\"!myForm.controls.subTitle.valid\\\" class=\\\"text-danger\\\">\\r\\n                Sub title is required .\\r\\n            </small>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label>Location</label>\\r\\n            <select formControlName=\\\"location\\\" class=\\\"form-control\\\">\\r\\n                <option value=\\\"\\\">--Select--</option>\\r\\n                <option *ngFor=\\\"let location of locationList \\\"\\r\\n                        value={{location.LocationID}}>\\r\\n                    {{location.LocationName }}-{{ location.RoomName}}\\r\\n                </option>\\r\\n            </select>\\r\\n            <!--display error message if name is not valid-->\\r\\n            <small *ngIf=\\\"!myForm.controls.subTitle.valid\\\" class=\\\"text-danger\\\">\\r\\n                Location is required .\\r\\n            </small>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label>Date</label>\\r\\n            <!--<input type=\\\"text\\\" formControlName=\\\"date\\\" class=\\\"form-control\\\" type=\\\"date\\\" />-->\\r\\n            <!--<form class=\\\"form-inline\\\">-->\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"input-group\\\">\\r\\n                    <input class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\" name=\\\"eventDate\\\" formControlName=\\\"date\\\" ngbDatepicker #p=\\\"ngbDatepicker\\\">\\r\\n                    <div class=\\\"input-group-addon\\\" (click)=\\\"p.toggle()\\\">\\r\\n                        <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <small *ngIf=\\\"!myForm.controls.date.valid\\\" class=\\\"text-danger\\\">\\r\\n                    Date is required .\\r\\n                </small>\\r\\n            </div>\\r\\n            <!--</form>-->\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\" style=\\\"width:48%;float:right;\\\">\\r\\n            <label>End Time</label>\\r\\n            <!--<input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"endTime\\\" />-->\\r\\n            <ngb-timepicker formControlName=\\\"endTime\\\" class=\\\"form-control\\\"></ngb-timepicker>\\r\\n            <small *ngIf=\\\"!myForm.controls.endTime.valid\\\" class=\\\"text-danger\\\">\\r\\n                End Time is required .\\r\\n            </small>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\" style=\\\"width:48%;\\\">\\r\\n            <label>Start Time</label>\\r\\n            <!--<input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"startTime\\\" />-->\\r\\n            <ngb-timepicker formControlName=\\\"startTime\\\" class=\\\"form-control\\\"></ngb-timepicker>\\r\\n            <small *ngIf=\\\"!myForm.controls.startTime.valid\\\" class=\\\"text-danger\\\">\\r\\n                Start Time is required .\\r\\n            </small>\\r\\n        </div>\\r\\n\\r\\n        <div>\\r\\n            <label>Event Attendees</label>\\r\\n            <ss-multiselect-dropdown [options]=\\\"myOptions\\\" [texts]=\\\"myTexts\\\" [settings]=\\\"mySettings\\\" formControlName=\\\"eventAttendees\\\"></ss-multiselect-dropdown>\\r\\n            <small *ngIf=\\\"!myForm.controls.eventAttendees.valid\\\" class=\\\"text-danger\\\">\\r\\n                Event Attendees is required .\\r\\n            </small>\\r\\n            <!--<ss-multiselect-dropdown [options]=\\\"responsiblePersonOptions\\\" [texts]=\\\"responsiblePersonTexts\\\" [settings]=\\\"responsiblePersonSettings\\\" formControlName=\\\"responsiblePerson\\\" (ngModelChange)=\\\"onResponsiblePersonChange($event)\\\"></ss-multiselect-dropdown>\\r\\n            -->\\r\\n        </div>\\r\\n        <div style=\\\"border:1px solid black;margin-top:10px;\\\">\\r\\n            <div style=\\\"margin:20px;\\\" formArrayName=\\\"agendalist\\\">\\r\\n                <span class=\\\"fa fa-plus-square pull-right\\\" (click)=\\\"AddMoreAgenda()\\\"></span>\\r\\n                <div style=\\\"border-bottom:1px solid black;\\\" *ngFor=\\\"let agnda of myForm['controls'].agendalist['controls']; let i=index\\\">\\r\\n                    <div>\\r\\n                        <!--<span>Agenda {{i + 1}}</span>-->\\r\\n\\r\\n\\r\\n                        <span class=\\\"fa fa-remove pull-right\\\" *ngIf=\\\"myForm.controls.agendalist.controls.length > 0\\\" (click)=\\\"RemoveAgenda(i)\\\">\\r\\n                        </span>\\r\\n                    </div>\\r\\n                    <div [formGroupName]=\\\"i\\\">\\r\\n                        <!--agenda-->\\r\\n                        <div>\\r\\n\\r\\n                            <label>Agenda</label>\\r\\n                            <!--<a (click)=\\\"AddMoreAgenda()\\\" style=\\\"cursor: default;float:right;\\\">\\r\\n                                +\\r\\n                            </a>-->\\r\\n\\r\\n                            <input type=\\\"text\\\" formControlName=\\\"title\\\" class=\\\"form-control\\\">\\r\\n                            <!--display error message if agenda is not valid-->\\r\\n                            <small [hidden]=\\\"myForm.controls.agendalist.controls[i].controls.title.valid\\\" class=\\\"text-danger\\\">\\r\\n                                Agenda is required\\r\\n                            </small>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!--<div style=\\\"margin:20px;\\\" class=\\\"margin-20\\\">\\r\\n                <a (click)=\\\"AddMoreAgenda()\\\" style=\\\"cursor: default\\\">\\r\\n                    Add another Agenda +\\r\\n                </a>\\r\\n            </div>-->\\r\\n        </div>\\r\\n        <div style=\\\"border: 1px solid black;margin-top:10px;\\\">\\r\\n            <div style=\\\"margin:20px;\\\" formArrayName=\\\"actionlist\\\">\\r\\n                <span class=\\\"fa fa-plus-square pull-right\\\" (click)=\\\"AddMoreAction()\\\"></span>\\r\\n                <div style=\\\"border-bottom:1px solid black;\\\" *ngFor=\\\"let acton of myForm['controls'].actionlist['controls']; let i=index\\\">\\r\\n                    <div>\\r\\n                        <!--<span>Agenda {{i + 1}}</span>-->\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                        <span class=\\\"fa fa-remove pull-right\\\" *ngIf=\\\"myForm.controls.actionlist.controls.length > 0\\\" (click)=\\\"RemoveAction(i)\\\">\\r\\n                        </span>\\r\\n                    </div>\\r\\n                    <div [formGroupName]=\\\"i\\\">\\r\\n                        <!--agenda-->\\r\\n                        <div>\\r\\n                            <label>Minutes</label>\\r\\n                            <!--<a (click)=\\\"AddMoreAction()\\\" style=\\\"cursor: default;float:right;\\\">\\r\\n                                +\\r\\n                            </a>-->\\r\\n\\r\\n                            <input type=\\\"text\\\" formControlName=\\\"title\\\" class=\\\"form-control\\\">\\r\\n\\r\\n\\r\\n                            <!--display error message if agenda is not valid-->\\r\\n                            <small [hidden]=\\\"myForm.controls.actionlist.controls[i].controls.title.valid\\\" class=\\\"text-danger\\\">\\r\\n                                Action is required\\r\\n                            </small>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>Action required </label>\\r\\n                            <input style=\\\"float:right;width:90%;\\\" id=\\\"chkboxactionrequired\\\" type=\\\"checkbox\\\" formControlName=\\\"actionRequired\\\" class=\\\"form-control\\\">\\r\\n                            <!--display error message if agenda is not valid-->\\r\\n\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"myForm.controls.actionlist.controls[i].controls.actionRequired.value\\\">\\r\\n                            <label>Due Date</label>\\r\\n                            <!--<input type=\\\"text\\\" formControlName=\\\"duedate\\\" type=\\\"date\\\" class=\\\"form-control\\\">-->\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                \\r\\n                                <div class=\\\"input-group\\\">\\r\\n                                    <input class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\" name=\\\"dueDate\\\" formControlName=\\\"dueDate\\\" ngbDatepicker #d=\\\"ngbDatepicker\\\">\\r\\n                                    <div class=\\\"input-group-addon\\\" (click)=\\\"d.toggle()\\\">\\r\\n                                        <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <small *ngIf=\\\"!myForm.controls.actionlist.controls[i].controls.dueDate.valid\\\" class=\\\"text-danger\\\">\\r\\n                                    Due Date is required\\r\\n                                </small>\\r\\n                            </div>\\r\\n                            <!--display error message if agenda is not valid-->\\r\\n\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"myForm.controls.actionlist.controls[i].controls.actionRequired.value\\\">\\r\\n                            <label>Responsible Persons</label>\\r\\n                            <ss-multiselect-dropdown [options]=\\\"responsiblePersonOptions\\\" [texts]=\\\"responsiblePersonTexts\\\" [settings]=\\\"responsiblePersonSettings\\\" formControlName=\\\"responsiblePerson\\\"></ss-multiselect-dropdown>\\r\\n                            <small [hidden]=\\\"myForm.controls.actionlist.controls[i].controls.responsiblePerson.valid\\\" class=\\\"text-danger\\\">\\r\\n                                Responsible Person is required\\r\\n                            </small>\\r\\n                            <!--<ss-multiselect-dropdown [options]=\\\"responsiblePersonOptions\\\" [texts]=\\\"responsiblePersonTexts\\\" [settings]=\\\"responsiblePersonSettings\\\" formControlName=\\\"responsiblePerson\\\" (ngModelChange)=\\\"onResponsiblePersonChange($event)\\\"></ss-multiselect-dropdown>\\r\\n                            -->\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"myForm.controls.actionlist.controls[i].controls.actionRequired.value\\\" class=\\\"form-group\\\">\\r\\n                            <label>Status</label>\\r\\n                            <select formControlName=\\\"EventActionStatusID\\\" class=\\\"form-control\\\">\\r\\n                                <option value=\\\"\\\">--Select--</option>\\r\\n                                <option *ngFor=\\\"let evebtStatus of eventActionStatusList \\\"\\r\\n                                        value={{evebtStatus.EventActionStatusID}}>\\r\\n                                    {{evebtStatus.ActionName}}\\r\\n                                </option>\\r\\n                            </select>\\r\\n                            <!--display error message if name is not valid-->\\r\\n                            <small [hidden]=\\\"myForm.controls.actionlist.controls[i].controls.EventActionStatusID.valid\\\" class=\\\"text-danger\\\">\\r\\n                                Status is required\\r\\n                            </small>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!--<div style=\\\"margin:20px;\\\" class=\\\"margin-20\\\">\\r\\n                <a (click)=\\\"AddMoreAction()\\\" style=\\\"cursor: default\\\">\\r\\n                    Add another Minute +\\r\\n                </a>\\r\\n            </div>-->\\r\\n        </div>\\r\\n        <!-- we will place our fields here -->\\r\\n        <!--<button type=\\\"submit\\\" [disabled]=\\\"!myForm.valid\\\">Submit</button>-->\\r\\n\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!myForm.valid\\\">Save</button>\\r\\n\\r\\n\\r\\n        </div>\\r\\n    </form>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/meeting/meeting.component.html\n// module id = ../../../../../src/app/pages/meeting/meeting.component.html\n// module chunks = meeting.module","\nimport { Component, ViewEncapsulation, ViewChild, TemplateRef, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Validators, FormGroup, FormArray, FormBuilder, FormControl, AbstractControl, ReactiveFormsModule, ValidatorFn } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { EventActionService } from '../eventactions/eventaction.service';\nimport { Location } from '@angular/common';\nimport { IMultiSelectOption, IMultiSelectSettings, IMultiSelectTexts } from 'angular-2-dropdown-multiselect';\nimport { Observable } from 'rxjs/Observable';\nimport { Http, URLSearchParams } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport { LocationModel, TitleModel, SubTitleModel, Title, SubTitle, Action, EventActionStatusModel, events, EventFilterModel, EventViewModel, EventDataModel, EventFilterViewModel, EventAttendeeDataModel, ActionDataModel, ActionResponsiblePersonDataModel, AgendaDataModel } from '../calendar/formeventdata';\nimport { CategoryModel, ActionSourceModel, ActionCommentsListModel } from '../eventactions/eventaction.model';\nimport { MasterEventDataService } from '../calendar/Mastereventdata';\nimport { NgbModal, NgbDateStruct, NgbTimeStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { MeetingDataService } from '../meeting/meeting.service';\nimport { CalendarModule } from 'primeng/primeng';\n\n@Component({\n    selector: 'app-meeting',\n    templateUrl: './meeting.component.html',\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['../../../../node_modules/primeng/resources/primeng.min.css',\n        \"../../../../node_modules/primeng/resources/themes/omega/theme.css\"\n        , \"../meeting/meeting.component.css\"],\n    providers: [EventActionService, MasterEventDataService, MeetingDataService],\n\n\n})\n\nexport class MeetingComponent implements OnInit {\n    eventId: number = 0;\n    model: NgbDateStruct;\n    public myForm: FormGroup; // our form model\n    locationList: LocationModel[];\n    titleList: Title[];\n    subTitleList: SubTitle[];\n    eventActionStatusList: EventActionStatusModel[];\n    eventFilter: EventFilterModel = new EventFilterModel();\n    constructor(private _meetingService: MeetingDataService, private router: Router, private location: Location, private _fb: FormBuilder, private _dataService: EventActionService, private route: ActivatedRoute, private _masterDataService: MasterEventDataService) { }\n    ngOnInit() {\n        this.route.params.subscribe(params => {\r\n            this.eventId = params['id'] as number; //log the value of id\r\n        });\n        this.onTitleIdChange(1);\n        this.addhtmltoform('', '', '', this.eventId, 1, 0, 0);\n        this._masterDataService.getTitleList().subscribe((res: TitleModel[]) => {\n            this.titleList = [];\n            for (let title of res) {\n                this.titleList.push({\n                    id: title.TitleID,\n                    name: title.TitleName\n                });\n            }\n        });\n\n\n        this._masterDataService.getLocationList().subscribe((res: LocationModel[]) => {\n            this.locationList = [];\n            for (let location of res) {\n                this.locationList.push({\n                    LocationID: location.LocationID,\n                    LocationName: location.LocationName,\n                    RoomName: location.RoomName\n                });\n            }\n        });\n\n\n\n        this._masterDataService.getEventActionStatusList().subscribe((res: EventActionStatusModel[]) => {\n            this.eventActionStatusList = [];\n            for (let eventAction of res) {\n                let eve: EventActionStatusModel = new EventActionStatusModel();\n                eve.EventActionStatusID = eventAction.EventActionStatusID;\n                eve.ActionName = eventAction.ActionName;\n                this.eventActionStatusList.push(\n                    eve);\n            }\n        });\n\n\n        this._masterDataService.getUserList().subscribe(res => { this.myOptions = res; this.responsiblePersonOptions = res; });\n\n        if (this.eventId > 0) {\n            this.editMeeting(this.eventId);\n        }\n\n    }\n\n    onTitleIdChange(titleId: number) {\n\n        //this.subTitleList = this._dataService.getSubTitles().filter((item) => item.titleId == titleId);\n        this._masterDataService.getSubTitleList(titleId).subscribe((res: SubTitleModel[]) => {\n            this.subTitleList = [];\n\n            for (let subTitle of res) {\n                this.subTitleList.push({\n                    id: subTitle.SubTitleId,\n                    name: subTitle.SubTitleName,\n                    titleId: subTitle.TitleID\n                });\n\n            }\n        });\n    }\r\n\r\n\n    addhtmltoform(selectedStartTime, selectedEndTime, selectedDate,\n        eventId: number, EventType: number, EventSubType: number, LocalizationID: number,\n        eventAttendees: EventAttendeeDataModel[] = [new EventAttendeeDataModel()],\n        eventAction: ActionDataModel[] = [new ActionDataModel()],\n        eventAgenda: AgendaDataModel[] = [new AgendaDataModel()]) {\n        var attenlist = [];\n        if (eventId > 0)\n            attenlist = eventAttendees.map(x => x.UserID);\n        this.myForm = this._fb.group({\n            title: [EventType, [Validators.required]],\n            eventID: [eventId],\n            location: [LocalizationID, [Validators.required]],\n            subTitle: [EventSubType, Validators.required],\n            startTime: [selectedStartTime, Validators.required],\n            endTime: [selectedEndTime, Validators.required],\n            date: [selectedDate, Validators.required],\n            eventAttendees: [attenlist, Validators.required],\n            agendalist:\n            this._fb.array([\n                this.initAgenda(new AgendaDataModel())\n            ]),\n            actionlist: this._fb.array([\n                this.initAction(new ActionDataModel())\n            ])\n\n        });\n    }\n\n    public responsiblePersonSettings: IMultiSelectSettings = {\n        enableSearch: true,\n        checkedStyle: 'fontawesome',\n        buttonClasses: 'btn btn-secondary btn-block',\n        dynamicTitleMaxItems: 3,\n        displayAllSelectedText: true,\n        maxHeight: '300px'\n    };\n    // Settings configuration\n    mySettings: IMultiSelectSettings = {\n        enableSearch: true,\n        checkedStyle: 'fontawesome',\n        buttonClasses: 'btn btn-default btn-block',\n        dynamicTitleMaxItems: 3,\n        displayAllSelectedText: true,\n        maxHeight: '300px'\n    };\n    public responsiblePersonTexts: IMultiSelectTexts = {\n        checkAll: 'Select all',\n        uncheckAll: 'Unselect all',\n        checked: 'item selected',\n        checkedPlural: 'items selected',\n        searchPlaceholder: 'Find...',\n        defaultTitle: 'Select',\n        allSelected: 'All selected',\n    };\n    public responsiblePersonOptions: IMultiSelectOption[] = [];\n\n    initAgenda(eventAgenda: AgendaDataModel = new AgendaDataModel()) {\n        return this._fb.group({\n            Id: [],\n            title: [eventAgenda.Title, Validators.required]\n        })\n    }\n    initAction(actionModel: ActionDataModel = new ActionDataModel()) {\n        if (actionModel.ActionResponsiblePersonDataModel == null || actionModel.ActionResponsiblePersonDataModel == undefined)\n            actionModel.ActionResponsiblePersonDataModel = [new ActionResponsiblePersonDataModel()];\n        let actionresp = [];\n        if (this.eventId > 0)\n            actionresp = actionModel.ActionResponsiblePersonDataModel.map(x => x.UserID) as number[];\n        else\n            actionModel.EventActionStatusID = 1;\n        return this._fb.group({\n            Id: [actionModel.ActionID],\r\n            title: [actionModel.Title, Validators.required],\r\n            dueDate: new FormControl({ year: new Date(actionModel.Duedate).getFullYear(), month: new Date(actionModel.Duedate).getMonth() + 1, day: new Date(actionModel.Duedate).getDate() }, [this.validateDueDate.bind(this)]),\r\n            responsiblePerson: new FormControl(actionresp, [this.validateResponsiblePerson.bind(this)]),\r\n            actionRequired: new FormControl(actionModel.IsActionRequired, [this.validateActionRequired.bind(this)]),\r\n            EventActionStatusID: new FormControl(actionModel.EventActionStatusID, [this.validateActionStatus.bind(this)])\n\r\n        })\n    }\n    validateActionRequired(control: AbstractControl): { [key: string]: any } {\n        return null;\n    }\n    validateDueDate(control: AbstractControl): { [key: string]: any } {\n        let result: boolean = null;\r\n        if (control.parent != undefined && control.parent.get(\"actionRequired\").value == false)\r\n            result = null;\r\n        else if (control.value == null || control.value.year == NaN)\r\n            result = true;\r\n        else\r\n            result = null;\r\n        console.log(control.value);\r\n        return result ? { 'duedate': { value: control.value } } : null;\r\n\n\n    }\n    validateResponsiblePerson(control: AbstractControl): { [key: string]: any } {\n\r\n        let result: boolean = null;\r\n        if (control.parent != undefined && control.parent.get(\"actionRequired\").value == false)\r\n            result = null;\r\n        else if (control.value.length == 0)\r\n            result = true;\r\n        else\r\n            result = null;\r\n        console.log(control.value);\r\n        return result ? { 'responsibleperson': { value: control.value } } : null;\r\n\n\n    }\n    validateActionStatus(control: AbstractControl): { [key: string]: any } {\r\n        let result: boolean = null;\r\n        if (control.parent != undefined && control.parent.get(\"actionRequired\").value == false)\r\n            result = null;\r\n        else\r\n            if (control.value == null || control.value == \"\") {\r\n                result = true;\r\n\r\n            }\r\n            else\r\n                result = null;\r\n        console.log(control.value);\r\n        //alert(result);\r\n        return (result ? { 'actionStatus': \"Status is required\" } : null);\r\n\n\n    }\n\n\n    validateMinutes(g: FormGroup): boolean {\r\n        let result: boolean = true;\r\n        if (g.get(\"actionRequired\").value == false)\r\n            result = true;\r\n        else {\r\n            if (g.get(\"title\").value === \"\"\r\n                || g.get(\"dueDate\").value.year === NaN\r\n                || g.get(\"responsiblePerson\").value.length === 0\r\n                || g.get(\"EventActionStatusID\").value === null)\r\n                result = false;\r\n        }\r\n        return result;\r\n    }\n    AddMoreAgenda() {\n        // add agenda to the list\n        const control = <FormArray>this.myForm.controls['agendalist'];\n        control.push(this.initAgenda());\n    }\n    AddMoreAction() {\n        // add action to the list\n        const control = <FormArray>this.myForm.controls['actionlist'];\n        control.push(this.initAction());\n    }\n    RemoveAgenda(i: number) {\n\n        // remove agenda from the list\n        const control = <FormArray>this.myForm.controls['agendalist'];\n        control.removeAt(i);\n    }\n    RemoveAction(i: number) {\n\n        // remove action from the list\n        const control = <FormArray>this.myForm.controls['actionlist'];\n        control.removeAt(i);\n    }\n\n\n    optionsModel: number[] = [1, 2];\n\n\n\n    // Text configuration\n    myTexts: IMultiSelectTexts = {\n        checkAll: 'Select all',\n        uncheckAll: 'Unselect all',\n        checked: 'item selected',\n        checkedPlural: 'items selected',\n        searchPlaceholder: 'Find',\n        searchEmptyResult: 'Nothing found...',\n        searchNoRenderText: 'Type in search box to see results...',\n        defaultTitle: 'Select',\n        allSelected: 'All selected',\n    };\n\n    // Labels / Parents\n    myOptions: IMultiSelectOption[];\n\n    editMeeting(id: number): void {\n        this._meetingService.getEventData(id).subscribe((res: EventFilterViewModel) => {\n\n            let startTime: Date = new Date(res.EventDataModel[0].StartTime);\n            let endTime: Date = new Date(res.EventDataModel[0].EndTime);\n            let selectedStartDate = { hour: startTime.getHours(), minute: startTime.getMinutes(), second: startTime.getSeconds() };\n            let selectedEndtDate = { hour: endTime.getHours(), minute: endTime.getMinutes(), second: endTime.getSeconds() };\n            let date: Date = new Date(res.EventDataModel[0].Date)\n            let selectedDate = { year: date.getFullYear(), month: date.getMonth() + 1, day: date.getDate() };\n            this.onTitleIdChange(res.EventDataModel[0].EventType as number);\n            this.addhtmltoform(selectedStartDate, selectedEndtDate, selectedDate,\n                res.EventDataModel[0].EventID as number,\n                res.EventDataModel[0].EventType as number,\n                res.EventDataModel[0].EventSubType as number,\n                res.EventDataModel[0].LocationID as number,\n                res.EventAttendeeDataModel as EventAttendeeDataModel[],\n                res.ActionDataModel as ActionDataModel[],\n                res.AgendaDataModel as AgendaDataModel[]\n            );\n            const control = <FormArray>this.myForm.controls['agendalist'];\n            control.removeAt(0);\n            for (let x of res.AgendaDataModel as AgendaDataModel[]) {\n                control.push(this.initAgenda(x));\n            }\n            const control1 = <FormArray>this.myForm.controls['actionlist'];\n            control1.removeAt(0);\n            for (let x of res.ActionDataModel as ActionDataModel[]) {\n                control1.push(this.initAction(x));\n            }\n        });\n\n    }\n    saveeventformdata(data: events) {\n        let currentEvent: EventViewModel = new EventViewModel();\n\n        currentEvent.EventDataModel = new EventDataModel();\n        currentEvent.EventDataModel.EventType = data.title;\n        currentEvent.EventDataModel.EventSubType = data.subTitle;\n        currentEvent.EventDataModel.Date = new Date(data.date.year, (data.date.month - 1), data.date.day).toLocaleDateString();\n        currentEvent.EventDataModel.StartTime = new Date(data.date.year, (data.date.month - 1), data.date.day, data.startTime.hour, data.startTime.minute, data.startTime.second).toLocaleString();\n        currentEvent.EventDataModel.EndTime = new Date(data.date.year, (data.date.month - 1), data.date.day, data.endTime.hour, data.endTime.minute, data.endTime.second).toLocaleString();\n        currentEvent.EventDataModel.Recurring = false;\n        currentEvent.EventDataModel.OrganizationID = 1;\n        currentEvent.EventDataModel.LocationID = data.location;\n        currentEvent.EventDataModel.EventID = data.eventID;\n\n        if (data.eventAttendees != null && data.eventAttendees.length > 0) {\n            let eventAttendeeArray: Array<EventAttendeeDataModel> = [];\n            for (let entry of data.eventAttendees) {\n                if (entry > 0) {\n                    let tempmodel: EventAttendeeDataModel = new EventAttendeeDataModel();\n                    tempmodel.UserID = entry;\n                    eventAttendeeArray.push(tempmodel);\n                }\n            }\n            currentEvent.EventAttendeeDataModel = eventAttendeeArray;\n        }\n\n        if (data.agendalist != null && data.agendalist.length > 0) {\n            let eventArray: AgendaDataModel[] = [];\n            for (let entry of data.agendalist) {\n                let tempmodel: AgendaDataModel = new AgendaDataModel();\n                tempmodel.Title = entry.title;\n                tempmodel.OrganizationID = 1;\n                tempmodel.AgendaSource = \"E\";\n                eventArray.push(tempmodel);\n            }\n            currentEvent.AgendaDataModel = eventArray;\n        }\n\n        if (data.actionlist != null && data.actionlist.length > 0) {\n            let eventArray: ActionDataModel[] = [];\n            for (let entry of data.actionlist) {\n                let tempmodel: ActionDataModel = new ActionDataModel();\n                tempmodel.Title = entry.title;\n                tempmodel.OrganizationID = 1;\n                tempmodel.ActionSource = \"E\";\n                tempmodel.EventActionStatusID = entry.EventActionStatusID;\n                tempmodel.IsActionRequired = entry.actionRequired;\n                tempmodel.ActionID = entry.Id;\n                tempmodel.ActionSourceID = 1;\n                tempmodel.CategoryID = 6;\n                tempmodel.Duedate = new Date(entry.dueDate.year, entry.dueDate.month - 1, entry.dueDate.day).toLocaleDateString();\n\n                if (entry.responsiblePerson != null && entry.responsiblePerson.length > 0) {\n                    let eventArray1: ActionResponsiblePersonDataModel[] = [];\n                    for (let entry1 of entry.responsiblePerson) {\n                        if (entry1 > 0) {\n                            let tempmodel1: ActionResponsiblePersonDataModel = new ActionResponsiblePersonDataModel();\n                            tempmodel1.UserID = entry1;\n                            eventArray1.push(tempmodel1);\n                        }\n                    }\n                    tempmodel.ActionResponsiblePersonDataModel = eventArray1;\n                }\n\n                eventArray.push(tempmodel);\n            }\n\n            currentEvent.ActionDataModel = eventArray;\n        }\n\n\n\n        this._masterDataService.addEvent(currentEvent).subscribe(res => {\n\n            this.router.navigate(['/pages/meeting/list']);\n        });\n    }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/meeting/meeting.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DirectivesModule } from '../../theme/directives/directives.module';\nimport { MeetingListComponent } from './meetinglist.component';\nimport { MeetingComponent } from './meeting.component';\nimport { MultiselectDropdownModule } from 'angular-2-dropdown-multiselect';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ChartModule, CalendarModule, SharedModule, DataTableModule, MultiSelectModule, SelectItem, CheckboxModule} from 'primeng/primeng';\n\nexport const routes = [\n    { path: '', component: MeetingComponent, pathMatch: 'full' },\n    { path: 'list', component: MeetingListComponent, data: { breadcrumb: 'Meeting List' } },\n    { path: 'meeting', component: MeetingComponent, data: { breadcrumb: 'Meeting' } },\n    { path: ':id', component: MeetingComponent, data: { breadcrumb: 'Edit' } },\n]\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        DirectivesModule,\n        MultiselectDropdownModule,\n        NgbModule.forRoot(),\n        CalendarModule,\r\n        SharedModule,\n        DataTableModule,\n        MultiSelectModule,\n        CheckboxModule,\n        RouterModule.forChild(routes)\n    ],\n    declarations: [\n        MeetingListComponent,\n        MeetingComponent\n    ]\n})\nexport class MeetingModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/meeting/meeting.module.ts","module.exports = \"<p-dataTable [value]=\\\"data\\\" [lazy]=\\\"true\\\" [rows]=\\\"10\\\" [paginator]=\\\"true\\\" [rowsPerPageOptions]=\\\"[5,10,20,50]\\\"\\r\\n             #dt resizableColumns=\\\"true\\\" reorderableColumns=\\\"true\\\" [responsive]=\\\"true\\\"  [totalRecords]=\\\"totalRecords\\\" (onLazyLoad)=\\\"loadCarsLazy($event)\\\">\\r\\n    <!--<p-footer>\\r\\n    \\r\\n    </p-footer>-->\\r\\n     <p-headerColumnGroup>\\r\\n        <p-row>\\r\\n            <p-column field=\\\"SubTitleName\\\" header=\\\"Sub Title\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" rowspan=\\\"2\\\"></p-column>\\r\\n\\r\\n            <p-column field=\\\"MeetingDate\\\" header=\\\"Date\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" rowspan=\\\"2\\\"></p-column>\\r\\n            <p-column header=\\\"Time Slot\\\" rowspan=\\\"2\\\"></p-column>\\r\\n\\r\\n            <p-column field=\\\"LocationName\\\" header=\\\"Location\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" rowspan=\\\"2\\\"></p-column>\\r\\n            <p-column field=\\\"Attendees\\\" header=\\\"Attendees\\\" rowspan=\\\"2\\\">\\r\\n                <!--<ng-template pTemplate=\\\"filter\\\" let-col>\\r\\n                    <p-multiSelect [options]=\\\"Users\\\" defaultLabel=\\\"All Attendees\\\" (onChange)=\\\"dt.filter($event.value,col.field,col.filterMatchMode)\\\" styleClass=\\\"ui-column-filter\\\"></p-multiSelect>\\r\\n                </ng-template>-->\\r\\n            </p-column>\\r\\n            <p-column field=\\\"AddedBy\\\" header=\\\"Organizer\\\" [sortable]=\\\"true\\\" rowspan=\\\"2\\\"></p-column>\\r\\n            <p-column field=\\\"Actions\\\" header=\\\"Actions\\\" [filter]=\\\"true\\\" colspan=\\\"3\\\">\\r\\n                <ng-template pTemplate=\\\"filter\\\" let-col>\\r\\n                    <br/>\\r\\n                    <p-checkbox name=\\\"actionfilter\\\" (onChange)=\\\"dt.filter($event.value)\\\" value=\\\"2,1\\\" label=\\\"In-Completed\\\" inputId=\\\"2\\\" [(ngModel)]=\\\"selectedAction\\\"></p-checkbox>\\r\\n                    <p-checkbox name=\\\"actionfilter\\\" (onChange)=\\\"dt.filter($event.value)\\\" value=\\\"3\\\" label=\\\"Completed\\\" inputId=\\\"3\\\" [(ngModel)]=\\\"selectedAction\\\"></p-checkbox>\\r\\n                </ng-template>\\r\\n            </p-column>\\r\\n            <p-column header=\\\"Operations\\\" rowspan=\\\"2\\\"></p-column>\\r\\n\\r\\n        </p-row>\\r\\n        <p-row>\\r\\n            <p-column header=\\\"Total\\\"></p-column>\\r\\n            <p-column header=\\\"In-Completed\\\"></p-column>\\r\\n            <p-column header=\\\"Completed\\\"></p-column>\\r\\n        </p-row>\\r\\n\\r\\n    </p-headerColumnGroup>\\r\\n    <p-column field=\\\"SubTitleName\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n\\r\\n\\r\\n\\r\\n    <p-column field=\\\"MeetingDate\\\" header=\\\"Meeting Date\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n    <p-column header=\\\"Meeting Slot\\\">\\r\\n        <ng-template let-col let-meeting=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n            <span>{{meeting.StartTime }} To {{ meeting.EndTime}}</span>\\r\\n        </ng-template>\\r\\n    </p-column>\\r\\n    <!--<p-column field=\\\"StartTime\\\" header=\\\"Start Time\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n    <p-column field=\\\"EndTime\\\" header=\\\"End Time\\\" [sortable]=\\\"true\\\"></p-column>-->\\r\\n    <p-column field=\\\"LocationName\\\" header=\\\"Location\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n    <p-column field=\\\"Attendees\\\"></p-column>\\r\\n    <p-column field=\\\"AddedBy\\\" header=\\\"Organizer\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n    <p-column field=\\\"TotalAction\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n    <p-column field=\\\"InCompleteAction\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n    <p-column field=\\\"CompleteAction\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n    <p-column styleClass=\\\"col-button\\\">\\r\\n        <ng-template pTemplate=\\\"header\\\">\\r\\n            <div class=\\\"ui-helper-clearfix\\\" style=\\\"width:100%\\\"><button type=\\\"button\\\" pButton icon=\\\"fa-plus\\\"  (click)=\\\"redirectToNewPage()\\\" label=\\\"Add\\\"></button></div>\\r\\n        </ng-template>\\r\\n        <ng-template let-meeting=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n            <button type=\\\"button\\\" title=\\\"Edit\\\" pButton (click)=\\\"editMeeting(meeting)\\\" icon=\\\"fa fa-pencil-square-o\\\"></button>\\r\\n            <button type=\\\"button\\\" title=\\\"Cancel\\\" pButton (click)=\\\"deletingMeeting(meeting)\\\" icon=\\\"fa fa-trash-o\\\"></button>\\r\\n        </ng-template>\\r\\n\\r\\n    </p-column>\\r\\n</p-dataTable>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/meeting/meetinglist.component.html\n// module id = ../../../../../src/app/pages/meeting/meetinglist.component.html\n// module chunks = meeting.module","\nimport { Component, ViewEncapsulation, ViewChild, TemplateRef, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Validators, FormGroup, FormArray, FormBuilder } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { EventActionService } from '../eventactions/eventaction.service';\nimport { Location } from '@angular/common';\nimport { IMultiSelectOption, IMultiSelectSettings, IMultiSelectTexts } from 'angular-2-dropdown-multiselect';\nimport { Observable } from 'rxjs/Observable';\nimport { Http, URLSearchParams } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport { LocationModel, TitleModel, SubTitleModel, Title, SubTitle, Action, EventActionStatusModel, events, EventFilterModel, EventViewModel, EventDataModel, EventFilterViewModel, EventAttendeeDataModel, ActionDataModel, ActionResponsiblePersonDataModel, AgendaDataModel } from '../calendar/formeventdata';\nimport { CategoryModel, ActionSourceModel, ActionCommentsListModel } from '../eventactions/eventaction.model';\nimport { MasterEventDataService } from '../calendar/Mastereventdata';\nimport { LazyLoadEvent, FilterMetadata } from 'primeng/components/common/api';\r\nimport { MeetingListModel, MeetingList, UserModel } from './meeting.model';\r\nimport { MeetingDataService } from './meeting.service';\r\nimport { AccordionModule, MultiSelectModule, SelectItem, CheckboxModule } from 'primeng/primeng';     //accordion and accordion tab\r\nimport { MenuItem } from 'primeng/primeng';\n\n@Component({\n    selector: 'app-meetinglist',\n    templateUrl: './meetinglist.component.html',\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['../../../../node_modules/primeng/resources/primeng.min.css',\n        \"../../../../node_modules/primeng/resources/themes/omega/theme.css\"],\n    providers: [EventActionService, MasterEventDataService, MeetingDataService],\n\n\n})\n\nexport class MeetingListComponent implements OnInit {\n    data: MeetingListModel[] = [];\n    totalRecords: number = 0;\n    pageNumber: number = 1;\n    sortColumn: string = \"SubTitleName\";\n    sortOrder: string = \"asc\";\n    pageSize: number = 10;\n    ActionFilter: string;\n    SubTitleFilter: string;\n    DateFilter: string;\n    LocationFilter: string;\n    Users: SelectItem[];\n    selectedAction: string[] = [];\n    constructor(private _meetingService: MeetingDataService, private router: Router, private location: Location, private _fb: FormBuilder, private _dataService: EventActionService, private route: ActivatedRoute, private _masterDataService: MasterEventDataService) { }\n    ngOnInit() {\n        //this._masterDataService.getUserList().subscribe((res: UserModel[]) => {\n        //    this.Users = [];\r\n        //    for (let user of res) {\r\n        //        this.Users.push({ label: user.name, value: user.id });\r\n        //    }\r\n        //});\n        //this.getList(this.pageNumber, this.pageSize, this.sortColumn, this.sortOrder, this.ActionFilter, this.SubTitleFilter, this.DateFilter, this.LocationFilter);\n\n    }\n    loadCarsLazy(event: LazyLoadEvent) {\r\n        //in a real application, make a remote request to load data using state metadata from event\r\n        //event.first = First row offset\r\n        //event.rows = Number of rows per page\r\n        //event.sortField = Field name to sort with\r\n        //event.sortOrder = Sort order as number, 1 for asc and -1 for dec\r\n        //filters: FilterMetadata object having field as key and filter value, filter matchMode as value\r\n\r\n        //imitate db connection over a network\r\n        this.pageNumber = (event.first / event.rows) + 1;\r\n        this.pageSize = event.rows;\r\n        this.sortColumn = event.sortField;\r\n        this.sortOrder = event.sortOrder == 1 ? \"asc\" : \"desc\";\r\n        this.SubTitleFilter = event.filters.SubTitleName == undefined ? '' : event.filters.SubTitleName.value;\r\n        this.ActionFilter = this.selectedAction.join(\",\");\r\n        this.DateFilter = event.filters.MeetingDate == undefined ? '' : event.filters.MeetingDate.value;\r\n        this.LocationFilter = event.filters.LocationName == undefined ? '' : event.filters.LocationName.value;\r\n        this.getList(this.pageNumber, this.pageSize, this.sortColumn, this.sortOrder, this.ActionFilter, this.SubTitleFilter, this.DateFilter, this.LocationFilter);\r\n\r\n    }\n\n    getList(pageNo: number, pageSize: number, sortColumn: string, sortOrder: string,\r\n        actionFilter: string, subTitlNameFilter: string, dateFilter: string, locationFilter: string) {\r\n        this._meetingService.getMeetingList(pageNo, pageSize, sortColumn, sortOrder, actionFilter, subTitlNameFilter, dateFilter, locationFilter).subscribe((res: MeetingList) => {\n            this.data = res.MeetingListModel;\n            this.totalRecords = res.TotalRecords;\n        });\r\n    }\r\n\r\n\n    editMeeting(meetingData: MeetingListModel) {\n        this.router.navigate(['/pages/meeting/' + meetingData.EventID]);\n    }\n\n    deletingMeeting(meetingData: MeetingListModel) {\n        if (confirm(\"Are you sure want to cancel this meeting ?\")) {\n            this._masterDataService.deleteEvent(meetingData.EventID).subscribe(res => {\n                this.getList(this.pageNumber, this.pageSize, this.sortColumn, this.sortOrder, this.ActionFilter, this.SubTitleFilter, this.DateFilter, this.LocationFilter);\n\n            });\n        }\n    }\n    redirectToNewPage() {\n        this.router.navigate(['/pages/meeting']);\n    }\n\n\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/meeting/meetinglist.component.ts"],"sourceRoot":"webpack:///"}