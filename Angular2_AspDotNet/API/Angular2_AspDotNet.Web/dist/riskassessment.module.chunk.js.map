{"version":3,"sources":["C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/riskassessment/riskassessment.component.html","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/riskassessment/riskassessment.component.ts","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/riskassessment/riskassessment.model.ts","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/riskassessment/riskassessment.module.ts","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/riskassessment/riskassessment.service.ts","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/riskassessment/riskassessmentlist.component.html","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/riskassessment/riskassessmentlist.component.ts"],"names":[],"mappings":";;;;;AAAA,gKAAgK,wCAAwC,ojFAAojF,yBAAyB,mCAAmC,gBAAgB,sxDAAsxD,cAAc,GAAG,uBAAuB,spDAAspD,2iCAA2iC,mBAAmB,uCAAuC,gBAAgB,6gCAA6gC,gBAAgB,qKAAqK,yIAAyI,wHAAwH,4gEAA4gE,gBAAgB,6EAA6E,oIAAoI,wHAAwH,mtGAAmtG,6BAA6B,uDAAuD,kBAAkB,wnDAAwnD,gBAAgB,sLAAsL,gBAAgB,2IAA2I,iBAAiB,uGAAuG,eAAe,mGAAmG,eAAe,8GAA8G,gBAAgB,mWAAmW,yCAAyC,OAAO,IAAI,MAAM,0RAA0R,yCAAyC,OAAO,IAAI,MAAM,0HAA0H,eAAe,wFAAwF,eAAe,sFAAsF,eAAe,sLAAsL,gBAAgB,uFAAuF,gBAAgB,4FAA4F,eAAe,gLAAgL,gBAAgB,4yBAA4yB,4rDAA4rD,mhD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA32pB;AAEkD;AACtF;AACgB;AAC9B;AAIZ;AAGsC;AAEL;AAEgP;AAC/N;AAG9B;AAenD;IAuBI,iCAAoB,YAAyB,EAAU,sBAA6C,EAAU,eAAmC,EAAU,MAAc,EAAU,QAAkB,EAAU,GAAgB,EAAU,YAAgC,EAAU,KAAqB,EAAU,kBAA0C;QAAxU,iBAAY,GAAZ,YAAY,CAAa;QAAU,2BAAsB,GAAtB,sBAAsB,CAAuB;QAAU,oBAAe,GAAf,eAAe,CAAoB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,aAAQ,GAAR,QAAQ,CAAU;QAAU,QAAG,GAAH,GAAG,CAAa;QAAU,iBAAY,GAAZ,YAAY,CAAoB;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAU,uBAAkB,GAAlB,kBAAkB,CAAwB;QApB5V,qBAAgB,GAAW,CAAC,CAAC;QAC7B,aAAQ,GAAW,CAAC,CAAC;QACrB,2BAAsB,GAAwB,EAAE,CAAC;QACjD,gBAAW,GAAkB,EAAE,CAAC;QAChC,kBAAa,GAAkB,EAAE,CAAC;QAClC,wBAAmB,GAA4B,EAAE,CAAC;QAC3C,6BAAwB,GAAY,KAAK,CAAC;QAC1C,6BAAwB,GAAyB,EAAE,CAAC;QAC3D,gBAAW,GAAY,KAAK,CAAC;QA0C7B,mBAAc,GAAqB,EAAE,CAAC;QAqB/B,2BAAsB,GAAsB;YAC/C,QAAQ,EAAE,YAAY;YACtB,UAAU,EAAE,cAAc;YAC1B,OAAO,EAAE,eAAe;YACxB,aAAa,EAAE,gBAAgB;YAC/B,iBAAiB,EAAE,SAAS;YAC5B,YAAY,EAAE,QAAQ;YACtB,WAAW,EAAE,cAAc;SAC9B,CAAC;QACK,8BAAyB,GAAyB;YACrD,YAAY,EAAE,IAAI;YAClB,YAAY,EAAE,aAAa;YAC3B,aAAa,EAAE,6BAA6B;YAC5C,oBAAoB,EAAE,CAAC;YACvB,sBAAsB,EAAE,IAAI;YAC5B,SAAS,EAAE,OAAO;SACrB,CAAC;QAsIF,iBAAY,GAAW,CAAC,CAAC;QACzB,eAAU,GAAsB,EAAE,CAAC;IA1M6T,CAAC;IACjW,0CAAQ,GAAR;QAAA,iBA4BC;QA3BG,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC;QAChD,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC;QAChD,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC;QACjD,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC;QAC9C,IAAI,KAAK,GAA4B,IAAI,qGAAuB,EAAE,CAAC;QACnE,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC1B,IAAI,CAAC,qBAAqB,CAAC,IAAI,2GAA6B,EAAE,CAAC,CAAC;QAChE,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,aAAG,IAAM,KAAI,CAAC,wBAAwB,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACjG,IAAI,CAAC,sBAAsB,CAAC,kBAAkB,EAAE,CAAC,SAAS,CAAC,UAAC,GAAwB;YAChF,KAAI,CAAC,sBAAsB,GAAG,GAAG,CAAC;QACtC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,sBAAsB,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,UAAC,GAAkB;YACpE,KAAI,CAAC,WAAW,GAAG,GAAG,CAAC;YACvB,KAAI,CAAC,aAAa,GAAG,GAAG,CAAC;QAC7B,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,sBAAsB,CAAC,sBAAsB,EAAE,CAAC,SAAS,CAAC,UAAC,GAA4B;YACxF,KAAI,CAAC,mBAAmB,GAAG,GAAG,CAAC;QACnC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAM;YAC9B,KAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,IAAI,CAAW,CAAC,CAAC,qBAAqB;YACrE,KAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,KAAI,CAAC,OAAO,EAAE,CAAC;QACnB,CAAC,CAAC,CAAC;QAGJ,4BAA4B;QAC3B,IAAI,CAAC,qBAAqB,EAAE,CAAC;IACjC,CAAC;IAGD,mDAAiB,GAAjB;QAAA,iBAkBC;QAjBG,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,MAAM,GAAG,KAAK,CAAC;YAC/C,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,MAAM,GAAG,KAAK,CAAC;YACjD,mDAAmD;YACnD,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,MAAM,GAAG,KAAK,CAAC;YAElD,IAAI,CAAC,sBAAsB,CAAC,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,SAAS,CAAC,UAAC,GAA4B;gBACxG,KAAI,CAAC,wBAAwB,GAAG,GAAG,CAAC,UAAU,CAAC;gBAC/C,KAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;YAC5B,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,sBAAsB,CAAC,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,SAAS,CAAC,UAAC,GAAqB;gBACjG,KAAI,CAAC,cAAc,GAAG,GAAG,CAAC;gBAC1B,GAAG,CAAC,CAAgB,UAAG,EAAH,WAAG,EAAH,iBAAG,EAAH,IAAG;oBAAlB,IAAI,OAAO;oBACZ,KAAI,CAAC,iBAAiB,GAAG,KAAI,CAAC,iBAAiB,GAAG,uDAAuD,CAAC;iBAC7G;YACL,CAAC,CAAC,CAAC;QACP,CAAC;IACL,CAAC;IAkBD,+CAAa,GAAb,UAAc,SAAkC;QAC5C,IAAI,IAAI,GAAG,EAAE,CAAC;QACd,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;YAC1B,IAAI,GAAG,SAAS,CAAC,2BAA2B,CAAC,GAAG,CAAC,WAAC,IAAI,QAAC,CAAC,MAAM,EAAR,CAAQ,CAAa,CAAC;QAChF,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;YACzB,gBAAgB,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC;YACzC,IAAI,EAAE,CAAC,SAAS,CAAC,IAAI,EAAE,0DAAU,CAAC,QAAQ,CAAC;YAC3C,wBAAwB,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,WAAW,EAAE,EAAE,KAAK,EAAE,IAAI,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,OAAO,EAAE,EAAE,EAAE,0DAAU,CAAC,QAAQ,CAAC;YACxN,cAAc,EAAE,CAAC,SAAS,CAAC,cAAc,EAAE,0DAAU,CAAC,QAAQ,CAAC;YAC/D,kBAAkB,EAAE,CAAC,SAAS,CAAC,kBAAkB,EAAE,0DAAU,CAAC,QAAQ,CAAC;YACvE,kBAAkB,EAAE,CAAC,IAAI,EAAE,0DAAU,CAAC,QAAQ,CAAC;YAC/C,UAAU,EAAE,CAAC,SAAS,CAAC,UAAU,CAAC;SACrC,CAAC,CAAC;IACP,CAAC;IAED,uDAAqB,GAArB,UAAsB,SAAwC;QAC1D,IAAI,CAAC,iCAAiC,GAAG,IAAI,CAAC,wBAAwB,CAAC,SAAS,CAAC,CAAC;IACtF,CAAC;IAED,wDAAsB,GAAtB,UAAuB,SAAsC;QACzD,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;YAClB,oBAAoB,EAAE,CAAC,SAAS,CAAC,oBAAoB,CAAC;YACtD,gBAAgB,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC;YACzC,MAAM,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC;SAC7B,CAAC;IACN,CAAC;IACD,0DAAwB,GAAxB,UAAyB,SAAwC;QAC7D,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;YAClB,sBAAsB,EAAE,CAAC,SAAS,CAAC,sBAAsB,CAAC;YAC1D,QAAQ,EAAE,CAAC,SAAS,CAAC,QAAQ,EAAE,0DAAU,CAAC,QAAQ,CAAC;YACnD,gBAAgB,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC;YACzC,gBAAgB,EAAE,CAAC,SAAS,CAAC,gBAAgB,CAAC;YAC9C,WAAW,EAAE,CAAC,SAAS,CAAC,WAAW,EAAE,0DAAU,CAAC,QAAQ,CAAC;YACzD,oCAAoC,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;gBACjD,IAAI,CAAC,+BAA+B,CAAC,IAAI,kHAAoC,EAAE,CAAC;aACnF,CAAC;YACF,mCAAmC,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;gBAChD,IAAI,CAAC,8BAA8B,CAAC,IAAI,iHAAmC,EAAE,CAAC;aACjF,CAAC;SACL,CAAC;IACN,CAAC;IAED,iEAA+B,GAA/B,UAAgC,SAA+C;QAC3E,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;YAClB,6BAA6B,EAAE,CAAC,SAAS,CAAC,6BAA6B,CAAC;YACxE,gBAAgB,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC;YACzC,sBAAsB,EAAE,CAAC,SAAS,CAAC,sBAAsB,CAAC;YAC1D,IAAI,EAAE,CAAC,SAAS,CAAC,IAAI,EAAE,0DAAU,CAAC,QAAQ,CAAC;YAC3C,QAAQ,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC;YAC9B,SAAS,EAAE,CAAC,SAAS,CAAC,SAAS,CAAC;SACnC,CAAC;IACN,CAAC;IAED,gEAA8B,GAA9B,UAA+B,SAA8C;QACzE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;YAClB,4BAA4B,EAAE,CAAC,SAAS,CAAC,4BAA4B,CAAC;YACtE,sBAAsB,EAAE,CAAC,SAAS,CAAC,sBAAsB,CAAC;YAC1D,WAAW,EAAE,CAAC,SAAS,CAAC,WAAW,EAAE,0DAAU,CAAC,QAAQ,CAAC;YACzD,UAAU,EAAE,CAAC,SAAS,CAAC,UAAU,EAAE,0DAAU,CAAC,QAAQ,CAAC;YACvD,WAAW,EAAE,CAAC,SAAS,CAAC,WAAW,CAAC;YACpC,WAAW,EAAE,CAAC,SAAS,CAAC,WAAW,CAAC;YACpC,UAAU,EAAE,CAAC,SAAS,CAAC,UAAU,CAAC;YAClC,kBAAkB,EAAE,CAAC,SAAS,CAAC,kBAAkB,EAAE,0DAAU,CAAC,QAAQ,CAAC;SAC1E,CAAC;IACN,CAAC;IAED,+CAAa,GAAb;QACI,IAAM,OAAO,GAAc,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,+BAA+B,CAAC,CAAC;QACjF,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,wBAAwB,CAAC,IAAI,2GAA6B,EAAE,CAAC,CAAC,CAAC;IACrF,CAAC;IACD,8CAAY,GAAZ,UAAa,CAAS;QAClB,IAAM,OAAO,GAAc,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,+BAA+B,CAAC,CAAC;QACjF,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACxB,CAAC;IACD,gDAAc,GAAd,UAAe,KAAwF;QAAxF,oCAAkD,kHAAoC,EAAE;QACnG,IAAM,OAAO,GAAc,IAAI,CAAC,iCAAiC,CAAC,QAAQ,CAAC,sCAAsC,CAAC,CAAC;QACnH,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,+BAA+B,CAAC,KAAK,CAAC,CAAC,CAAC;IAC9D,CAAC;IACD,+CAAa,GAAb,UAAc,CAAS,EAAE,CAAS;QAC9B,IAAM,OAAO,GAAc,IAAI,CAAC,iCAAiC,CAAC,QAAQ,CAAC,sCAAsC,CAAC,CAAC;QACnH,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACxB,CAAC;IAED,4DAA0B,GAA1B,UAA2B,IAA6B,EAAE,MAAc;QAAxE,iBAkCC;QAjCG,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,wBAAwB,CAAC,aAAa,CAAC,OAAO,CAAC;QAC5E,IAAI,CAAC,cAAc,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,wBAAwB,CAAC,IAAI,EAAE,IAAI,CAAC,wBAAwB,CAAC,KAAK,GAAG,CAAC,EAAE,IAAI,CAAC,wBAAwB,CAAC,GAAG,CAAC,CAAC,kBAAkB,EAAE,CAAC;QACpK,IAAI,kBAAkB,GAAI,IAAY,CAAC,kBAAkB,CAAC;QAC1D,EAAE,CAAC,CAAC,kBAAkB,IAAI,SAAS,IAAI,kBAAkB,IAAI,IAAI,IAAI,kBAAkB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACjG,IAAI,CAAC,2BAA2B,GAAG,EAAE,CAAC;YACtC,GAAG,CAAC,CAAe,UAAkB,EAAlB,yCAAkB,EAAlB,gCAAkB,EAAlB,IAAkB;gBAAhC,IAAI,MAAM;gBACX,IAAI,IAAI,GAAgC,IAAI,yGAA2B,EAAE,CAAC;gBAC1E,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;gBACrB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;gBAC9C,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC/C;QACL,CAAC;QACD,IAAI,CAAC,sBAAsB,CAAC,uBAAuB,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,UAAC,GAAW;YAC5E,KAAI,CAAC,gBAAgB,GAAG,GAAG,CAAC;YAC5B,EAAE,CAAC,CAAC,MAAM,IAAI,QAAQ,CAAC,CAAC,CAAC;gBACrB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,wBAAwB,GAAG,KAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;YAC7E,CAAC;YACD,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,IAAI,QAAQ,CAAC,CAAC,CAAC;gBAC1B,KAAI,CAAC,aAAa,GAAG,KAAI,CAAC,WAAW,CAAC;gBACtC,IAAI,UAAU,GAAG,KAAI,CAAC,UAAU,CAAC,GAAG,CAAC,WAAC,IAAI,QAAC,CAAC,QAAQ,EAAV,CAAU,CAAC,CAAC;wCAC7C,EAAE;oBACP,KAAI,CAAC,aAAa,GAAG,KAAI,CAAC,aAAa,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,QAAQ,IAAI,EAAE,EAAhB,CAAgB,CAAC,CAAC;gBAC1E,CAAC;gBAFD,GAAG,CAAC,CAAW,UAAU,EAAV,yBAAU,EAAV,wBAAU,EAAV,IAAU;oBAApB,IAAI,EAAE;4BAAF,EAAE;iBAEV;gBACD,KAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;gBAClB,KAAI,CAAC,qBAAqB,CAAC,IAAI,2GAA6B,EAAE,CAAC,CAAC;YACpE,CAAC;YACD,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,IAAI,UAAU,CAAC,CAAC,CAAC;gBAC5B,KAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;gBAC/C,KAAI,CAAC,iBAAiB,EAAE,CAAC;gBACzB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,wBAAwB,GAAG,KAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;YAC7E,CAAC;QAEL,CAAC,CAAC,CAAC;IACP,CAAC;IACD,gDAAc,GAAd,UAAe,IAAmC;QAAlD,iBAQC;QAPG,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAC9C,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC5C,IAAI,CAAC,sBAAsB,CAAC,6BAA6B,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,UAAC,GAAW;YAClF,KAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;YACpB,KAAI,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;YACvC,KAAI,CAAC,OAAO,EAAE,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAGD,8CAAY,GAAZ,UAAa,KAAoB;QAE7B,IAAI,CAAC,OAAO,EAAE,CAAC;IACnB,CAAC;IAGD,yCAAO,GAAP;QAAA,iBAMC;QALG,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,IAAI,CAAC,gBAAgB,CAAC;aAC3D,SAAS,CAAC,UAAC,GAAsB;YAC9B,KAAI,CAAC,YAAY,GAAG,GAAG,CAAC,MAAM,CAAC;YAC/B,KAAI,CAAC,UAAU,GAAG,GAAG,CAAC;QAC1B,CAAC,CAAC,CAAC;IACX,CAAC;IACD,4CAAU,GAAV,UAAW,KAAsB;QAAjC,iBA2BC;QA1BG,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC,SAAS,CAAC,UAAC,WAA0C;YACzH,KAAI,CAAC,aAAa,GAAG,KAAI,CAAC,WAAW,CAAC;YACtC,KAAI,CAAC,cAAc,CAAC,aAAa,CAAC,QAAQ,GAAG,IAAI,CAAC;YAClD,uDAAuD;YACvD,uDAAuD;YACvD,wCAAwC;YACxC,8CAA8C;YAC9C,oEAAoE;YACpE,sCAAsC;YACtC,KAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC,CAAC;YACxC,KAAI,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACzB,IAAM,OAAO,GAAc,KAAI,CAAC,iCAAiC,CAAC,QAAQ,CAAC,qCAAqC,CAAC,CAAC;YAClH,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACpB,EAAE,CAAC,CAAC,WAAW,CAAC,oCAAoC,IAAI,IAAI,CAAC,CAAC,CAAC;gBAC3D,GAAG,CAAC,CAAU,UAAgD,EAAhD,gBAAW,CAAC,oCAAoC,EAAhD,cAAgD,EAAhD,IAAgD;oBAAzD,IAAI,CAAC;oBACN,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;iBAC1B;YACL,CAAC;YACD,EAAE,CAAC,CAAC,WAAW,CAAC,mCAAmC,IAAI,IAAI,CAAC,CAAC,CAAC;gBAC1D,GAAG,CAAC,CAAU,UAA+C,EAA/C,gBAAW,CAAC,mCAAmC,EAA/C,cAA+C,EAA/C,IAA+C;oBAAxD,IAAI,CAAC;oBACN,IAAM,SAAO,GAAc,KAAI,CAAC,iCAAiC,CAAC,QAAQ,CAAC,qCAAqC,CAAC,CAAC;oBAClH,SAAO,CAAC,IAAI,CAAC,KAAI,CAAC,8BAA8B,CAAC,CAAC,CAAC,CAAC,CAAC;iBACxD;YACL,CAAC;QACL,CAAC,CAAC,CAAC;IAEP,CAAC;IACD,6CAAW,GAAX;QACI,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,QAAQ,GAAG,KAAK,CAAC;QACnD,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,QAAQ,GAAG,KAAK,CAAC;IAC1D,CAAC;IAKD,uDAAqB,GAArB,UAAsB,QAAqB;QAArB,wCAAqB;QACvC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;YAChC,WAAW,EAAE,IAAI,2DAAW,CAAC,QAAQ,EAAE,CAAC,0DAAU,CAAC,QAAQ,EAAE,0DAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;SAC3H,CAAC,CAAC;IACP,CAAC;IAED,kDAAgB,GAAhB,UAAiB,OAAwB;QAAzC,iBAeC;QAdG,IAAI,MAAM,GAAY,IAAI,CAAC;QAC3B,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,IAAI,IAAI,IAAI,OAAO,CAAC,KAAK,IAAI,EAAE,CAAC;YAC7C,MAAM,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,CAAC;YAC3B,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,UAAC,GAAY;gBACnE,EAAE,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC;oBACf,MAAM,GAAG,IAAI,CAAC;oBACd,KAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,EAAE,MAAM,EAAE,2CAA2C,EAAE,CAAC,CAAC;gBAClH,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC;QACD,IAAI;YACA,MAAM,GAAG,IAAI,CAAC;QAClB,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,UAAU,EAAE,EAAE,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;IACpE,CAAC;IACD,+CAAa,GAAb;QAAA,iBAKC;QAJG,IAAI,CAAC,sBAAsB,CAAC,mBAAmB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,SAAS,CAAC,aAAG;YAChF,KAAI,CAAC,oBAAoB,EAAE,CAAC;YAC5B,KAAI,CAAC,iBAAiB,EAAE,CAAC;QAC7B,CAAC,CAAC,CAAC;IACP,CAAC;IACD,sDAAoB,GAApB;QACI,IAAI,CAAC,oBAAoB,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;IACpD,CAAC;IACD,qDAAmB,GAAnB;QACI,IAAI,CAAC,qBAAqB,CAAC,EAAE,CAAC,CAAC;IACnC,CAAC;IACD,mCAAmC;IAEnC,wDAAsB,GAAtB;QACI,IAAI,MAAM,GAAW,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,UAAU,IAAI,KAAK,IAAI,CAAC,CAAC,UAAU,IAAI,IAAI,EAA7C,CAA6C,CAAC,CAAC,MAAM,CAAC;QACvG,IAAI,YAAY,GAAW,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,UAAU,IAAI,QAAQ,IAAI,CAAC,CAAC,UAAU,IAAI,IAAI,EAAhD,CAAgD,CAAC,CAAC,MAAM,CAAC;QAChH,IAAI,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,MAAM,IAAI,cAAc,CAAC,QAAQ,CAAW,EAA9C,CAA8C,CAAC,CAAC;QACjG,EAAE,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;YACX,KAAK,CAAC,+CAA+C,CAAC,CAAC;QAC3D,IAAI,CAAC,EAAE,CAAC,CAAC,YAAY,GAAG,CAAC,IAAI,UAAU,IAAI,IAAI,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,IAAI,IAAI,CAAC,CAAC,CAAC;YAClF,KAAK,CAAC,iEAAiE,CAAC,CAAC;QAC7E,CAAC;QACD,IAAI;YACA,IAAI,CAAC,sBAAsB,CAAC,0BAA0B,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,SAAS,CAAC,aAAG,IAAM,CAAC,CAAC,CAAC;IAC5G,CAAC;IACD,qDAAmB,GAAnB;QACI,IAAI,CAAC,sBAAsB,CAAC,qBAAqB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,SAAS,CAAC,aAAG;QAEtF,CAAC,CAAC,CAAC;IACP,CAAC;IACD,sDAAoB,GAApB;QAAA,iBAgBC;QAfG,IAAI,CAAC,sBAAsB,CAAC,oBAAoB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,SAAS,CAAC,UAAC,GAAW;YAC1F,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,wBAAwB,GAAG,GAAG,CAAC,CAAC,CAAC;YACvD,KAAI,CAAC,gBAAgB,GAAG,GAAG,CAAC;YAC5B,mBAAmB;YACnB,4BAA4B;YAC5B,kBAAkB;YAClB,uDAAuD;YACvD,4BAA4B;YAC5B,iBAAiB;YACjB,8BAA8B;YAC9B,kDAAkD;YAClD,kDAAkD;YAClD,mDAAmD;YACnD,gDAAgD;QACpD,CAAC,CAAC,CAAC;IACP,CAAC;IAtUyB;QAAzB,gEAAS,CAAC,aAAa,CAAC;;gEAAa;IACT;QAA5B,gEAAS,CAAC,gBAAgB,CAAC;;mEAAgB;IACZ;QAA/B,gEAAS,CAAC,mBAAmB,CAAC;;sEAAmB;IACrB;QAA5B,gEAAS,CAAC,gBAAgB,CAAC;;mEAAgB;IACf;QAA5B,gEAAS,CAAC,gBAAgB,CAAC;;mEAAgB;IACd;QAA7B,gEAAS,CAAC,iBAAiB,CAAC;;oEAAiB;IACnB;QAA1B,gEAAS,CAAC,cAAc,CAAC;;iEAAc;IACN;QAAjC,gEAAS,CAAC,qBAAqB,CAAC;;wEAAqB;IACf;QAAtC,gEAAS,CAAC,0BAA0B,CAAC;;6EAA0B;IAwP7B;QAAlC,gEAAS,CAAC,sBAAsB,CAAC;;yEAAsB;IA5Q/C,uBAAuB;QAbnC,gEAAS,CAAC;YACP,QAAQ,EAAE,oBAAoB;YAC9B,0GAA8C;YAC9C,aAAa,EAAE,gEAAiB,CAAC,IAAI;YACrC,4PAGC;YACD,SAAS,EAAE,CAAC,wEAAW,EAAE,6FAAkB,EAAE,yFAAsB,EAAE,oFAAkB,EAAE,qGAAqB,CAAC;SAGlH,CAAC;6DAyBoC,wEAAW,oBAAX,wEAAW,sDAAkC,qGAAqB,oBAArB,qGAAqB,sDAA2B,oFAAkB,oBAAlB,oFAAkB,sDAAkB,uDAAM,oBAAN,uDAAM,sDAAoB,yDAAQ,oBAAR,yDAAQ,sDAAe,2DAAW,oBAAX,2DAAW,sDAAwB,6FAAkB,oBAAlB,6FAAkB,sDAAiB,+DAAc,oBAAd,+DAAc,sDAA8B,yFAAsB,oBAAtB,yFAAsB;OAvBnV,uBAAuB,CAmVnC;IAAD,8BAAC;;CAAA;AAnVmC;;;;;;;;;;;;;;;;;;;;;ACjCpC;AAAA;IAAA;IAGA,CAAC;IAAD,4BAAC;AAAD,CAAC;;AAED;IAAA;IAGA,CAAC;IAAD,wBAAC;AAAD,CAAC;;AAED;IAAA;IAIA,CAAC;IAAD,kBAAC;AAAD,CAAC;;AAGD;IAAA;IAaA,CAAC;IAAD,8BAAC;AAAD,CAAC;;AAED;IAAA;IAIA,CAAC;IAAD,kCAAC;AAAD,CAAC;;AAED;IAAA;QAMW,qBAAgB,GAAY,KAAK,CAAC;IAI7C,CAAC;IAAD,oCAAC;AAAD,CAAC;;AAED;IAAA;IAOA,CAAC;IAAD,2CAAC;AAAD,CAAC;;AAED;IAAA;IAWA,CAAC;IAAD,0CAAC;AAAD,CAAC;;AAED;IAAA;QAUW,eAAU,GAAW,EAAE,CAAC;IAOnC,CAAC;IAAD,sBAAC;AAAD,CAAC;;AAED;IAAA;IASA,CAAC;IAAD,oCAAC;AAAD,CAAC;;AAED;IAAA;QASW,cAAS,GAAW,OAAO,CAAC;IAEvC,CAAC;IAAD,+BAAC;AAAD,CAAC;;AAED;IAAA;QAGW,6BAAwB,GAA+B,EAAE,CAAC;IACrE,CAAC;IAAD,6BAAC;AAAD,CAAC;;AAED;IAAA;IAKA,CAAC;IAAD,qBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChIwC;AACM;AACA;AACmB;AACU;AACC;AACR;AACM;AACpB;AACqF;AAErI,IAAM,MAAM,GAAG;IAClB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,0FAAuB,EAAE,SAAS,EAAE,MAAM,EAAE;IACnE,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,kGAA2B,EAAE,IAAI,EAAE,EAAE,UAAU,EAAE,MAAM,EAAE,EAAE;IACtF,EAAE,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,0FAAuB,EAAE,IAAI,EAAE,EAAE,UAAU,EAAE,iBAAiB,EAAE,EAAE;IACvG,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,0FAAuB,EAAE,IAAI,EAAE,EAAE,UAAU,EAAE,MAAM,EAAE,EAAE;CACpF;AAsBD;IAAA;IAAoC,CAAC;IAAxB,oBAAoB;QApBhC,+DAAQ,CAAC;YACN,OAAO,EAAE;gBACL,6DAAY;gBACZ,2DAAW;gBACX,mEAAmB;gBACnB,6FAAgB;gBAChB,iGAAyB;gBACzB,6EAAS,CAAC,OAAO,EAAE;gBACnB,+DAAc;gBACd,6DAAY;gBACZ,gEAAe;gBACf,kEAAiB;gBACjB,+DAAc;gBACd,6DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAChC;YACD,YAAY,EAAE;gBACV,0FAAuB;gBACvB,kGAA2B;aAC9B;SACJ,CAAC;OACW,oBAAoB,CAAI;IAAD,2BAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;ACtCU;AACmB;AAG7C;AACc;AAIiC;AAChE,IAAI,MAAM,GAAG,8EAAW,CAAC,WAAW,CAAC;AAErC;IAEI,+BAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;IAC9B,CAAC;IAED,4CAAY,GAAZ;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,8BAA8B,CAAC,CAAC,GAAG,CAAC,kBAAQ,IAAI,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC,CAAC;IACnG,CAAC;IACD,kDAAkB,GAAlB;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,oCAAoC,CAAC,CAAC,GAAG,CAAC,kBAAQ,IAAI,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC,CAAC;IACzG,CAAC;IACD,sDAAsB,GAAtB;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,wCAAwC,CAAC,CAAC,GAAG,CAAC,kBAAQ,IAAI,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC,CAAC;IAC7G,CAAC;IACD,uDAAuB,GAAvB,UAAwB,KAA8B;QAClD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,yCAAyC,EAAE,KAAK,CAAC,CAAC,GAAG,CAAC,kBAAQ,IAAI,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC,CAAC;IACtH,CAAC;IACD,6DAA6B,GAA7B,UAA8B,KAAoC;QAC9D,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,+CAA+C,EAAE,KAAK,CAAC,CAAC,GAAG,CAAC,kBAAQ,IAAI,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC,CAAC;IAC5H,CAAC;IACD,iDAAiB,GAAjB,UAAkB,EAAU;QACxB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,uCAAuC,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,kBAAQ,IAAI,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC,CAAC;IACjH,CAAC;IACD,6CAAa,GAAb,UAAc,EAAU;QACpB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,uDAAuD,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,kBAAQ,IAAI,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC,CAAC;IACjI,CAAC;IACD,qDAAqB,GAArB,UAAsB,MAAqC;QACvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,2CAA2C,EAAE,MAAM,CAAC,CAAC,GAAG,CAAC,kBAAQ,IAAI,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC,CAAC;IACzH,CAAC;IACD,gDAAgB,GAAhB,UAAiB,EAAU;QACvB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,4BAA4B,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,kBAAQ,IAAI,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC,CAAC;IACtG,CAAC;IACD,mDAAmB,GAAnB,UAAoB,EAAU;QAC1B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,yCAAyC,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,kBAAQ,IAAI,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC,CAAC;IACnH,CAAC;IACD,qDAAqB,GAArB,UAAsB,EAAU;QAC5B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,0DAA0D,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,kBAAQ,IAAI,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC,CAAC;IACpI,CAAC;IACD,0DAA0B,GAA1B,UAA2B,EAAU;QACjC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,gDAAgD,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,kBAAQ,IAAI,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC,CAAC;IAC1H,CAAC;IACD,iDAAiB,GAAjB,UAAkB,EAAU;QACxB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,uCAAuC,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,kBAAQ,IAAI,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC,CAAC;IACjH,CAAC;IACD,gDAAgB,GAAhB,UAAiB,EAAU;QACvB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,sCAAsC,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,kBAAQ,IAAI,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC,CAAC;IAChH,CAAC;IACD,oDAAoB,GAApB,UAAqB,EAAU;QAC3B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,0CAA0C,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,kBAAQ,IAAI,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC,CAAC;IACpH,CAAC;IACD,6CAAa,GAAb,UAAc,EAAU;QACpB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,iDAAiD,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,kBAAQ,IAAI,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC,CAAC;IAC3H,CAAC;IApDQ,qBAAqB;QADjC,iEAAU,EAAE;6DAGiB,2DAAI,oBAAJ,2DAAI;OAFrB,qBAAqB,CAqDjC;IAAD,4BAAC;;CAAA;AArDiC;;;;;;;;ACZlC,ypBAAypB,gBAAgB,iqC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA5kB;AAEd;AACtB;AACgB;AAC9B;AAIZ;AAGsC;AAKlB;AAC8B;AACgS;AAajX;IAII,qCAAoB,sBAA6C,EAAU,YAAyB,EAAU,MAAc,EAAU,QAAkB,EAAU,GAAgB,EAAU,YAAgC,EAAU,KAAqB,EAAU,kBAA0C;QAA3R,2BAAsB,GAAtB,sBAAsB,CAAuB;QAAU,iBAAY,GAAZ,YAAY,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,aAAQ,GAAR,QAAQ,CAAU;QAAU,QAAG,GAAH,GAAG,CAAa;QAAU,iBAAY,GAAZ,YAAY,CAAoB;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAU,uBAAkB,GAAlB,kBAAkB,CAAwB;QAD/S,iBAAY,GAAW,CAAC,CAAC;IAC0R,CAAC;IACpT,8CAAQ,GAAR;QACI,IAAI,CAAC,UAAU,GAAG,IAAI,2GAA6B,EAAE,CAAC;QACtD,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;QAC3B,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,EAAE,CAAC;QAC9B,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,MAAM,CAAC;QACpC,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,KAAK,CAAC;IACtC,CAAC;IACD,6CAAO,GAAP;QAAA,iBAMC;QALG,IAAI,CAAC,sBAAsB,CAAC,qBAAqB,CAAC,IAAI,CAAC,UAAU,CAAC;aAC7D,SAAS,CAAC,UAAC,GAA2B;YACnC,KAAI,CAAC,YAAY,GAAG,GAAG,CAAC,YAAY,CAAC;YACrC,KAAI,CAAC,IAAI,GAAG,GAAG,CAAC,wBAAwB;QAC5C,CAAC,CAAC,CAAC;IACX,CAAC;IACM,wDAAkB,GAAzB,UAA0B,KAA+B;QACrD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,wBAAwB,GAAG,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC;IAC9E,CAAC;IACM,kDAAY,GAAnB,UAAoB,KAA+B;QAAnD,iBAMC;QALG,EAAE,CAAC,CAAC,OAAO,CAAC,+CAA+C,CAAC,CAAC,CAAC,CAAC;YAC3D,IAAI,CAAC,sBAAsB,CAAC,gBAAgB,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC,SAAS,CAAC,aAAG;gBAC9E,KAAI,CAAC,OAAO,EAAE,CAAC;YACnB,CAAC,CAAC,CAAC;QACP,CAAC;IACL,CAAC;IACD,uDAAiB,GAAjB;QACI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,uBAAuB,CAAC,CAAC,CAAC;IACpD,CAAC;IAED,kDAAY,GAAZ,UAAa,KAAoB;QAE7B,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACxD,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC;QACtC,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,KAAK,CAAC,SAAS,CAAC;QAC7C,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC;QAClE,IAAI,CAAC,UAAU,CAAC,aAAa,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,IAAI,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC;QAChG,IAAI,CAAC,UAAU,CAAC,oBAAoB,GAAG,KAAK,CAAC,OAAO,CAAC,cAAc,IAAI,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,cAAc,CAAC,KAAK,CAAC;QAC3H,IAAI,CAAC,UAAU,CAAC,kBAAkB,GAAG,KAAK,CAAC,OAAO,CAAC,aAAa,IAAI,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC;QACvH,oHAAoH;QAEpH,IAAI,CAAC,OAAO,EAAE,CAAC;IAEnB,CAAC;IA9CQ,2BAA2B;QAXvC,gEAAS,CAAC;YACP,QAAQ,EAAE,wBAAwB;YAClC,8GAAkD;YAClD,aAAa,EAAE,gEAAiB,CAAC,IAAI;YACrC,2JACwE;YACxE,SAAS,EAAE,CAAC,6FAAkB,EAAE,yFAAsB,EAAE,uEAAW,EAAE,qGAAqB,CAAC;SAG9F,CAAC;6DAM8C,qGAAqB,oBAArB,qGAAqB,sDAAwB,uEAAW,oBAAX,uEAAW,sDAAkB,uDAAM,oBAAN,uDAAM,sDAAoB,yDAAQ,oBAAR,yDAAQ,sDAAe,2DAAW,oBAAX,2DAAW,sDAAwB,6FAAkB,oBAAlB,6FAAkB,sDAAiB,+DAAc,oBAAd,+DAAc,sDAA8B,yFAAsB,oBAAtB,yFAAsB;OAJtS,2BAA2B,CAgDvC;IAAD,kCAAC;;CAAA;AAhDuC","file":"riskassessment.module.chunk.js","sourcesContent":["module.exports = \"<form [formGroup]=\\\"myForm\\\" novalidate (ngSubmit)=\\\"SaveRiskAssessmentFormData(myForm.value,'submit')\\\">\\r\\n    <div style=\\\"margin-top:10px;\\\">\\r\\n        <div style=\\\"margin:20px;\\\">\\r\\n            <div>\\r\\n\\r\\n\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>Subject</label>\\r\\n                    <!--<input type=\\\"text\\\" formControlName=\\\"title\\\" class=\\\"form-control\\\">-->\\r\\n                    <input type=\\\"text\\\" formControlName=\\\"Area\\\" class=\\\"form-control validation-field\\\" />\\r\\n                    <!--display error message if agenda is not valid-->\\r\\n                    <small [hidden]=\\\"myForm.controls.Area.valid\\\" class=\\\"text-danger\\\">\\r\\n                        Subject is required\\r\\n                    </small>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>Responsible Team</label>\\r\\n                    <ss-multiselect-dropdown [options]=\\\"responsiblePersonOptions\\\" [texts]=\\\"responsiblePersonTexts\\\" [settings]=\\\"responsiblePersonSettings\\\" formControlName=\\\"RiskAssessmentTeam\\\"></ss-multiselect-dropdown>\\r\\n                    <small [hidden]=\\\"myForm.controls.RiskAssessmentTeam.valid\\\" class=\\\"text-danger\\\">\\r\\n                        Responsible Team is required\\r\\n                    </small>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>Assessment Date</label>\\r\\n                    <!--<input type=\\\"text\\\" formControlName=\\\"duedate\\\" type=\\\"date\\\" class=\\\"form-control\\\">-->\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <div class=\\\"input-group\\\">\\r\\n                            <input class=\\\"form-control validation-field\\\" placeholder=\\\"yyyy-mm-dd\\\" name=\\\"dueDate\\\" formControlName=\\\"AssessmentDateDateStruct\\\" ngbDatepicker #d=\\\"ngbDatepicker\\\">\\r\\n                            <div class=\\\"input-group-addon\\\" (click)=\\\"d.toggle()\\\">\\r\\n                                <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <small [hidden]=\\\"myForm.controls.AssessmentDateDateStruct.valid\\\" class=\\\"text-danger\\\">\\r\\n                            Assessment date is required\\r\\n                        </small>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>Review Duration Unit</label>\\r\\n                    <select formControlName=\\\"ReviewDurationUnit\\\" class=\\\"form-control\\\">\\r\\n                        <option value=\\\"\\\">--Select--</option>\\r\\n                        <option *ngFor=\\\"let location of reviewDurationUnitList\\\"\\r\\n                                value={{location.DurationUnitId}}>\\r\\n                            {{location.Text }}\\r\\n                        </option>\\r\\n                    </select>\\r\\n                    <!--display error message if name is not valid-->\\r\\n                    <small *ngIf=\\\"!myForm.controls.ReviewDurationUnit.valid\\\" class=\\\"text-danger\\\">\\r\\n                        Review Duration Unit is required.\\r\\n                    </small>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>Review Duration</label>\\r\\n                    <!--<input type=\\\"text\\\" formControlName=\\\"title\\\" class=\\\"form-control\\\">-->\\r\\n                    <input type=\\\"number\\\" formControlName=\\\"ReviewDuration\\\" max=\\\"500\\\" min=\\\"1\\\" step=\\\"5\\\" class=\\\"form-control validation-field\\\" />\\r\\n                    <!--display error message if agenda is not valid-->\\r\\n                    <small [hidden]=\\\"myForm.controls.ReviewDuration.valid\\\" class=\\\"text-danger\\\">\\r\\n                        Review Duration is required\\r\\n                    </small>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group\\\" [hidden]=\\\"riskAssessmentId ==0\\\">\\r\\n                    <label>Signed By User</label>\\r\\n                    <div class=\\\"dropdown d-inline-block\\\">\\r\\n                        <a class=\\\"dropdown-toggle no-caret pl-2 pr-2\\\" id=\\\"signedUser\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                            <i class=\\\"fa fa-info\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                        </a>\\r\\n                        <div class=\\\"dropdown-menu dropdown-menu-right rounded-0 mt-3 p-0 box-shadow\\\" aria-labelledby=\\\"signedUser\\\">\\r\\n                            <div class=\\\"list\\\">\\r\\n\\r\\n                                <a class=\\\"dropdown-item\\\" *ngFor=\\\"let user of signedUserList\\\"><i class=\\\"\\\"></i>{{user.Column1}}-{{user.SignedDateString}}</a>\\r\\n\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                <div [hidden]=\\\"isArchivedRiskAssessment\\\" class=\\\"modal-footer\\\">\\r\\n                    <button type=\\\"button\\\" data-toggle=\\\"modal\\\" data-target=\\\"#lg-modalTraining\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!myForm.valid\\\">Save</button>\\r\\n                    <button type=\\\"button\\\" #buttonComplete (click)=\\\"CompleteRiskAssessment()\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!myForm.valid\\\">Complete</button>\\r\\n                    <button type=\\\"button\\\" #buttonReview (click)=\\\"ReviewRiskAssessment()\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!myForm.valid\\\">Review</button>\\r\\n                    <button type=\\\"button\\\" #buttonTraining (click)=\\\"SetTrainingRequired()\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!myForm.valid\\\">Trainig required</button>\\r\\n                    <button type=\\\"button\\\" #buttonSignature data-toggle=\\\"modal\\\" (click)=\\\"OpenSignatureDialog()\\\" [disabled]=\\\"!myForm.valid\\\" data-target=\\\"#lg-modalSignature\\\" class=\\\"btn btn-primary\\\">Verify Signature</button>\\r\\n                    <button type=\\\"button\\\" data-toggle=\\\"modal\\\" class=\\\"btn btn-primary\\\" (click)=\\\"SaveRiskAssessmentFormData(myForm.value,'hazard')\\\" data-target=\\\"#lg-modal\\\" [disabled]=\\\"!myForm.valid\\\" label=\\\"Add Hazard\\\">Add Hazard</button>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\\r\\n\\r\\n<div class=\\\"modal fade\\\" id=\\\"lg-modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"modal-large-label\\\" style=\\\"display: none;\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header state modal-primary\\\">\\r\\n                <h4 class=\\\"modal-title\\\" id=\\\"modal-large-label\\\">Hazard</h4>\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" (click)=\\\"CloseDialog()\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">×</span></button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <form [formGroup]=\\\"RiskAssessmentHazardViewModelForm\\\" novalidate (ngSubmit)=\\\"SaveHazardForm(RiskAssessmentHazardViewModelForm.value)\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Hazard</label>\\r\\n                        <select #hazardDropdown formControlName=\\\"HazardId\\\" class=\\\"form-control validation-field\\\">\\r\\n                            <option value=\\\"\\\">--Select--</option>\\r\\n                            <option *ngFor=\\\"let location of hazardsListV1\\\"\\r\\n                                    value={{location.HazardId}}>\\r\\n                                {{location.Text }}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                        <!--display error message if name is not valid-->\\r\\n                        <small [hidden]=\\\"RiskAssessmentHazardViewModelForm.controls.HazardId.valid\\\" class=\\\"text-danger\\\">\\r\\n                            Hazard is required.\\r\\n                        </small>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Description</label>\\r\\n                        <input #hazardDescription type=\\\"text\\\" formControlName=\\\"Description\\\" class=\\\"form-control validation-field\\\" />\\r\\n                        <!--display error message if name is not valid-->\\r\\n                        <small [hidden]=\\\"RiskAssessmentHazardViewModelForm.controls.Description.valid\\\" class=\\\"text-danger\\\">\\r\\n                            Description is required.\\r\\n                        </small>\\r\\n                    </div>\\r\\n                    <div style=\\\"border: 1px solid black;margin-top:10px;\\\">\\r\\n                        <span class=\\\"fa fa-plus-square pull-right\\\" (click)=\\\"AddMoreMeasure()\\\"></span>\\r\\n                        <div style=\\\"margin:20px;\\\" formArrayName=\\\"RiskAssessmentHazardMeasureViewModel\\\">\\r\\n\\r\\n                            <div style=\\\"border-bottom:1px solid black;\\\" *ngFor=\\\"let acton of RiskAssessmentHazardViewModelForm['controls'].RiskAssessmentHazardMeasureViewModel['controls']; let i=index\\\">\\r\\n                                <div>\\r\\n                                    <span class=\\\"fa fa-remove pull-right\\\" *ngIf=\\\"RiskAssessmentHazardViewModelForm.controls.RiskAssessmentHazardMeasureViewModel.controls.length > 0\\\" (click)=\\\"RemoveMeasure(i)\\\">\\r\\n                                    </span>\\r\\n                                </div>\\r\\n                                <div [formGroupName]=\\\"i\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label>Control</label>\\r\\n                                        <input type=\\\"text\\\" formControlName=\\\"Text\\\" class=\\\"form-control validation-field\\\" />\\r\\n                                        <!--display error message if name is not valid-->\\r\\n                                        <small [hidden]=\\\"RiskAssessmentHazardViewModelForm.controls.RiskAssessmentHazardMeasureViewModel.controls[i].controls.Text.valid\\\" class=\\\"text-danger\\\">\\r\\n                                            Control is required.\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label></label>\\r\\n                                        <select formControlName=\\\"ActionId\\\" class=\\\"form-control validation-field\\\">\\r\\n                                            <option value=\\\"\\\">--Select--</option>\\r\\n                                            <option value=\\\"1\\\">Action</option>\\r\\n                                            <option value=\\\"2\\\">Rule</option>\\r\\n\\r\\n                                        </select>\\r\\n                                        <!--display error message if name is not valid-->\\r\\n\\r\\n                                    </div>\\r\\n\\r\\n                                </div>\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n                    <div style=\\\"border:1px solid black;margin-top:10px;\\\" class=\\\"form-group\\\">\\r\\n                        <div style=\\\"margin:20px;\\\" formArrayName=\\\"RiskAssessmentHazardReviewViewModel\\\">\\r\\n                            <div style=\\\"border-bottom:1px solid black;\\\" *ngFor=\\\"let agnda1 of RiskAssessmentHazardViewModelForm['controls'].RiskAssessmentHazardReviewViewModel['controls']; let j=index\\\">\\r\\n                                <div>\\r\\n\\r\\n                                </div>\\r\\n                                <div [formGroupName]=\\\"j\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label>Consequence</label>\\r\\n                                        <select formControlName=\\\"Consequence\\\" class=\\\"form-control validation-field\\\">\\r\\n                                            <option value=\\\"\\\">--Select--</option>\\r\\n                                            <option value=\\\"1\\\">Significant</option>\\r\\n                                            <option value=\\\"2\\\">Minor</option>\\r\\n                                            <option value=\\\"3\\\">Moderate</option>\\r\\n                                            <option value=\\\"4\\\">Major</option>\\r\\n                                            <option value=\\\"5\\\">Calastrophic</option>\\r\\n                                        </select>\\r\\n                                        <!--display error message if name is not valid-->\\r\\n                                        <small [hidden]=\\\"RiskAssessmentHazardViewModelForm.controls.RiskAssessmentHazardReviewViewModel.controls[j].controls.Consequence.valid\\\" class=\\\"text-danger\\\">\\r\\n                                            Consequence is required.\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label>Likelihood</label>\\r\\n                                        <select formControlName=\\\"Likelihood\\\" class=\\\"form-control validation-field\\\">\\r\\n                                            <option value=\\\"\\\">--Select--</option>\\r\\n                                            <option value=\\\"1\\\">Extremely UnLikely</option>\\r\\n                                            <option value=\\\"2\\\">UnLikely</option>\\r\\n                                            <option value=\\\"3\\\">Possible</option>\\r\\n                                            <option value=\\\"4\\\">Likely</option>\\r\\n                                            <option value=\\\"5\\\">Almost Certain</option>\\r\\n                                        </select>\\r\\n                                        <!--display error message if name is not valid-->\\r\\n                                        <small [hidden]=\\\"RiskAssessmentHazardViewModelForm.controls.RiskAssessmentHazardReviewViewModel.controls[j].controls.Likelihood.valid\\\" class=\\\"text-danger\\\">\\r\\n                                            Likelihood is required.\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label>Monitoring Method</label>\\r\\n                                        <select formControlName=\\\"MonitoringMethodId\\\" class=\\\"form-control validation-field\\\">\\r\\n                                            <option value=\\\"\\\">--Select--</option>\\r\\n                                            <option *ngFor=\\\"let location of monitorinMethodList\\\"\\r\\n                                                    value={{location.MonitoringMethodId}}>\\r\\n                                                {{location.Method }}\\r\\n                                            </option>\\r\\n                                        </select>\\r\\n                                        <!--display error message if name is not valid-->\\r\\n                                        <small [hidden]=\\\"RiskAssessmentHazardViewModelForm.controls.RiskAssessmentHazardReviewViewModel.controls[j].controls.MonitoringMethodId.valid\\\" class=\\\"text-danger\\\">\\r\\n                                            Monitoring Method is required.\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n\\r\\n\\r\\n                    <div class=\\\"modal-footer\\\">\\r\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!RiskAssessmentHazardViewModelForm.valid\\\">Save</button>\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"CloseDialog()\\\" #closeDialog data-dismiss=\\\"modal\\\">Close</button>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<p-dataTable [value]=\\\"hazardList\\\" [lazy]=\\\"true\\\" [rows]=\\\"10\\\" [paginator]=\\\"true\\\" [rowsPerPageOptions]=\\\"[5,10,20,50]\\\"\\r\\n             scrollable=\\\"true\\\" rowGroupMode=\\\"rowspan\\\" groupField=\\\"HazardText\\\" resizableColumns=\\\"true\\\" sortField=\\\"HazardText\\\" #dt reorderableColumns=\\\"true\\\" [responsive]=\\\"true\\\" [totalRecords]=\\\"totalRecords\\\" (onLazyLoad)=\\\"loadCarsLazy($event)\\\">\\r\\n\\r\\n    <p-column [style]=\\\"{'width':'300px'}\\\" scope=\\\"rowgroup\\\" field=\\\"HazardText\\\" header=\\\"Hazard\\\">\\r\\n        <ng-template let-col let-car=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n            <div>\\r\\n                <span>{{car[col.field]}}</span>\\r\\n                <br />\\r\\n                <label><b>Description :</b></label>\\r\\n                <span class=\\\"spanWordWrap\\\">{{car.Description}}</span>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n    </p-column>\\r\\n    <p-column [style]=\\\"{'width':'90px'}\\\" field=\\\"CreatedDate\\\" header=\\\"Date Added\\\">\\r\\n    </p-column>\\r\\n    <!--<p-column [style]=\\\"{'width':'90px'}\\\" field=\\\"Description\\\" scope=\\\"rowgroup\\\" header=\\\"Description\\\"></p-column>-->\\r\\n    <p-column [style]=\\\"{'width':'300px'}\\\" field=\\\"MeasureText\\\" header=\\\"Control\\\">\\r\\n        <ng-template let-col let-car=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n            <div class=\\\"form-group\\\" [hidden]=\\\"car.MeasureTextWithReviewDate ==''\\\">\\r\\n                <label>Existing :</label>\\r\\n                <div class=\\\"spanWordWrap\\\" *ngFor=\\\"let text of car.MeasureTextWithReviewDateArray; let i=index\\\">\\r\\n                    {{i + 1}}. {{text}}\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\" [hidden]=\\\"car.MeasureText ==''\\\">\\r\\n                <label>Additional controls if needed :</label>\\r\\n                <div class=\\\"spanWordWrap\\\" *ngFor=\\\"let text of car.MeasureTextArray  ; let i=index\\\">\\r\\n                    {{i + 1}}. {{text}}\\r\\n                </div>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n    </p-column>\\r\\n    <p-column [style]=\\\"{'width':'40px'}\\\" field=\\\"Consequence\\\" header=\\\"Consequence\\\"></p-column>\\r\\n    <p-column [style]=\\\"{'width':'40px'}\\\" field=\\\"Likelihood\\\" header=\\\"Likelihood\\\"></p-column>\\r\\n    <p-column [style]=\\\"{'width':'40px'}\\\" field=\\\"Source\\\" header=\\\"Score\\\">\\r\\n        <ng-template let-col let-car=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n            <div [style.background-color]=\\\"car.ScoreColor\\\"><span>{{car[col.field]}}</span></div>\\r\\n        </ng-template>\\r\\n    </p-column>\\r\\n    <p-column [style]=\\\"{'width':'100px'}\\\" field=\\\"Method\\\" header=\\\"Monitoring method(s)\\\"></p-column>\\r\\n    <p-column [style]=\\\"{'width':'90px'}\\\" bodyStyle=\\\"\\\">\\r\\n        <ng-template let-col let-car=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n            <!--<div [hidden]=\\\"car.CreatedDate==''\\\">\\r\\n                <span>{{car[col.field]}}</span>\\r\\n            </div>-->\\r\\n            <button type=\\\"button\\\" [hidden]=\\\"isArchivedRiskAssessment\\\" title=\\\"Edit\\\" pButton data-target=\\\"#lg-modal\\\" data-toggle=\\\"modal\\\" (click)=\\\"OpenHazard(car)\\\" icon=\\\"fa fa-file-text-o\\\"></button>\\r\\n\\r\\n        </ng-template>\\r\\n    </p-column>\\r\\n    <!--<p-column styleClass=\\\"col-button\\\">\\r\\n        <ng-template pTemplate=\\\"header\\\">\\r\\n            <div class=\\\"ui-helper-clearfix\\\" style=\\\"width:100%\\\">\\r\\n\\r\\n            </div>\\r\\n        </ng-template>\\r\\n        <ng-template let-meeting=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n\\r\\n\\r\\n        </ng-template>\\r\\n\\r\\n    </p-column>-->\\r\\n</p-dataTable>\\r\\n\\r\\n\\r\\n<div class=\\\"modal fade\\\" id=\\\"lg-modalSignature\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"modal-large-label\\\" style=\\\"display: none;\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header state modal-primary\\\">\\r\\n                <h4 class=\\\"modal-title\\\" id=\\\"modal-large-label\\\">Signature</h4>\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" (click)=\\\"CloseSignatureDialog()\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">×</span></button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <form [formGroup]=\\\"signatureForm\\\" novalidate (ngSubmit)=\\\"SaveSignature()\\\">\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Password </label>\\r\\n                        <input formControlName=\\\"OldPassword\\\" class=\\\"form-control validation-field\\\" placeholder=\\\"Password\\\" type=\\\"password\\\">\\r\\n                        <small [hidden]=\\\"signatureForm['controls'].OldPassword.valid\\\" class=\\\"text-danger\\\">\\r\\n                            Password is required.\\r\\n                        </small>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"modal-footer\\\">\\r\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!signatureForm.valid\\\">Save</button>\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"CloseSignatureDialog()\\\" #closeDialogSignature data-dismiss=\\\"modal\\\">Close</button>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal fade\\\" id=\\\"lg-modalTraining\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"modal-large-label\\\" style=\\\"display: none;\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header state modal-primary\\\">\\r\\n                <h4 class=\\\"modal-title\\\" id=\\\"modal-large-label\\\">Training</h4>\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" (click)=\\\"CloseSignatureDialog()\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">×</span></button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n\\r\\n\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"custom-controls-stacked\\\">\\r\\n                        <label class=\\\"custom-control custom-checkbox\\\">\\r\\n                            <input #trainingRequiredCheckbox type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked>\\r\\n                            <span class=\\\"custom-control-indicator\\\"></span>\\r\\n                            <span class=\\\"custom-control-description\\\">Training required</span>\\r\\n                        </label>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n\\r\\n                <div class=\\\"modal-footer\\\">\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"SaveRiskAssessmentFormData(myForm.value,'training')\\\" [disabled]=\\\"!myForm.valid\\\">Save</button>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" #closeDialogTraining data-dismiss=\\\"modal\\\">Close</button>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/riskassessment/riskassessment.component.html\n// module id = ../../../../../src/app/pages/riskassessment/riskassessment.component.html\n// module chunks = riskassessment.module","import { Component, ViewEncapsulation, ViewChild, TemplateRef, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Validators, FormGroup, FormArray, FormBuilder, FormControl, AbstractControl, ReactiveFormsModule, ValidatorFn } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { EventActionService } from '../eventactions/eventaction.service';\nimport { Location } from '@angular/common';\nimport { IMultiSelectOption, IMultiSelectSettings, IMultiSelectTexts } from 'angular-2-dropdown-multiselect';\nimport { Observable } from 'rxjs/Observable';\nimport { Http, URLSearchParams } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport { LocationModel, TitleModel, SubTitleModel, Title, SubTitle, Action, EventActionStatusModel, events, EventFilterModel, EventViewModel, EventDataModel, EventFilterViewModel, EventAttendeeDataModel, ActionDataModel, ActionResponsiblePersonDataModel, AgendaDataModel } from '../calendar/formeventdata';\nimport { CategoryModel, ActionSourceModel, ActionCommentsListModel } from '../eventactions/eventaction.model';\nimport { MasterEventDataService } from '../calendar/Mastereventdata';\nimport { NgbModal, NgbDateStruct, NgbTimeStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { MeetingDataService } from '../meeting/meeting.service';\nimport { CalendarModule } from 'primeng/primeng';\nimport { SignedUserList, HazardListModel, MonitoringMethodModel, DurationUnitModel, HazardModel, RiskAssessmentViewModel, RiskAssessmentTeamViewModel, RiskAssessmentHazardViewModel, RiskAssessmentHazardMeasureViewModel, RiskAssessmentHazardReviewViewModel } from '../riskassessment/riskassessment.model';\nimport { RiskAssessmentService } from '../riskassessment/riskassessment.service';\nimport { LazyLoadEvent, FilterMetadata } from 'primeng/components/common/api';\nimport { MenuItem } from 'primeng/primeng';\nimport { UserService } from \"../user/user.service\";\n\n@Component({\n    selector: 'app-riskassessment',\n    templateUrl: './riskassessment.component.html',\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['../../../../node_modules/primeng/resources/primeng.min.css',\n        \"../../../../node_modules/primeng/resources/themes/omega/theme.css\",\n        \"./riskassessment.component.css\"\n    ],\n    providers: [UserService, EventActionService, MasterEventDataService, MeetingDataService, RiskAssessmentService],\n\n\n})\n\nexport class RiskAssessmentComponent implements OnInit {\n    public myForm: FormGroup; // our form model\n    public RiskAssessmentHazardViewModelForm: FormGroup;\n    riskAssessmentId: number = 0;\n    hazardId: number = 0;\n    reviewDurationUnitList: DurationUnitModel[] = [];\n    hazardsList: HazardModel[] = [];\n    hazardsListV1: HazardModel[] = [];\n    monitorinMethodList: MonitoringMethodModel[] = [];\n    public isArchivedRiskAssessment: boolean = false;\n    public responsiblePersonOptions: IMultiSelectOption[] = [];\n    iscompleted: boolean = false;\n    @ViewChild('closeDialog') closeDialog;\n    @ViewChild('hazardDropdown') hazardDropdown;\n    @ViewChild('hazardDescription') hazardDescription;\n    @ViewChild('buttonComplete') buttonComplete;\n    @ViewChild('buttonTraining') buttonTraining;\n    @ViewChild('buttonSignature') buttonSignature;\n    @ViewChild('buttonReview') buttonReview;\n    @ViewChild('closeDialogTraining') closeDialogTraining;\n    @ViewChild('trainingRequiredCheckbox') trainingRequiredCheckbox;\n\n\n    constructor(private _UserService: UserService, private _RiskAssessmentService: RiskAssessmentService, private _meetingService: MeetingDataService, private router: Router, private location: Location, private _fb: FormBuilder, private _dataService: EventActionService, private route: ActivatedRoute, private _masterDataService: MasterEventDataService) { }\n    ngOnInit() {\n        this.buttonComplete.nativeElement.hidden = true;\n        this.buttonTraining.nativeElement.hidden = true;\n        this.buttonSignature.nativeElement.hidden = true;\n        this.buttonReview.nativeElement.hidden = true;\n        let model: RiskAssessmentViewModel = new RiskAssessmentViewModel();\n        this.addhtmltoform(model);\n        this.addHazaradModelToForm(new RiskAssessmentHazardViewModel());\n        this._masterDataService.getUserList().subscribe(res => { this.responsiblePersonOptions = res; });\n        this._RiskAssessmentService.getAllDurationUnit().subscribe((res: DurationUnitModel[]) => {\n            this.reviewDurationUnitList = res;\n        });\n        this._RiskAssessmentService.getAllHazard().subscribe((res: HazardModel[]) => {\n            this.hazardsList = res;\n            this.hazardsListV1 = res;\n        });\n        this._RiskAssessmentService.getAllMonitoringMethod().subscribe((res: MonitoringMethodModel[]) => {\n            this.monitorinMethodList = res;\n        });\n        this.route.params.subscribe(params => {\r\n            this.riskAssessmentId = params['id'] as number; //log the value of id\r\n            this.getRiskAssessment();\r\n            this.getList();\r\n        });\n        \n\n       // this.getRiskAssessment();\n        this.initSignaturePassword();\n    }\n    signedUserList: SignedUserList[] = [];\n    signedUserTooltip: string;\n    getRiskAssessment() {\n        if (this.riskAssessmentId > 0) {\n            this.buttonReview.nativeElement.hidden = false;\n            this.buttonComplete.nativeElement.hidden = false;\n            //this.buttonTraining.nativeElement.hidden = false;\n            this.buttonSignature.nativeElement.hidden = false;\n\n            this._RiskAssessmentService.getRiskAssessment(this.riskAssessmentId).subscribe((res: RiskAssessmentViewModel) => {\n                this.isArchivedRiskAssessment = res.IsArchived;\n                this.addhtmltoform(res);\n            });\n            this._RiskAssessmentService.getSignedUserList(this.riskAssessmentId).subscribe((res: SignedUserList[]) => {\n                this.signedUserList = res;\n                for (let tooltip of res) {\n                    this.signedUserTooltip = this.signedUserTooltip + '<div class=\"tooltip-inner\">Tooltip on the right</div>';\n                }\n            });\n        }\n    }\n    public responsiblePersonTexts: IMultiSelectTexts = {\n        checkAll: 'Select all',\n        uncheckAll: 'Unselect all',\n        checked: 'item selected',\n        checkedPlural: 'items selected',\n        searchPlaceholder: 'Find...',\n        defaultTitle: 'Select',\n        allSelected: 'All selected',\n    };\n    public responsiblePersonSettings: IMultiSelectSettings = {\n        enableSearch: true,\n        checkedStyle: 'fontawesome',\n        buttonClasses: 'btn btn-secondary btn-block',\n        dynamicTitleMaxItems: 3,\n        displayAllSelectedText: true,\n        maxHeight: '300px'\n    };\n    addhtmltoform(viewModel: RiskAssessmentViewModel) {\n        let team = [];\n        if (this.riskAssessmentId > 0)\n            team = viewModel.RiskAssessmentTeamViewModel.map(x => x.UserId) as number[];\n        this.myForm = this._fb.group({\n            RiskAssessmentId: [this.riskAssessmentId],\n            Area: [viewModel.Area, Validators.required],\n            AssessmentDateDateStruct: [{ year: new Date(viewModel.AssessmentDate).getFullYear(), month: new Date(viewModel.AssessmentDate).getMonth() + 1, day: new Date(viewModel.AssessmentDate).getDate() }, Validators.required],\n            ReviewDuration: [viewModel.ReviewDuration, Validators.required],\n            ReviewDurationUnit: [viewModel.ReviewDurationUnit, Validators.required],\n            RiskAssessmentTeam: [team, Validators.required],\n            IsArchived: [viewModel.IsArchived],\n        });\n    }\n\n    addHazaradModelToForm(viewModel: RiskAssessmentHazardViewModel) {\n        this.RiskAssessmentHazardViewModelForm = this.initRiskAssessmentHazard(viewModel);\n    }\n\n    initRiskAssessmentTeam(viewModel: RiskAssessmentTeamViewModel) {\n        return this._fb.group({\n            RiskAssessmentTeamId: [viewModel.RiskAssessmentTeamId],\n            RiskAssessmentId: [this.riskAssessmentId],\n            UserId: [viewModel.UserId]\n        })\n    }\n    initRiskAssessmentHazard(viewModel: RiskAssessmentHazardViewModel) {\n        return this._fb.group({\n            RiskAssessmentHarardId: [viewModel.RiskAssessmentHarardId],\n            HazardId: [viewModel.HazardId, Validators.required],\n            RiskAssessmentId: [this.riskAssessmentId],\n            IsReadyForReview: [viewModel.IsReadyForReview],\n            Description: [viewModel.Description, Validators.required],\n            RiskAssessmentHazardMeasureViewModel: this._fb.array([\n                this.initRiskAssessmentHazardMeasure(new RiskAssessmentHazardMeasureViewModel())\n            ]),\n            RiskAssessmentHazardReviewViewModel: this._fb.array([\n                this.initRiskAssessmentHazardReview(new RiskAssessmentHazardReviewViewModel())\n            ])\n        })\n    }\n\n    initRiskAssessmentHazardMeasure(viewModel: RiskAssessmentHazardMeasureViewModel) {\n        return this._fb.group({\n            RiskAssessmentHazardMeasureId: [viewModel.RiskAssessmentHazardMeasureId],\n            RiskAssessmentId: [this.riskAssessmentId],\n            RiskAssessmentHazardId: [viewModel.RiskAssessmentHazardId],\n            Text: [viewModel.Text, Validators.required],\n            ActionId: [viewModel.ActionId],\n            DateAdded: [viewModel.DateAdded]\n        })\n    }\n\n    initRiskAssessmentHazardReview(viewModel: RiskAssessmentHazardReviewViewModel) {\n        return this._fb.group({\n            RiskAssessmentHazardReviewId: [viewModel.RiskAssessmentHazardReviewId],\n            RiskAssessmentHazardId: [viewModel.RiskAssessmentHazardId],\n            Consequence: [viewModel.Consequence, Validators.required],\n            Likelihood: [viewModel.Likelihood, Validators.required],\n            CreatedDate: [viewModel.CreatedDate],\n            UpdatedDate: [viewModel.UpdatedDate],\n            ReviewDate: [viewModel.ReviewDate],\n            MonitoringMethodId: [viewModel.MonitoringMethodId, Validators.required]\n        })\n    }\n\n    AddMoreHazard() {\n        const control = <FormArray>this.myForm.controls['RiskAssessmentHazardViewModel'];\n        control.push(this.initRiskAssessmentHazard(new RiskAssessmentHazardViewModel()));\n    }\n    RemoveHazard(i: number) {\n        const control = <FormArray>this.myForm.controls['RiskAssessmentHazardViewModel'];\n        control.removeAt(i);\n    }\n    AddMoreMeasure(model: RiskAssessmentHazardMeasureViewModel = new RiskAssessmentHazardMeasureViewModel()) {\n        const control = <FormArray>this.RiskAssessmentHazardViewModelForm.controls[\"RiskAssessmentHazardMeasureViewModel\"];\n        control.push(this.initRiskAssessmentHazardMeasure(model));\n    }\n    RemoveMeasure(i: number, k: number) {\n        const control = <FormArray>this.RiskAssessmentHazardViewModelForm.controls[\"RiskAssessmentHazardMeasureViewModel\"];\n        control.removeAt(k);\n    }\n\n    SaveRiskAssessmentFormData(data: RiskAssessmentViewModel, button: string) {\n        data.TrainingRequired = this.trainingRequiredCheckbox.nativeElement.checked;\n        data.AssessmentDate = new Date(data.AssessmentDateDateStruct.year, data.AssessmentDateDateStruct.month - 1, data.AssessmentDateDateStruct.day).toLocaleDateString();\n        var riskAssessmentTeam = (data as any).RiskAssessmentTeam;\n        if (riskAssessmentTeam != undefined && riskAssessmentTeam != null && riskAssessmentTeam.length > 0) {\n            data.RiskAssessmentTeamViewModel = [];\n            for (var userId of riskAssessmentTeam) {\n                let team: RiskAssessmentTeamViewModel = new RiskAssessmentTeamViewModel();\n                team.UserId = userId;\n                team.RiskAssessmentId = this.riskAssessmentId;\n                data.RiskAssessmentTeamViewModel.push(team);\n            }\n        }\n        this._RiskAssessmentService.addUpdateRiskAssessment(data).subscribe((res: number) => {\n            this.riskAssessmentId = res;\n            if (button == \"submit\") {\n                this.router.navigate(['/pages/riskassessment/' + this.riskAssessmentId]);\n            }\n            else if (button == \"hazard\") {\n                this.hazardsListV1 = this.hazardsList;\n                var hazarddIds = this.hazardList.map(x => x.HazardId);\n                for (let id of hazarddIds) {\n                    this.hazardsListV1 = this.hazardsListV1.filter(x => x.HazardId != id);\n                }\n                this.hazardId = 0;\n                this.addHazaradModelToForm(new RiskAssessmentHazardViewModel());\n            }\n            else if (button == \"training\") {\n                this.closeDialogTraining.nativeElement.click();\n                this.getRiskAssessment();\n                this.router.navigate(['/pages/riskassessment/' + this.riskAssessmentId]);\n            }\n\n        });\n    }\n    SaveHazardForm(data: RiskAssessmentHazardViewModel) {\n        data.RiskAssessmentId = this.riskAssessmentId;\n        data.RiskAssessmentHarardId = this.hazardId;\n        this._RiskAssessmentService.addUpdateRiskAssessmentHazard(data).subscribe((res: number) => {\n            this.hazardId = res;\n            this.closeDialog.nativeElement.click();\n            this.getList();\n        });\n    }\n\n\n    loadCarsLazy(event: LazyLoadEvent) {\r\n\r\n        this.getList();\r\n    }\n    totalRecords: number = 0;\n    hazardList: HazardListModel[] = [];\n    getList() {\r\n        this._RiskAssessmentService.getHazardList(this.riskAssessmentId)\r\n            .subscribe((res: HazardListModel[]) => {\r\n                this.totalRecords = res.length;\r\n                this.hazardList = res;\r\n            });\r\n    }\n    OpenHazard(model: HazardListModel) {\n        this._RiskAssessmentService.getHazardData(model.RiskAssessmentHarardId).subscribe((hazardModel: RiskAssessmentHazardViewModel) => {\n            this.hazardsListV1 = this.hazardsList;\n            this.hazardDropdown.nativeElement.disabled = true;\n            //this.hazardDescription.nativeElement.disabled = true;\n            //let hazardModel: RiskAssessmentHazardViewModel = res;\n            //hazardModel.HazardId = model.HazardId;\n            //hazardModel.Description = model.Description;\n            //hazardModel.RiskAssessmentHarardId = model.RiskAssessmentHarardId;\n            //hazardModel.IsReadyForReview = true;\n            this.addHazaradModelToForm(hazardModel);\n            this.RemoveMeasure(0, 0);\n            const control = <FormArray>this.RiskAssessmentHazardViewModelForm.controls[\"RiskAssessmentHazardReviewViewModel\"];\n            control.removeAt(0);\n            if (hazardModel.RiskAssessmentHazardMeasureViewModel != null) {\n                for (let m of hazardModel.RiskAssessmentHazardMeasureViewModel) {\n                    this.AddMoreMeasure(m);\n                }\n            }\n            if (hazardModel.RiskAssessmentHazardReviewViewModel != null) {\n                for (let m of hazardModel.RiskAssessmentHazardReviewViewModel) {\n                    const control = <FormArray>this.RiskAssessmentHazardViewModelForm.controls[\"RiskAssessmentHazardReviewViewModel\"];\n                    control.push(this.initRiskAssessmentHazardReview(m));\n                }\n            }\n        });\n\n    }\n    CloseDialog() {\n        this.hazardDropdown.nativeElement.disabled = false;\n        this.hazardDescription.nativeElement.disabled = false;\n    }\n\n    /* signature password section*/\n    public signatureForm: FormGroup;\n    @ViewChild('closeDialogSignature') closeDialogSignature;\n    initSignaturePassword(password: string = '') {\n        this.signatureForm = this._fb.group({\n            OldPassword: new FormControl(password, [Validators.required, Validators.minLength(8), this.validatePassword.bind(this)])\n        });\n    }\n\n    validatePassword(control: AbstractControl): { [key: string]: any } {\n        let result: boolean = null;\r\n        if (control.value == null || control.value == \"\")\r\n            result = true;\r\n        else if (control.value != \"\") {\r\n            this._UserService.verifyPassword(control.value).subscribe((res: boolean) => {\r\n                if (res == false) {\r\n                    result = true;\r\n                    this.signatureForm.controls[\"OldPassword\"].setErrors({ remote: \"Password doesn't match with old password.\" });\r\n                }\r\n            });\r\n        }\r\n        else\r\n            result = null;\r\n        return result ? { 'userName': { value: control.value } } : null;\r\n    }\n    SaveSignature() {\n        this._RiskAssessmentService.updateSignatureDate(this.riskAssessmentId).subscribe(res => {\n            this.CloseSignatureDialog();\n            this.getRiskAssessment();\n        });\n    }\n    CloseSignatureDialog() {\n        this.closeDialogSignature.nativeElement.click();\n    }\n    OpenSignatureDialog() {\n        this.initSignaturePassword('');\n    }\n    /* signature password section end*/\n\n    CompleteRiskAssessment() {\n        let length: number = this.hazardList.filter(x => x.ScoreColor == \"red\" && x.ReviewDate == null).length;\n        let orangeLength: number = this.hazardList.filter(x => x.ScoreColor == \"orange\" && x.ReviewDate == null).length;\n        let signedUser = this.signedUserList.filter(x => x.UserID == sessionStorage[\"UserId\"] as number);\n        if (length > 0)\n            alert(\"Assessment can't be completed with red score.\");\n        else if (orangeLength > 0 && signedUser != null && signedUser[0].SignedDate == null) {\n            alert(\"Please verify your signature first to complete this assessment.\");\n        }\n        else\n            this._RiskAssessmentService.updateRiskAssessmentStatus(this.riskAssessmentId).subscribe(res => { });\n    }\n    SetTrainingRequired() {\n        this._RiskAssessmentService.updateTrainigRequired(this.riskAssessmentId).subscribe(res => {\n\n        });\n    }\n    ReviewRiskAssessment() {\n        this._RiskAssessmentService.reviewRiskAssessment(this.riskAssessmentId).subscribe((res: number) => {\n            this.router.navigate(['/pages/riskassessment/' + res]);\n            this.riskAssessmentId = res;\n            // this.ngOnInit();\n            // this.getRiskAssessment();\n            // this.getList();\n            //this.myForm.controls[\"RiskAssessmentId\"].setValue(0);\n            //this.riskAssessmentId = 0;\n            //this.getList();\n            //this.signedUserTooltip = \"\";\n            //this.buttonComplete.nativeElement.hidden = true;\n            //this.buttonTraining.nativeElement.hidden = true;\n            //this.buttonSignature.nativeElement.hidden = true;\n            //this.buttonReview.nativeElement.hidden = true;\n        });\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/riskassessment/riskassessment.component.ts","import { NgbModal, NgbDateStruct, NgbTimeStruct } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nexport class MonitoringMethodModel {\r\n    public MonitoringMethodId: number;\r\n    public Method: string;\r\n}\r\n\r\nexport class DurationUnitModel {\r\n    public DurationUnitId: number;\r\n    public Text: string;\r\n}\r\n\r\nexport class HazardModel {\r\n    public HazardId: number;\r\n    public Text: string;\r\n    public OrganizationId: number;\r\n}\r\n\r\n\r\nexport class RiskAssessmentViewModel {\r\n    public RiskAssessmentId: number;\r\n    public Area: string;\r\n    public AssessmentDate: string;\r\n    public AssessmentDateDateStruct: NgbDateStruct;\r\n    public ReviewDuration; number;\r\n    public ReviewDurationUnit: number;\r\n    public TrainingRequired: boolean;\r\n    public Status: number;\r\n    public IsDeleted: boolean;\r\n    public IsArchived: boolean;\r\n    public RiskAssessmentTeamViewModel: RiskAssessmentTeamViewModel[];\r\n    public RiskAssessmentHazardViewModel: RiskAssessmentHazardViewModel[];\r\n}\r\n\r\nexport class RiskAssessmentTeamViewModel {\r\n    public RiskAssessmentTeamId: number;\r\n    public RiskAssessmentId: number;\r\n    public UserId: number;\r\n}\r\n\r\nexport class RiskAssessmentHazardViewModel {\r\n\r\n    public RiskAssessmentHarardId: number;\r\n    public HazardId: number;\r\n    public RiskAssessmentId: number;\r\n    public Description: string;\r\n    public IsReadyForReview: boolean = false;\r\n    public RiskAssessmentHazardMeasureViewModel: RiskAssessmentHazardMeasureViewModel[];\r\n    public RiskAssessmentHazardReviewViewModel: RiskAssessmentHazardReviewViewModel[];\r\n\r\n}\r\n\r\nexport class RiskAssessmentHazardMeasureViewModel {\r\n    public RiskAssessmentHazardMeasureId: number;\r\n    public RiskAssessmentId: number;\r\n    public RiskAssessmentHazardId: number;\r\n    public Text: string;\r\n    public DateAdded: Date;\r\n    public ActionId: number;\r\n}\r\n\r\nexport class RiskAssessmentHazardReviewViewModel {\r\n    public RiskAssessmentHazardReviewId: number;\r\n    public RiskAssessmentHazardId: number;\r\n    public CreatedDate: Date;\r\n    public UpdatedDate: Date;\r\n    public ReviewDate: Date;\r\n    public Consequence: number;\r\n    public Likelihood: number;\r\n    public MonitoringMethodId: number;\r\n\r\n\r\n}\r\n\r\nexport class HazardListModel {\r\n    public RiskAssessmentHarardId: number;\r\n    public HazardId: number;\r\n    public HazardText: string;\r\n    public Description: string;\r\n    public Consequence: number;\r\n    public Likelihood: number;\r\n    public Source: number;\r\n    public Method: string;\r\n    public MeasureText: string;\r\n    public ReviewDate: string = '';\r\n    public CreatedDate: string;\r\n    public IsReviewed: boolean;\r\n    public MeasureTextWithReviewDate: string;\r\n    public ScoreColor: string;\r\n    public MeasureTextArray: string[];\r\n    public MeasureTextWithReviewDateArray: string[];\r\n}\r\n\r\nexport class RiskAssessmentListFilterModel {\r\n    public SubjectFilter: string;\r\n    public AssessmentDateFilter: string;\r\n    public DurationUnitFilter: string;\r\n    public ResponsibleTeamFilter: string;\r\n    public PageNo: number;\r\n    public PageSize: number;\r\n    public SortOrder: string;\r\n    public SortColumn: string;\r\n}\r\n\r\nexport class RiskAssessmentListResult {\r\n    public Area: string;\r\n    public AssessmentDate: string;\r\n    public ReviewDuration: number;\r\n    public ReviewDurationUnit: number;\r\n    public RiskAssessmentId: number;\r\n    public DuratiuonUnit: string;\r\n    public RowID: number;\r\n    public RiskAssessmentTeam: string;\r\n    public DateColor: string = \"black\";\r\n    public Status: string;\r\n}\r\n\r\nexport class RiskAssessmentListData {\r\n\r\n    public TotalRecords: number;\r\n    public RiskAssessmentListResult: RiskAssessmentListResult[] = [];\r\n}\r\n\r\nexport class SignedUserList {\r\n    public UserID: number;\r\n    public Column1: string;\r\n    public SignedDate: string;\r\n    public SignedDateString: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/riskassessment/riskassessment.model.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DirectivesModule } from '../../theme/directives/directives.module';\nimport { RiskAssessmentListComponent } from './riskassessmentlist.component';\nimport { RiskAssessmentComponent } from './riskassessment.component';\nimport { MultiselectDropdownModule } from 'angular-2-dropdown-multiselect';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ChartModule, CalendarModule, SharedModule, DataTableModule, MultiSelectModule, SelectItem, CheckboxModule } from 'primeng/primeng';\n\nexport const routes = [\n    { path: '', component: RiskAssessmentComponent, pathMatch: 'full' },\n    { path: 'list', component: RiskAssessmentListComponent, data: { breadcrumb: 'List' } },\n    { path: 'riskassessment', component: RiskAssessmentComponent, data: { breadcrumb: 'Risk Assessment' } },\n    { path: ':id', component: RiskAssessmentComponent, data: { breadcrumb: 'Edit' } },\n]\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        DirectivesModule,\n        MultiselectDropdownModule,\n        NgbModule.forRoot(),\n        CalendarModule,\r\n        SharedModule,\n        DataTableModule,\n        MultiSelectModule,\n        CheckboxModule,\n        RouterModule.forChild(routes)\n    ],\n    declarations: [\n        RiskAssessmentComponent,\n        RiskAssessmentListComponent\n    ]\n})\nexport class RiskAssessmentModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/riskassessment/riskassessment.module.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\n//import { Observable } from 'rxjs/Observable';\r\nimport { Observable } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport 'rxjs/add/operator/map';\r\nimport { IMultiSelectOption, IMultiSelectSettings, IMultiSelectTexts } from 'angular-2-dropdown-multiselect';\r\n\r\nimport { RiskAssessmentListFilterModel, MonitoringMethodModel, RiskAssessmentViewModel, RiskAssessmentHazardViewModel } from '../riskassessment/riskassessment.model';\r\nimport { environment } from '../../../environments/environment';\r\nlet apiURL = environment.apiEndpoint;\r\n@Injectable()\r\nexport class RiskAssessmentService {\r\n\r\n    constructor(private http: Http) {\r\n    }\r\n\r\n    getAllHazard(): Observable<any> {\r\n        return this.http.get(apiURL + '/RiskAssessment/GetAllHazard').map(response => response.json());\r\n    }\r\n    getAllDurationUnit(): Observable<any> {\r\n        return this.http.get(apiURL + '/RiskAssessment/GetAllDurationUnit').map(response => response.json());\r\n    }\r\n    getAllMonitoringMethod(): Observable<any> {\r\n        return this.http.get(apiURL + '/RiskAssessment/GetAllMonitoringMethod').map(response => response.json());\r\n    }\r\n    addUpdateRiskAssessment(model: RiskAssessmentViewModel): Observable<any> {\r\n        return this.http.post(apiURL + '/RiskAssessment/AddUpdateRiskAssessment', model).map(response => response.json());\r\n    }\r\n    addUpdateRiskAssessmentHazard(model: RiskAssessmentHazardViewModel): Observable<any> {\r\n        return this.http.post(apiURL + '/RiskAssessment/AddUpdateRiskAssessmentHazard', model).map(response => response.json());\r\n    }\r\n    getRiskAssessment(id: number): Observable<any> {\r\n        return this.http.get(apiURL + '/RiskAssessment/GetSingleWithTeam?id=' + id).map(response => response.json());\r\n    }\r\n    getHazardList(id: number): Observable<any> {\r\n        return this.http.get(apiURL + '/RiskAssessment/GetHazardListWithRiskAssessmentId?id=' + id).map(response => response.json());\r\n    }\r\n    getRiskAssessmentList(filter: RiskAssessmentListFilterModel): Observable<any> {\r\n        return this.http.post(apiURL + '/RiskAssessment/GetRiskAssessmentListData', filter).map(response => response.json());\r\n    }\r\n    deleteAssessment(id: number): Observable<any> {\r\n        return this.http.get(apiURL + '/RiskAssessment/Delete?id=' + id).map(response => response.json());\r\n    }\r\n    updateSignatureDate(id: number): Observable<any> {\r\n        return this.http.get(apiURL + '/RiskAssessment/UpdateSignatureDate?id=' + id).map(response => response.json());\r\n    }\r\n    updateTrainigRequired(id: number): Observable<any> {\r\n        return this.http.get(apiURL + '/RiskAssessment/UpdateRiskAssessmentTrainingRequired?id=' + id).map(response => response.json());\r\n    }\r\n    updateRiskAssessmentStatus(id: number): Observable<any> {\r\n        return this.http.get(apiURL + '/RiskAssessment/UpdateRiskAssessmentStatus?id=' + id).map(response => response.json());\r\n    }\r\n    getSignedUserList(id: number): Observable<any> {\r\n        return this.http.get(apiURL + '/RiskAssessment/GetSignedUserList?id=' + id).map(response => response.json());\r\n    }\r\n    updateReviewDate(id: number): Observable<any> {\r\n        return this.http.get(apiURL + '/RiskAssessment/UpdateReviewDate?id=' + id).map(response => response.json());\r\n    }\r\n    reviewRiskAssessment(id: number): Observable<any> {\r\n        return this.http.get(apiURL + '/RiskAssessment/ReviewRiskAssessment?id=' + id).map(response => response.json());\r\n    }\r\n    getHazardData(id: number): Observable<any> {\r\n        return this.http.get(apiURL + '/RiskAssessment/GetRiskAssessmentHazardData?id=' + id).map(response => response.json());\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/riskassessment/riskassessment.service.ts","module.exports = \"<p-dataTable [value]=\\\"data\\\" [lazy]=\\\"true\\\" [rows]=\\\"10\\\" [paginator]=\\\"true\\\" [rowsPerPageOptions]=\\\"[5,10,20,50]\\\"\\r\\n             #dt resizableColumns=\\\"true\\\" reorderableColumns=\\\"true\\\" [responsive]=\\\"true\\\" [totalRecords]=\\\"totalRecords\\\" (onLazyLoad)=\\\"loadCarsLazy($event)\\\">\\r\\n    <!--<p-footer></p-footer>-->\\r\\n    <p-column field=\\\"Area\\\" header=\\\"Subject\\\" [filter]=\\\"true\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n    <p-column field=\\\"AssessmentDate\\\" header=\\\"Date\\\" [filter]=\\\"true\\\" [sortable]=\\\"true\\\">\\r\\n        <ng-template let-col let-car=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n            <span [style.color]=\\\"car.DateColor\\\">{{car[col.field]}}</span>\\r\\n            \\r\\n        </ng-template>\\r\\n    </p-column>\\r\\n    <!--<p-column field=\\\"ReviewDuration\\\" header=\\\"Review Duration\\\"></p-column>\\r\\n    <p-column field=\\\"DuratiuonUnit\\\" header=\\\"Duratiuon Unit\\\" [filter]=\\\"true\\\" [sortable]=\\\"true\\\"></p-column>-->\\r\\n    <p-column field=\\\"RiskAssessmentTeam\\\" header=\\\"Assessment Team\\\"></p-column>\\r\\n    <p-column field=\\\"Status\\\" header=\\\"Status\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n    <p-column styleClass=\\\"col-button\\\">\\r\\n        <ng-template pTemplate=\\\"header\\\">\\r\\n            <div class=\\\"ui-helper-clearfix\\\" style=\\\"width:100%\\\">\\r\\n                <button type=\\\"button\\\" pButton icon=\\\"fa-plus\\\" (click)=\\\"redirectToNewPage()\\\" label=\\\"Add\\\"></button>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n        <ng-template let-meeting=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n            <button type=\\\"button\\\" title=\\\"Edit\\\" pButton (click)=\\\"redirectToEditPage(meeting)\\\" icon=\\\"fa fa-pencil-square-o\\\"></button>\\r\\n            <button type=\\\"button\\\" title=\\\"Cancel\\\" pButton (click)=\\\"deleteAction(meeting)\\\" icon=\\\"fa fa-trash-o\\\"></button>\\r\\n        </ng-template>\\r\\n\\r\\n    </p-column>\\r\\n</p-dataTable>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/riskassessment/riskassessmentlist.component.html\n// module id = ../../../../../src/app/pages/riskassessment/riskassessmentlist.component.html\n// module chunks = riskassessment.module","import { Component, ViewEncapsulation, ViewChild, TemplateRef, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Validators, FormGroup, FormArray, FormBuilder } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { EventActionService } from '../eventactions/eventaction.service';\nimport { Location } from '@angular/common';\nimport { IMultiSelectOption, IMultiSelectSettings, IMultiSelectTexts } from 'angular-2-dropdown-multiselect';\nimport { Observable } from 'rxjs/Observable';\nimport { Http, URLSearchParams } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport { LocationModel, TitleModel, SubTitleModel, Title, SubTitle, Action, EventActionStatusModel, events, EventFilterModel, EventViewModel, EventDataModel, EventFilterViewModel, EventAttendeeDataModel, ActionDataModel, ActionResponsiblePersonDataModel, AgendaDataModel } from '../calendar/formeventdata';\nimport { CategoryModel, ActionSourceModel, ActionCommentsListModel } from '../eventactions/eventaction.model';\nimport { MasterEventDataService } from '../calendar/Mastereventdata';\nimport { LazyLoadEvent, FilterMetadata } from 'primeng/components/common/api';\r\nimport { UserViewModel, RoleViewModel, SecurityQuestionModel, OrgaizationViewModel, UserViewListModel, UserViewList } from '../user/user.model';\r\nimport { AccordionModule, MultiSelectModule, SelectItem, CheckboxModule } from 'primeng/primeng';     //accordion and accordion tab\r\nimport { MenuItem } from 'primeng/primeng';\nimport { UserService } from \"../user/user.service\";\nimport { RiskAssessmentService } from '../riskassessment/riskassessment.service';\nimport { RiskAssessmentListResult, RiskAssessmentListData, RiskAssessmentListFilterModel, HazardListModel, MonitoringMethodModel, DurationUnitModel, HazardModel, RiskAssessmentViewModel, RiskAssessmentTeamViewModel, RiskAssessmentHazardViewModel, RiskAssessmentHazardMeasureViewModel, RiskAssessmentHazardReviewViewModel } from '../riskassessment/riskassessment.model';\n\n@Component({\n    selector: 'app-riskassessmentlist',\n    templateUrl: './riskassessmentlist.component.html',\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['../../../../node_modules/primeng/resources/primeng.min.css',\n        \"../../../../node_modules/primeng/resources/themes/omega/theme.css\"],\n    providers: [EventActionService, MasterEventDataService, UserService, RiskAssessmentService],\n\n\n})\n\nexport class RiskAssessmentListComponent implements OnInit {\n    filterData: RiskAssessmentListFilterModel;\n    data: RiskAssessmentListResult[];\n    totalRecords: number = 0;\n    constructor(private _RiskAssessmentService: RiskAssessmentService, private _UserService: UserService, private router: Router, private location: Location, private _fb: FormBuilder, private _dataService: EventActionService, private route: ActivatedRoute, private _masterDataService: MasterEventDataService) { }\n    ngOnInit() {\n        this.filterData = new RiskAssessmentListFilterModel();\n        this.filterData.PageNo = 1;\n        this.filterData.PageSize = 10;\n        this.filterData.SortColumn = \"Area\";\n        this.filterData.SortOrder = \"asc\";\n    }\n    getList() {\r\n        this._RiskAssessmentService.getRiskAssessmentList(this.filterData)\r\n            .subscribe((res: RiskAssessmentListData) => {\r\n                this.totalRecords = res.TotalRecords;\r\n                this.data = res.RiskAssessmentListResult\r\n            });\r\n    }\n    public redirectToEditPage(event: RiskAssessmentListResult) {\n        this.router.navigate(['/pages/riskassessment/' + event.RiskAssessmentId]);\n    }\n    public deleteAction(event: RiskAssessmentListResult) {\n        if (confirm(\"Are you sure want to delete this assessment ?\")) {\n            this._RiskAssessmentService.deleteAssessment(event.RiskAssessmentId).subscribe(res => {\n                this.getList();\n            });\n        }\n    }\n    redirectToNewPage() {\n        this.router.navigate(['/pages/riskassessment']);\n    }\n\r\n    loadCarsLazy(event: LazyLoadEvent) {\r\n\r\n        this.filterData.PageNo = (event.first / event.rows) + 1;\r\n        this.filterData.PageSize = event.rows;\r\n        this.filterData.SortColumn = event.sortField;\r\n        this.filterData.SortOrder = event.sortOrder == 1 ? \"asc\" : \"desc\";\r\n        this.filterData.SubjectFilter = event.filters.Area == undefined ? '' : event.filters.Area.value;\r\n        this.filterData.AssessmentDateFilter = event.filters.AssessmentDate == undefined ? '' : event.filters.AssessmentDate.value;\r\n        this.filterData.DurationUnitFilter = event.filters.DuratiuonUnit == undefined ? '' : event.filters.DuratiuonUnit.value;\r\n        //this.filterData.ResponsibleTeamFilter = event.filters.FirstName == undefined ? '' : event.filters.FirstName.value;\r\n\r\n        this.getList();\r\n\r\n    }\r\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/riskassessment/riskassessmentlist.component.ts"],"sourceRoot":"webpack:///"}