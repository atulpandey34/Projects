//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Angular2_AspDotNet.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Angular2_AspDotNetEntities : DbContext
    {
        public Angular2_AspDotNetEntities()
            : base("name=Angular2_AspDotNetEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ActionResponsiblePerson> ActionResponsiblePersons { get; set; }
        public virtual DbSet<Location> Locations { get; set; }
        public virtual DbSet<SubTitle> SubTitles { get; set; }
        public virtual DbSet<Title> Titles { get; set; }
        public virtual DbSet<EventActionStatu> EventActionStatus { get; set; }
        public virtual DbSet<ActionComment> ActionComments { get; set; }
        public virtual DbSet<ActionSource> ActionSources { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<CorrectiveAction> CorrectiveActions { get; set; }
        public virtual DbSet<ResultOfCorrectiveAction> ResultOfCorrectiveActions { get; set; }
        public virtual DbSet<CorrectiveActionAssignedToList> CorrectiveActionAssignedToLists { get; set; }
        public virtual DbSet<DurationUnit> DurationUnits { get; set; }
        public virtual DbSet<MonitoringMethod> MonitoringMethods { get; set; }
        public virtual DbSet<RiskAssessment> RiskAssessments { get; set; }
        public virtual DbSet<RiskAssessmentHazardMeasure> RiskAssessmentHazardMeasures { get; set; }
        public virtual DbSet<RiskAssessmentHazardReview> RiskAssessmentHazardReviews { get; set; }
        public virtual DbSet<RiskAssessmentTeam> RiskAssessmentTeams { get; set; }
        public virtual DbSet<RiskAssessmentHazard> RiskAssessmentHazards { get; set; }
        public virtual DbSet<Assignment> Assignments { get; set; }
        public virtual DbSet<AssignmentQuestion> AssignmentQuestions { get; set; }
        public virtual DbSet<Training> Trainings { get; set; }
        public virtual DbSet<RiskAssessmentReview> RiskAssessmentReviews { get; set; }
        public virtual DbSet<TrainingMaterial> TrainingMaterials { get; set; }
        public virtual DbSet<TrainingSchedule> TrainingSchedules { get; set; }
        public virtual DbSet<TrainingScheduleUser> TrainingScheduleUsers { get; set; }
        public virtual DbSet<AssignmentQuestionOption> AssignmentQuestionOptions { get; set; }
        public virtual DbSet<TrainingAssignmentAnswer> TrainingAssignmentAnswers { get; set; }
        public virtual DbSet<TrainingAssignmentAttempt> TrainingAssignmentAttempts { get; set; }
        public virtual DbSet<TrainingScheduleRole> TrainingScheduleRoles { get; set; }
        public virtual DbSet<DocumentNotification> DocumentNotifications { get; set; }
        public virtual DbSet<MasterDocumentType> MasterDocumentTypes { get; set; }
        public virtual DbSet<UserScheduleResult> UserScheduleResults { get; set; }
        public virtual DbSet<DocumentVersion> DocumentVersions { get; set; }
        public virtual DbSet<MasterReviewFrequencyUnit> MasterReviewFrequencyUnits { get; set; }
        public virtual DbSet<DocumentFolderRole> DocumentFolderRoles { get; set; }
        public virtual DbSet<DocumentFolderUser> DocumentFolderUsers { get; set; }
        public virtual DbSet<MasterNotificationSource> MasterNotificationSources { get; set; }
        public virtual DbSet<MasterNotificationType> MasterNotificationTypes { get; set; }
        public virtual DbSet<Notification> Notifications { get; set; }
        public virtual DbSet<MasterDocumentFolder> MasterDocumentFolders { get; set; }
        public virtual DbSet<Document> Documents { get; set; }
        public virtual DbSet<MasterRoleSection> MasterRoleSections { get; set; }
        public virtual DbSet<RoleResponsibility> RoleResponsibilities { get; set; }
        public virtual DbSet<RoleResponsibilityVersionSection> RoleResponsibilityVersionSections { get; set; }
        public virtual DbSet<Action> Actions { get; set; }
        public virtual DbSet<Agendum> Agenda { get; set; }
        public virtual DbSet<Hazard> Hazards { get; set; }
        public virtual DbSet<Appointment> Appointments { get; set; }
        public virtual DbSet<Event> Events { get; set; }
        public virtual DbSet<AuditEvent> AuditEvents { get; set; }
        public virtual DbSet<Objective> Objectives { get; set; }
        public virtual DbSet<Frequency> Frequencies { get; set; }
        public virtual DbSet<MeasureColumn> MeasureColumns { get; set; }
        public virtual DbSet<MeasureObjective> MeasureObjectives { get; set; }
        public virtual DbSet<Measure> Measures { get; set; }
        public virtual DbSet<MeasureColumnData> MeasureColumnDatas { get; set; }
        public virtual DbSet<PerformanceReview> PerformanceReviews { get; set; }
        public virtual DbSet<ELMAH_Error> ELMAH_Error { get; set; }
        public virtual DbSet<Menu> Menus { get; set; }
        public virtual DbSet<RoleMenuMapping> RoleMenuMappings { get; set; }
        public virtual DbSet<UserRole> UserRoles { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<SecurityQuestion> SecurityQuestions { get; set; }
        public virtual DbSet<Organization> Organizations { get; set; }
        public virtual DbSet<EventAttendee> EventAttendees { get; set; }
        public virtual DbSet<RoleResponsibilityVersion> RoleResponsibilityVersions { get; set; }
        public virtual DbSet<Audit> Audits { get; set; }
        public virtual DbSet<AuditSubjectQuestionResponse> AuditSubjectQuestionResponses { get; set; }
        public virtual DbSet<AuditSubject> AuditSubjects { get; set; }
        public virtual DbSet<AuditSubjectReview> AuditSubjectReviews { get; set; }
        public virtual DbSet<AuditSubjectQuestion> AuditSubjectQuestions { get; set; }
    
        public virtual int SP_DeleteEvent(Nullable<int> eventId)
        {
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DeleteEvent", eventIdParameter);
        }
    
        public virtual int SP_DeleteEventAgenda(Nullable<int> eventId, Nullable<int> organizationId)
        {
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(int));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DeleteEventAgenda", eventIdParameter, organizationIdParameter);
        }
    
        public virtual int SP_DeleteEventAttendees(Nullable<int> eventId, Nullable<int> organizationId)
        {
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(int));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DeleteEventAttendees", eventIdParameter, organizationIdParameter);
        }
    
        public virtual int Sp_DeleteActionResponsiblePerson(Nullable<int> actionId)
        {
            var actionIdParameter = actionId.HasValue ?
                new ObjectParameter("ActionId", actionId) :
                new ObjectParameter("ActionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_DeleteActionResponsiblePerson", actionIdParameter);
        }
    
        public virtual int SP_GetAllEventData(Nullable<int> type, Nullable<int> subType, string viewType, string selectedDate, Nullable<int> organizationId)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            var subTypeParameter = subType.HasValue ?
                new ObjectParameter("subType", subType) :
                new ObjectParameter("subType", typeof(int));
    
            var viewTypeParameter = viewType != null ?
                new ObjectParameter("viewType", viewType) :
                new ObjectParameter("viewType", typeof(string));
    
            var selectedDateParameter = selectedDate != null ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(string));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GetAllEventData", typeParameter, subTypeParameter, viewTypeParameter, selectedDateParameter, organizationIdParameter);
        }
    
        public virtual ObjectResult<SP_GetEventActionList_Result> SP_GetEventActionList(Nullable<int> loggedInUserId, Nullable<int> organizationId)
        {
            var loggedInUserIdParameter = loggedInUserId.HasValue ?
                new ObjectParameter("LoggedInUserId", loggedInUserId) :
                new ObjectParameter("LoggedInUserId", typeof(int));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetEventActionList_Result>("SP_GetEventActionList", loggedInUserIdParameter, organizationIdParameter);
        }
    
        public virtual int SP_DeleteAction(Nullable<int> actionID, Nullable<int> organizationId)
        {
            var actionIDParameter = actionID.HasValue ?
                new ObjectParameter("ActionID", actionID) :
                new ObjectParameter("ActionID", typeof(int));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DeleteAction", actionIDParameter, organizationIdParameter);
        }
    
        public virtual ObjectResult<SP_GetActionComments_Result> SP_GetActionComments(Nullable<int> actionID, Nullable<int> organizationId)
        {
            var actionIDParameter = actionID.HasValue ?
                new ObjectParameter("ActionID", actionID) :
                new ObjectParameter("ActionID", typeof(int));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetActionComments_Result>("SP_GetActionComments", actionIDParameter, organizationIdParameter);
        }
    
        public virtual int SP_GetEventData(Nullable<int> eventId, Nullable<int> organizationId)
        {
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(int));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GetEventData", eventIdParameter, organizationIdParameter);
        }
    
        public virtual ObjectResult<SP_GetMeetingList_Result> SP_GetMeetingList(Nullable<int> pageNo, Nullable<int> pageSize, string sortColumn, string sortOrder, string subTitle, string action, string date, string location, Nullable<int> organizationId, ObjectParameter totalRecords)
        {
            var pageNoParameter = pageNo.HasValue ?
                new ObjectParameter("PageNo", pageNo) :
                new ObjectParameter("PageNo", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("SortColumn", sortColumn) :
                new ObjectParameter("SortColumn", typeof(string));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(string));
    
            var subTitleParameter = subTitle != null ?
                new ObjectParameter("SubTitle", subTitle) :
                new ObjectParameter("SubTitle", typeof(string));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var dateParameter = date != null ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetMeetingList_Result>("SP_GetMeetingList", pageNoParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, subTitleParameter, actionParameter, dateParameter, locationParameter, organizationIdParameter, totalRecords);
        }
    
        [DbFunction("Angular2_AspDotNetEntities", "FN_SplitStringIntoInteger")]
        public virtual IQueryable<Nullable<int>> FN_SplitStringIntoInteger(string input, string character)
        {
            var inputParameter = input != null ?
                new ObjectParameter("Input", input) :
                new ObjectParameter("Input", typeof(string));
    
            var characterParameter = character != null ?
                new ObjectParameter("Character", character) :
                new ObjectParameter("Character", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Nullable<int>>("[Angular2_AspDotNetEntities].[FN_SplitStringIntoInteger](@Input, @Character)", inputParameter, characterParameter);
        }
    
        public virtual ObjectResult<SP_GetEventActionListV1_Result> SP_GetEventActionListV1(Nullable<int> pageNo, Nullable<int> pageSize, string sortColumn, string sortOrder, string titleFilter, string dueDateFilter, string statusFilter, string organizerFilter, Nullable<int> organizationId, ObjectParameter totalRecords)
        {
            var pageNoParameter = pageNo.HasValue ?
                new ObjectParameter("PageNo", pageNo) :
                new ObjectParameter("PageNo", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("SortColumn", sortColumn) :
                new ObjectParameter("SortColumn", typeof(string));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(string));
    
            var titleFilterParameter = titleFilter != null ?
                new ObjectParameter("titleFilter", titleFilter) :
                new ObjectParameter("titleFilter", typeof(string));
    
            var dueDateFilterParameter = dueDateFilter != null ?
                new ObjectParameter("dueDateFilter", dueDateFilter) :
                new ObjectParameter("dueDateFilter", typeof(string));
    
            var statusFilterParameter = statusFilter != null ?
                new ObjectParameter("statusFilter", statusFilter) :
                new ObjectParameter("statusFilter", typeof(string));
    
            var organizerFilterParameter = organizerFilter != null ?
                new ObjectParameter("organizerFilter", organizerFilter) :
                new ObjectParameter("organizerFilter", typeof(string));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetEventActionListV1_Result>("SP_GetEventActionListV1", pageNoParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, titleFilterParameter, dueDateFilterParameter, statusFilterParameter, organizerFilterParameter, organizationIdParameter, totalRecords);
        }
    
        public virtual int SP_DeleteUser(Nullable<int> userId, Nullable<int> organizationId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DeleteUser", userIdParameter, organizationIdParameter);
        }
    
        public virtual ObjectResult<SP_GetSecurityQustionOfUser_Result> SP_GetSecurityQustionOfUser(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetSecurityQustionOfUser_Result>("SP_GetSecurityQustionOfUser", userNameParameter);
        }
    
        public virtual ObjectResult<SP_GetCorrectiveActionList_Result> SP_GetCorrectiveActionList(Nullable<int> pageNo, Nullable<int> pageSize, string sortColumn, string sortOrder, string titleFilter, string assignedByFilter, string categoryFilter, string sourceFilter, string actionTakenFilter, string dueDateFilter, string rootCauseFilter, Nullable<int> organizationId, ObjectParameter totalRecords)
        {
            var pageNoParameter = pageNo.HasValue ?
                new ObjectParameter("PageNo", pageNo) :
                new ObjectParameter("PageNo", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("SortColumn", sortColumn) :
                new ObjectParameter("SortColumn", typeof(string));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(string));
    
            var titleFilterParameter = titleFilter != null ?
                new ObjectParameter("TitleFilter", titleFilter) :
                new ObjectParameter("TitleFilter", typeof(string));
    
            var assignedByFilterParameter = assignedByFilter != null ?
                new ObjectParameter("AssignedByFilter", assignedByFilter) :
                new ObjectParameter("AssignedByFilter", typeof(string));
    
            var categoryFilterParameter = categoryFilter != null ?
                new ObjectParameter("CategoryFilter", categoryFilter) :
                new ObjectParameter("CategoryFilter", typeof(string));
    
            var sourceFilterParameter = sourceFilter != null ?
                new ObjectParameter("SourceFilter", sourceFilter) :
                new ObjectParameter("SourceFilter", typeof(string));
    
            var actionTakenFilterParameter = actionTakenFilter != null ?
                new ObjectParameter("ActionTakenFilter", actionTakenFilter) :
                new ObjectParameter("ActionTakenFilter", typeof(string));
    
            var dueDateFilterParameter = dueDateFilter != null ?
                new ObjectParameter("DueDateFilter", dueDateFilter) :
                new ObjectParameter("DueDateFilter", typeof(string));
    
            var rootCauseFilterParameter = rootCauseFilter != null ?
                new ObjectParameter("RootCauseFilter", rootCauseFilter) :
                new ObjectParameter("RootCauseFilter", typeof(string));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetCorrectiveActionList_Result>("SP_GetCorrectiveActionList", pageNoParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, titleFilterParameter, assignedByFilterParameter, categoryFilterParameter, sourceFilterParameter, actionTakenFilterParameter, dueDateFilterParameter, rootCauseFilterParameter, organizationIdParameter, totalRecords);
        }
    
        public virtual int SP_AddCorrectiveActionResult(Nullable<int> addedBY, Nullable<int> correctiveActionId, string result, Nullable<int> organizationId)
        {
            var addedBYParameter = addedBY.HasValue ?
                new ObjectParameter("AddedBY", addedBY) :
                new ObjectParameter("AddedBY", typeof(int));
    
            var correctiveActionIdParameter = correctiveActionId.HasValue ?
                new ObjectParameter("CorrectiveActionId", correctiveActionId) :
                new ObjectParameter("CorrectiveActionId", typeof(int));
    
            var resultParameter = result != null ?
                new ObjectParameter("Result", result) :
                new ObjectParameter("Result", typeof(string));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_AddCorrectiveActionResult", addedBYParameter, correctiveActionIdParameter, resultParameter, organizationIdParameter);
        }
    
        public virtual int SP_DeleteCorrectiveList(Nullable<int> correctiveActionId, Nullable<int> organizationId)
        {
            var correctiveActionIdParameter = correctiveActionId.HasValue ?
                new ObjectParameter("CorrectiveActionId", correctiveActionId) :
                new ObjectParameter("CorrectiveActionId", typeof(int));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DeleteCorrectiveList", correctiveActionIdParameter, organizationIdParameter);
        }
    
        public virtual int SP_DeleteCorrectiveAction(Nullable<int> correctiveActionId, Nullable<int> organizationId)
        {
            var correctiveActionIdParameter = correctiveActionId.HasValue ?
                new ObjectParameter("CorrectiveActionId", correctiveActionId) :
                new ObjectParameter("CorrectiveActionId", typeof(int));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DeleteCorrectiveAction", correctiveActionIdParameter, organizationIdParameter);
        }
    
        public virtual ObjectResult<sp_GetUserList_Result> sp_GetUserList(Nullable<int> pageNo, Nullable<int> pageSize, string sortColumn, string sortOrder, string organizationFilter, string roleFilter, string userNameFilter, string firstNameFilter, string lastNameFilter, string emailIdFilter, Nullable<bool> inactiveFilter, Nullable<int> organizationId, ObjectParameter totalRecords)
        {
            var pageNoParameter = pageNo.HasValue ?
                new ObjectParameter("PageNo", pageNo) :
                new ObjectParameter("PageNo", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("SortColumn", sortColumn) :
                new ObjectParameter("SortColumn", typeof(string));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(string));
    
            var organizationFilterParameter = organizationFilter != null ?
                new ObjectParameter("OrganizationFilter", organizationFilter) :
                new ObjectParameter("OrganizationFilter", typeof(string));
    
            var roleFilterParameter = roleFilter != null ?
                new ObjectParameter("RoleFilter", roleFilter) :
                new ObjectParameter("RoleFilter", typeof(string));
    
            var userNameFilterParameter = userNameFilter != null ?
                new ObjectParameter("UserNameFilter", userNameFilter) :
                new ObjectParameter("UserNameFilter", typeof(string));
    
            var firstNameFilterParameter = firstNameFilter != null ?
                new ObjectParameter("FirstNameFilter", firstNameFilter) :
                new ObjectParameter("FirstNameFilter", typeof(string));
    
            var lastNameFilterParameter = lastNameFilter != null ?
                new ObjectParameter("LastNameFilter", lastNameFilter) :
                new ObjectParameter("LastNameFilter", typeof(string));
    
            var emailIdFilterParameter = emailIdFilter != null ?
                new ObjectParameter("EmailIdFilter", emailIdFilter) :
                new ObjectParameter("EmailIdFilter", typeof(string));
    
            var inactiveFilterParameter = inactiveFilter.HasValue ?
                new ObjectParameter("InactiveFilter", inactiveFilter) :
                new ObjectParameter("InactiveFilter", typeof(bool));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetUserList_Result>("sp_GetUserList", pageNoParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, organizationFilterParameter, roleFilterParameter, userNameFilterParameter, firstNameFilterParameter, lastNameFilterParameter, emailIdFilterParameter, inactiveFilterParameter, organizationIdParameter, totalRecords);
        }
    
        public virtual int SP_DeleteAllRiskAssessmentTeam(Nullable<int> riskAssessmentId, Nullable<int> organizationId)
        {
            var riskAssessmentIdParameter = riskAssessmentId.HasValue ?
                new ObjectParameter("RiskAssessmentId", riskAssessmentId) :
                new ObjectParameter("RiskAssessmentId", typeof(int));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DeleteAllRiskAssessmentTeam", riskAssessmentIdParameter, organizationIdParameter);
        }
    
        public virtual int SP_SerRiskAssessmentReviewDate(Nullable<int> riskAssessmentHazardId)
        {
            var riskAssessmentHazardIdParameter = riskAssessmentHazardId.HasValue ?
                new ObjectParameter("RiskAssessmentHazardId", riskAssessmentHazardId) :
                new ObjectParameter("RiskAssessmentHazardId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SerRiskAssessmentReviewDate", riskAssessmentHazardIdParameter);
        }
    
        public virtual ObjectResult<SP_GetRiskAssessmentHazardList_Result> SP_GetRiskAssessmentHazardList(Nullable<int> riskAssessmentId, Nullable<int> organizationId)
        {
            var riskAssessmentIdParameter = riskAssessmentId.HasValue ?
                new ObjectParameter("RiskAssessmentId", riskAssessmentId) :
                new ObjectParameter("RiskAssessmentId", typeof(int));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetRiskAssessmentHazardList_Result>("SP_GetRiskAssessmentHazardList", riskAssessmentIdParameter, organizationIdParameter);
        }
    
        public virtual int SP_UpdateRiskAssessmentSignatureDate(Nullable<int> userId, Nullable<int> riskAssessmentId, Nullable<int> organizationId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var riskAssessmentIdParameter = riskAssessmentId.HasValue ?
                new ObjectParameter("RiskAssessmentId", riskAssessmentId) :
                new ObjectParameter("RiskAssessmentId", typeof(int));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UpdateRiskAssessmentSignatureDate", userIdParameter, riskAssessmentIdParameter, organizationIdParameter);
        }
    
        public virtual ObjectResult<SP_GetSignedUserList_Result> SP_GetSignedUserList(Nullable<int> riskAssessmentId, Nullable<int> organizationId)
        {
            var riskAssessmentIdParameter = riskAssessmentId.HasValue ?
                new ObjectParameter("RiskAssessmentId", riskAssessmentId) :
                new ObjectParameter("RiskAssessmentId", typeof(int));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetSignedUserList_Result>("SP_GetSignedUserList", riskAssessmentIdParameter, organizationIdParameter);
        }
    
        public virtual ObjectResult<SP_GetRiskAssessmentList_Result> SP_GetRiskAssessmentList(Nullable<int> pageNo, Nullable<int> pageSize, string sortColumn, string sortOrder, string subjectFilter, string assessmentDateFilter, string durationUnitFilter, string responsibleTeamFilter, Nullable<int> organizationId, ObjectParameter totalRecords)
        {
            var pageNoParameter = pageNo.HasValue ?
                new ObjectParameter("PageNo", pageNo) :
                new ObjectParameter("PageNo", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("SortColumn", sortColumn) :
                new ObjectParameter("SortColumn", typeof(string));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(string));
    
            var subjectFilterParameter = subjectFilter != null ?
                new ObjectParameter("SubjectFilter", subjectFilter) :
                new ObjectParameter("SubjectFilter", typeof(string));
    
            var assessmentDateFilterParameter = assessmentDateFilter != null ?
                new ObjectParameter("AssessmentDateFilter", assessmentDateFilter) :
                new ObjectParameter("AssessmentDateFilter", typeof(string));
    
            var durationUnitFilterParameter = durationUnitFilter != null ?
                new ObjectParameter("DurationUnitFilter", durationUnitFilter) :
                new ObjectParameter("DurationUnitFilter", typeof(string));
    
            var responsibleTeamFilterParameter = responsibleTeamFilter != null ?
                new ObjectParameter("ResponsibleTeamFilter", responsibleTeamFilter) :
                new ObjectParameter("ResponsibleTeamFilter", typeof(string));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetRiskAssessmentList_Result>("SP_GetRiskAssessmentList", pageNoParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, subjectFilterParameter, assessmentDateFilterParameter, durationUnitFilterParameter, responsibleTeamFilterParameter, organizationIdParameter, totalRecords);
        }
    
        public virtual ObjectResult<SP_GetAssignmentQuestionList_Result> SP_GetAssignmentQuestionList(Nullable<int> pageNo, Nullable<int> pageSize, string sortColumn, string sortOrder, string questionText, Nullable<int> questionType, Nullable<int> score, Nullable<int> order, Nullable<int> active, ObjectParameter totalRecords)
        {
            var pageNoParameter = pageNo.HasValue ?
                new ObjectParameter("PageNo", pageNo) :
                new ObjectParameter("PageNo", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("SortColumn", sortColumn) :
                new ObjectParameter("SortColumn", typeof(string));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(string));
    
            var questionTextParameter = questionText != null ?
                new ObjectParameter("QuestionText", questionText) :
                new ObjectParameter("QuestionText", typeof(string));
    
            var questionTypeParameter = questionType.HasValue ?
                new ObjectParameter("QuestionType", questionType) :
                new ObjectParameter("QuestionType", typeof(int));
    
            var scoreParameter = score.HasValue ?
                new ObjectParameter("Score", score) :
                new ObjectParameter("Score", typeof(int));
    
            var orderParameter = order.HasValue ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetAssignmentQuestionList_Result>("SP_GetAssignmentQuestionList", pageNoParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, questionTextParameter, questionTypeParameter, scoreParameter, orderParameter, activeParameter, totalRecords);
        }
    
        public virtual int SP_DeleteALLTrainingScheduleRole(Nullable<int> trainingScheduleId, Nullable<int> organizationId)
        {
            var trainingScheduleIdParameter = trainingScheduleId.HasValue ?
                new ObjectParameter("TrainingScheduleId", trainingScheduleId) :
                new ObjectParameter("TrainingScheduleId", typeof(int));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DeleteALLTrainingScheduleRole", trainingScheduleIdParameter, organizationIdParameter);
        }
    
        public virtual int SP_DeleteALLTrainingScheduleUser(Nullable<int> trainingScheduleId, Nullable<int> organizationId)
        {
            var trainingScheduleIdParameter = trainingScheduleId.HasValue ?
                new ObjectParameter("TrainingScheduleId", trainingScheduleId) :
                new ObjectParameter("TrainingScheduleId", typeof(int));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DeleteALLTrainingScheduleUser", trainingScheduleIdParameter, organizationIdParameter);
        }
    
        public virtual ObjectResult<SP_GetAssignmentList_Result> SP_GetAssignmentList(Nullable<int> pageNo, Nullable<int> pageSize, string sortColumn, string sortOrder, string title, Nullable<int> active, Nullable<int> organizationId, ObjectParameter totalRecords)
        {
            var pageNoParameter = pageNo.HasValue ?
                new ObjectParameter("PageNo", pageNo) :
                new ObjectParameter("PageNo", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("SortColumn", sortColumn) :
                new ObjectParameter("SortColumn", typeof(string));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetAssignmentList_Result>("SP_GetAssignmentList", pageNoParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, titleParameter, activeParameter, organizationIdParameter, totalRecords);
        }
    
        public virtual ObjectResult<SP_GetAssignmentQuestionListWithOption_Result> SP_GetAssignmentQuestionListWithOption(Nullable<int> assignmentId)
        {
            var assignmentIdParameter = assignmentId.HasValue ?
                new ObjectParameter("AssignmentId", assignmentId) :
                new ObjectParameter("AssignmentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetAssignmentQuestionListWithOption_Result>("SP_GetAssignmentQuestionListWithOption", assignmentIdParameter);
        }
    
        public virtual int SP_DeleteQuestionWithOption(Nullable<int> questionId, Nullable<int> organizationId)
        {
            var questionIdParameter = questionId.HasValue ?
                new ObjectParameter("QuestionId", questionId) :
                new ObjectParameter("QuestionId", typeof(int));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DeleteQuestionWithOption", questionIdParameter, organizationIdParameter);
        }
    
        public virtual int SP_DeleteQuestionOptions(Nullable<int> questionId)
        {
            var questionIdParameter = questionId.HasValue ?
                new ObjectParameter("QuestionId", questionId) :
                new ObjectParameter("QuestionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DeleteQuestionOptions", questionIdParameter);
        }
    
        public virtual int SP_DeleteTrainignSchedule(Nullable<int> trainingScheduleId, Nullable<int> organizationId)
        {
            var trainingScheduleIdParameter = trainingScheduleId.HasValue ?
                new ObjectParameter("TrainingScheduleId", trainingScheduleId) :
                new ObjectParameter("TrainingScheduleId", typeof(int));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DeleteTrainignSchedule", trainingScheduleIdParameter, organizationIdParameter);
        }
    
        public virtual ObjectResult<SP_GetDocumentById_Result> SP_GetDocumentById(Nullable<int> documentId, Nullable<int> organizationId)
        {
            var documentIdParameter = documentId.HasValue ?
                new ObjectParameter("DocumentId", documentId) :
                new ObjectParameter("DocumentId", typeof(int));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetDocumentById_Result>("SP_GetDocumentById", documentIdParameter, organizationIdParameter);
        }
    
        public virtual ObjectResult<SP_GetDocumentVersionList_Result> SP_GetDocumentVersionList(Nullable<int> documentID, Nullable<int> organizationId)
        {
            var documentIDParameter = documentID.HasValue ?
                new ObjectParameter("DocumentID", documentID) :
                new ObjectParameter("DocumentID", typeof(int));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetDocumentVersionList_Result>("SP_GetDocumentVersionList", documentIDParameter, organizationIdParameter);
        }
    
        public virtual ObjectResult<SP_GetDocumentFolder_Result> SP_GetDocumentFolder(Nullable<int> pageNo, Nullable<int> pageSize, string sortColumn, string sortOrder, string folderName, string roleName, string userName, Nullable<int> organizationId, ObjectParameter totalRecords)
        {
            var pageNoParameter = pageNo.HasValue ?
                new ObjectParameter("PageNo", pageNo) :
                new ObjectParameter("PageNo", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("SortColumn", sortColumn) :
                new ObjectParameter("SortColumn", typeof(string));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(string));
    
            var folderNameParameter = folderName != null ?
                new ObjectParameter("FolderName", folderName) :
                new ObjectParameter("FolderName", typeof(string));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetDocumentFolder_Result>("SP_GetDocumentFolder", pageNoParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, folderNameParameter, roleNameParameter, userNameParameter, organizationIdParameter, totalRecords);
        }
    
        public virtual int SP_DeleteALLDocumentFolderRole(Nullable<int> documentFolderID, Nullable<int> organizationId)
        {
            var documentFolderIDParameter = documentFolderID.HasValue ?
                new ObjectParameter("DocumentFolderID", documentFolderID) :
                new ObjectParameter("DocumentFolderID", typeof(int));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DeleteALLDocumentFolderRole", documentFolderIDParameter, organizationIdParameter);
        }
    
        public virtual int SP_DeleteALLDocumentFolderUser(Nullable<int> documentFolderID, Nullable<int> organizationId)
        {
            var documentFolderIDParameter = documentFolderID.HasValue ?
                new ObjectParameter("DocumentFolderID", documentFolderID) :
                new ObjectParameter("DocumentFolderID", typeof(int));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DeleteALLDocumentFolderUser", documentFolderIDParameter, organizationIdParameter);
        }
    
        public virtual int sp_DeleteHazardReviewAndMeasure(Nullable<int> hazardId, Nullable<int> organizationId)
        {
            var hazardIdParameter = hazardId.HasValue ?
                new ObjectParameter("HazardId", hazardId) :
                new ObjectParameter("HazardId", typeof(int));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteHazardReviewAndMeasure", hazardIdParameter, organizationIdParameter);
        }
    
        public virtual ObjectResult<SP_GetDocumentList_Result> SP_GetDocumentList(Nullable<int> pageNo, Nullable<int> pageSize, string sortColumn, string sortOrder, string documentName, string uploadBy, string version, string review, string type, string folderName, Nullable<int> userid, Nullable<int> organizationId, ObjectParameter totalRecords)
        {
            var pageNoParameter = pageNo.HasValue ?
                new ObjectParameter("PageNo", pageNo) :
                new ObjectParameter("PageNo", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("SortColumn", sortColumn) :
                new ObjectParameter("SortColumn", typeof(string));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(string));
    
            var documentNameParameter = documentName != null ?
                new ObjectParameter("DocumentName", documentName) :
                new ObjectParameter("DocumentName", typeof(string));
    
            var uploadByParameter = uploadBy != null ?
                new ObjectParameter("UploadBy", uploadBy) :
                new ObjectParameter("UploadBy", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var reviewParameter = review != null ?
                new ObjectParameter("Review", review) :
                new ObjectParameter("Review", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var folderNameParameter = folderName != null ?
                new ObjectParameter("FolderName", folderName) :
                new ObjectParameter("FolderName", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(int));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetDocumentList_Result>("SP_GetDocumentList", pageNoParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, documentNameParameter, uploadByParameter, versionParameter, reviewParameter, typeParameter, folderNameParameter, useridParameter, organizationIdParameter, totalRecords);
        }
    
        public virtual ObjectResult<SP_GetTraineeScheduleListByUserId_Result> SP_GetTraineeScheduleListByUserId(Nullable<int> userId, Nullable<int> organizationId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetTraineeScheduleListByUserId_Result>("SP_GetTraineeScheduleListByUserId", userIdParameter, organizationIdParameter);
        }
    
        public virtual ObjectResult<SP_GetTrainingList_Result> SP_GetTrainingList(Nullable<int> pageNo, Nullable<int> pageSize, string sortColumn, string sortOrder, string trainingNeed, Nullable<int> trainerRequired, Nullable<int> trainingType, string assignment, Nullable<int> organizationId, ObjectParameter totalRecords)
        {
            var pageNoParameter = pageNo.HasValue ?
                new ObjectParameter("PageNo", pageNo) :
                new ObjectParameter("PageNo", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("SortColumn", sortColumn) :
                new ObjectParameter("SortColumn", typeof(string));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(string));
    
            var trainingNeedParameter = trainingNeed != null ?
                new ObjectParameter("TrainingNeed", trainingNeed) :
                new ObjectParameter("TrainingNeed", typeof(string));
    
            var trainerRequiredParameter = trainerRequired.HasValue ?
                new ObjectParameter("TrainerRequired", trainerRequired) :
                new ObjectParameter("TrainerRequired", typeof(int));
    
            var trainingTypeParameter = trainingType.HasValue ?
                new ObjectParameter("TrainingType", trainingType) :
                new ObjectParameter("TrainingType", typeof(int));
    
            var assignmentParameter = assignment != null ?
                new ObjectParameter("Assignment", assignment) :
                new ObjectParameter("Assignment", typeof(string));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetTrainingList_Result>("SP_GetTrainingList", pageNoParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, trainingNeedParameter, trainerRequiredParameter, trainingTypeParameter, assignmentParameter, organizationIdParameter, totalRecords);
        }
    
        public virtual ObjectResult<SP_GetTrainingReport_Result> SP_GetTrainingReport(Nullable<int> pageNo, Nullable<int> pageSize, string sortColumn, string sortOrder, Nullable<int> trainingId, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> organizationId, ObjectParameter totalRecords)
        {
            var pageNoParameter = pageNo.HasValue ?
                new ObjectParameter("PageNo", pageNo) :
                new ObjectParameter("PageNo", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("SortColumn", sortColumn) :
                new ObjectParameter("SortColumn", typeof(string));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(string));
    
            var trainingIdParameter = trainingId.HasValue ?
                new ObjectParameter("TrainingId", trainingId) :
                new ObjectParameter("TrainingId", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetTrainingReport_Result>("SP_GetTrainingReport", pageNoParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, trainingIdParameter, startDateParameter, endDateParameter, organizationIdParameter, totalRecords);
        }
    
        public virtual ObjectResult<SP_GetTrainingScheduleList_Result> SP_GetTrainingScheduleList(Nullable<int> trainingScheduleId, Nullable<int> organizationId)
        {
            var trainingScheduleIdParameter = trainingScheduleId.HasValue ?
                new ObjectParameter("TrainingScheduleId", trainingScheduleId) :
                new ObjectParameter("TrainingScheduleId", typeof(int));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetTrainingScheduleList_Result>("SP_GetTrainingScheduleList", trainingScheduleIdParameter, organizationIdParameter);
        }
    
        public virtual ObjectResult<SP_GetTrainingScheduleListBuYserId_Result> SP_GetTrainingScheduleListBuYserId(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetTrainingScheduleListBuYserId_Result>("SP_GetTrainingScheduleListBuYserId", userIdParameter);
        }
    
        public virtual ObjectResult<SP_GetTrainingScheduleListByUserId_Result> SP_GetTrainingScheduleListByUserId(Nullable<int> userId, Nullable<int> organizationId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetTrainingScheduleListByUserId_Result>("SP_GetTrainingScheduleListByUserId", userIdParameter, organizationIdParameter);
        }
    
        public virtual ObjectResult<SP_GetTrainingScheduleUserList_Result> SP_GetTrainingScheduleUserList(Nullable<int> trainingScheduleId, Nullable<int> organizationId)
        {
            var trainingScheduleIdParameter = trainingScheduleId.HasValue ?
                new ObjectParameter("TrainingScheduleId", trainingScheduleId) :
                new ObjectParameter("TrainingScheduleId", typeof(int));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetTrainingScheduleUserList_Result>("SP_GetTrainingScheduleUserList", trainingScheduleIdParameter, organizationIdParameter);
        }
    
        public virtual ObjectResult<SP_GetTrainingScheduleUserResultList_Result> SP_GetTrainingScheduleUserResultList(Nullable<int> trainingScheduleId, Nullable<int> organizationId)
        {
            var trainingScheduleIdParameter = trainingScheduleId.HasValue ?
                new ObjectParameter("TrainingScheduleId", trainingScheduleId) :
                new ObjectParameter("TrainingScheduleId", typeof(int));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetTrainingScheduleUserResultList_Result>("SP_GetTrainingScheduleUserResultList", trainingScheduleIdParameter, organizationIdParameter);
        }
    
        public virtual ObjectResult<SP_GetTrainingUserReport_Result> SP_GetTrainingUserReport(Nullable<int> pageNo, Nullable<int> pageSize, string sortColumn, string sortOrder, Nullable<int> userId, Nullable<int> organizationId, ObjectParameter totalRecords)
        {
            var pageNoParameter = pageNo.HasValue ?
                new ObjectParameter("PageNo", pageNo) :
                new ObjectParameter("PageNo", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("SortColumn", sortColumn) :
                new ObjectParameter("SortColumn", typeof(string));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetTrainingUserReport_Result>("SP_GetTrainingUserReport", pageNoParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, userIdParameter, organizationIdParameter, totalRecords);
        }
    
        public virtual ObjectResult<SP_GetTrainerReport_Result> SP_GetTrainerReport(Nullable<int> pageNo, Nullable<int> pageSize, string sortColumn, string sortOrder, Nullable<int> trainerId, Nullable<int> organizationId, ObjectParameter totalRecords)
        {
            var pageNoParameter = pageNo.HasValue ?
                new ObjectParameter("PageNo", pageNo) :
                new ObjectParameter("PageNo", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("SortColumn", sortColumn) :
                new ObjectParameter("SortColumn", typeof(string));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(string));
    
            var trainerIdParameter = trainerId.HasValue ?
                new ObjectParameter("TrainerId", trainerId) :
                new ObjectParameter("TrainerId", typeof(int));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetTrainerReport_Result>("SP_GetTrainerReport", pageNoParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, trainerIdParameter, organizationIdParameter, totalRecords);
        }
    
        public virtual ObjectResult<SP_GetUserWithRole_Result> SP_GetUserWithRole(Nullable<int> organizationId)
        {
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetUserWithRole_Result>("SP_GetUserWithRole", organizationIdParameter);
        }
    
        public virtual int SP_DeleteRoleResponsibilityVersionSection(Nullable<int> roleResponsibilityVersionID)
        {
            var roleResponsibilityVersionIDParameter = roleResponsibilityVersionID.HasValue ?
                new ObjectParameter("RoleResponsibilityVersionID", roleResponsibilityVersionID) :
                new ObjectParameter("RoleResponsibilityVersionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DeleteRoleResponsibilityVersionSection", roleResponsibilityVersionIDParameter);
        }
    
        public virtual int SP_DeletePerformanceReview(Nullable<int> eventId, Nullable<int> organizationId)
        {
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(int));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DeletePerformanceReview", eventIdParameter, organizationIdParameter);
        }
    
        public virtual ObjectResult<string> SP_GetObjectiveTextForRevieweeUser(Nullable<int> revieweeUserId, Nullable<int> orgId, string createdDate, Nullable<int> eventId)
        {
            var revieweeUserIdParameter = revieweeUserId.HasValue ?
                new ObjectParameter("RevieweeUserId", revieweeUserId) :
                new ObjectParameter("RevieweeUserId", typeof(int));
    
            var orgIdParameter = orgId.HasValue ?
                new ObjectParameter("OrgId", orgId) :
                new ObjectParameter("OrgId", typeof(int));
    
            var createdDateParameter = createdDate != null ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(string));
    
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_GetObjectiveTextForRevieweeUser", revieweeUserIdParameter, orgIdParameter, createdDateParameter, eventIdParameter);
        }
    
        public virtual ObjectResult<string> SP_GetActionTextForRevieweeUser(Nullable<int> revieweeUserId, Nullable<int> orgId, string createdDate, Nullable<int> eventId)
        {
            var revieweeUserIdParameter = revieweeUserId.HasValue ?
                new ObjectParameter("RevieweeUserId", revieweeUserId) :
                new ObjectParameter("RevieweeUserId", typeof(int));
    
            var orgIdParameter = orgId.HasValue ?
                new ObjectParameter("OrgId", orgId) :
                new ObjectParameter("OrgId", typeof(int));
    
            var createdDateParameter = createdDate != null ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(string));
    
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_GetActionTextForRevieweeUser", revieweeUserIdParameter, orgIdParameter, createdDateParameter, eventIdParameter);
        }
    
        public virtual int SP_SetParentEventId(Nullable<int> revieweeUserid, Nullable<int> organizationId, Nullable<int> eventId)
        {
            var revieweeUseridParameter = revieweeUserid.HasValue ?
                new ObjectParameter("RevieweeUserid", revieweeUserid) :
                new ObjectParameter("RevieweeUserid", typeof(int));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SetParentEventId", revieweeUseridParameter, organizationIdParameter, eventIdParameter);
        }
    
        public virtual ObjectResult<SP_GetRoleResponsibility_Result> SP_GetRoleResponsibility(Nullable<int> userId, Nullable<int> organizationId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetRoleResponsibility_Result>("SP_GetRoleResponsibility", userIdParameter, organizationIdParameter);
        }
    
        public virtual ObjectResult<string> ELMAH_GetErrorsXml(string application, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter totalCount)
        {
            var applicationParameter = application != null ?
                new ObjectParameter("Application", application) :
                new ObjectParameter("Application", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ELMAH_GetErrorsXml", applicationParameter, pageIndexParameter, pageSizeParameter, totalCount);
        }
    
        public virtual ObjectResult<string> ELMAH_GetErrorXml(string application, Nullable<System.Guid> errorId)
        {
            var applicationParameter = application != null ?
                new ObjectParameter("Application", application) :
                new ObjectParameter("Application", typeof(string));
    
            var errorIdParameter = errorId.HasValue ?
                new ObjectParameter("ErrorId", errorId) :
                new ObjectParameter("ErrorId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ELMAH_GetErrorXml", applicationParameter, errorIdParameter);
        }
    
        public virtual int ELMAH_LogError(Nullable<System.Guid> errorId, string application, string host, string type, string source, string message, string user, string allXml, Nullable<int> statusCode, Nullable<System.DateTime> timeUtc)
        {
            var errorIdParameter = errorId.HasValue ?
                new ObjectParameter("ErrorId", errorId) :
                new ObjectParameter("ErrorId", typeof(System.Guid));
    
            var applicationParameter = application != null ?
                new ObjectParameter("Application", application) :
                new ObjectParameter("Application", typeof(string));
    
            var hostParameter = host != null ?
                new ObjectParameter("Host", host) :
                new ObjectParameter("Host", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var sourceParameter = source != null ?
                new ObjectParameter("Source", source) :
                new ObjectParameter("Source", typeof(string));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            var allXmlParameter = allXml != null ?
                new ObjectParameter("AllXml", allXml) :
                new ObjectParameter("AllXml", typeof(string));
    
            var statusCodeParameter = statusCode.HasValue ?
                new ObjectParameter("StatusCode", statusCode) :
                new ObjectParameter("StatusCode", typeof(int));
    
            var timeUtcParameter = timeUtc.HasValue ?
                new ObjectParameter("TimeUtc", timeUtc) :
                new ObjectParameter("TimeUtc", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ELMAH_LogError", errorIdParameter, applicationParameter, hostParameter, typeParameter, sourceParameter, messageParameter, userParameter, allXmlParameter, statusCodeParameter, timeUtcParameter);
        }
    
        public virtual int SP_SetRoleResponsibilityOfPerformanceReview(Nullable<int> userId, Nullable<int> performanceReviewId, Nullable<int> organizationId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var performanceReviewIdParameter = performanceReviewId.HasValue ?
                new ObjectParameter("PerformanceReviewId", performanceReviewId) :
                new ObjectParameter("PerformanceReviewId", typeof(int));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SetRoleResponsibilityOfPerformanceReview", userIdParameter, performanceReviewIdParameter, organizationIdParameter);
        }
    
        public virtual ObjectResult<SP_GetRoleResponsibilityWithVersionId_Result> SP_GetRoleResponsibilityWithVersionId(Nullable<int> roleResponsibilityVersionId, Nullable<int> organizationId)
        {
            var roleResponsibilityVersionIdParameter = roleResponsibilityVersionId.HasValue ?
                new ObjectParameter("RoleResponsibilityVersionId", roleResponsibilityVersionId) :
                new ObjectParameter("RoleResponsibilityVersionId", typeof(int));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetRoleResponsibilityWithVersionId_Result>("SP_GetRoleResponsibilityWithVersionId", roleResponsibilityVersionIdParameter, organizationIdParameter);
        }
    
        public virtual ObjectResult<SP_GetActionDate_Result> SP_GetActionDate(Nullable<int> revieweeUserId, Nullable<int> organizationId)
        {
            var revieweeUserIdParameter = revieweeUserId.HasValue ?
                new ObjectParameter("RevieweeUserId", revieweeUserId) :
                new ObjectParameter("RevieweeUserId", typeof(int));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetActionDate_Result>("SP_GetActionDate", revieweeUserIdParameter, organizationIdParameter);
        }
    
        public virtual ObjectResult<SP_FetObjectiveDate_Result> SP_FetObjectiveDate(Nullable<int> revieweeUserId, Nullable<int> organizationId)
        {
            var revieweeUserIdParameter = revieweeUserId.HasValue ?
                new ObjectParameter("RevieweeUserId", revieweeUserId) :
                new ObjectParameter("RevieweeUserId", typeof(int));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FetObjectiveDate_Result>("SP_FetObjectiveDate", revieweeUserIdParameter, organizationIdParameter);
        }
    
        public virtual ObjectResult<SP_GetAllMenuListData_Result> SP_GetAllMenuListData(Nullable<int> pageNo, Nullable<int> pageSize, string sortColumn, string sortOrder, string titleFilter, string hrefFilter, string routerLinkFilter, string parentMenuFilter, Nullable<int> organizationId, ObjectParameter totalRecords)
        {
            var pageNoParameter = pageNo.HasValue ?
                new ObjectParameter("PageNo", pageNo) :
                new ObjectParameter("PageNo", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("SortColumn", sortColumn) :
                new ObjectParameter("SortColumn", typeof(string));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(string));
    
            var titleFilterParameter = titleFilter != null ?
                new ObjectParameter("TitleFilter", titleFilter) :
                new ObjectParameter("TitleFilter", typeof(string));
    
            var hrefFilterParameter = hrefFilter != null ?
                new ObjectParameter("HrefFilter", hrefFilter) :
                new ObjectParameter("HrefFilter", typeof(string));
    
            var routerLinkFilterParameter = routerLinkFilter != null ?
                new ObjectParameter("RouterLinkFilter", routerLinkFilter) :
                new ObjectParameter("RouterLinkFilter", typeof(string));
    
            var parentMenuFilterParameter = parentMenuFilter != null ?
                new ObjectParameter("ParentMenuFilter", parentMenuFilter) :
                new ObjectParameter("ParentMenuFilter", typeof(string));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetAllMenuListData_Result>("SP_GetAllMenuListData", pageNoParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, titleFilterParameter, hrefFilterParameter, routerLinkFilterParameter, parentMenuFilterParameter, organizationIdParameter, totalRecords);
        }
    
        public virtual int SP_DeleteRoleMenuMapping(Nullable<int> roleId)
        {
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DeleteRoleMenuMapping", roleIdParameter);
        }
    
        public virtual ObjectResult<SP_GetMenuByRoleId_Result> SP_GetMenuByRoleId(string roleId)
        {
            var roleIdParameter = roleId != null ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetMenuByRoleId_Result>("SP_GetMenuByRoleId", roleIdParameter);
        }
    
        public virtual ObjectResult<string> SP_GetDefaultUrlAssignedToRole(string url, string roleId)
        {
            var urlParameter = url != null ?
                new ObjectParameter("Url", url) :
                new ObjectParameter("Url", typeof(string));
    
            var roleIdParameter = roleId != null ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_GetDefaultUrlAssignedToRole", urlParameter, roleIdParameter);
        }
    
        public virtual ObjectResult<SP_GetOrganizationList_Result> SP_GetOrganizationList(Nullable<int> pageNo, Nullable<int> pageSize, string sortColumn, string sortOrder, string organizationrName, string organizationAddress, ObjectParameter totalRecords)
        {
            var pageNoParameter = pageNo.HasValue ?
                new ObjectParameter("PageNo", pageNo) :
                new ObjectParameter("PageNo", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("SortColumn", sortColumn) :
                new ObjectParameter("SortColumn", typeof(string));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(string));
    
            var organizationrNameParameter = organizationrName != null ?
                new ObjectParameter("OrganizationrName", organizationrName) :
                new ObjectParameter("OrganizationrName", typeof(string));
    
            var organizationAddressParameter = organizationAddress != null ?
                new ObjectParameter("OrganizationAddress", organizationAddress) :
                new ObjectParameter("OrganizationAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetOrganizationList_Result>("SP_GetOrganizationList", pageNoParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, organizationrNameParameter, organizationAddressParameter, totalRecords);
        }
    
        public virtual ObjectResult<SP_GetNotificationData_Result> SP_GetNotificationData(Nullable<int> userId, Nullable<int> organizationId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetNotificationData_Result>("SP_GetNotificationData", userIdParameter, organizationIdParameter);
        }
    
        public virtual ObjectResult<SP_GetMeasureDate_Result> SP_GetMeasureDate(Nullable<int> measureId, Nullable<int> organizationId)
        {
            var measureIdParameter = measureId.HasValue ?
                new ObjectParameter("MeasureId", measureId) :
                new ObjectParameter("MeasureId", typeof(int));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetMeasureDate_Result>("SP_GetMeasureDate", measureIdParameter, organizationIdParameter);
        }
    
        public virtual int SP_DeleteUserRoles(Nullable<int> userId, Nullable<int> organizationId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DeleteUserRoles", userIdParameter, organizationIdParameter);
        }
    
        public virtual int SP_DeletePerformanceReviewEvent(Nullable<int> userId, Nullable<int> organizationId, Nullable<int> revieweeId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            var revieweeIdParameter = revieweeId.HasValue ?
                new ObjectParameter("RevieweeId", revieweeId) :
                new ObjectParameter("RevieweeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DeletePerformanceReviewEvent", userIdParameter, organizationIdParameter, revieweeIdParameter);
        }
    
        public virtual ObjectResult<SP_GetPerformanceReviewMeetingList_Result> SP_GetPerformanceReviewMeetingList(Nullable<int> pageNo, Nullable<int> pageSize, string sortColumn, string sortOrder, string subTitle, string action, string date, string location, Nullable<int> organizationId, string revieweefilter, string reviewerfilter, ObjectParameter totalRecords)
        {
            var pageNoParameter = pageNo.HasValue ?
                new ObjectParameter("PageNo", pageNo) :
                new ObjectParameter("PageNo", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("SortColumn", sortColumn) :
                new ObjectParameter("SortColumn", typeof(string));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(string));
    
            var subTitleParameter = subTitle != null ?
                new ObjectParameter("SubTitle", subTitle) :
                new ObjectParameter("SubTitle", typeof(string));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var dateParameter = date != null ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            var revieweefilterParameter = revieweefilter != null ?
                new ObjectParameter("Revieweefilter", revieweefilter) :
                new ObjectParameter("Revieweefilter", typeof(string));
    
            var reviewerfilterParameter = reviewerfilter != null ?
                new ObjectParameter("Reviewerfilter", reviewerfilter) :
                new ObjectParameter("Reviewerfilter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetPerformanceReviewMeetingList_Result>("SP_GetPerformanceReviewMeetingList", pageNoParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, subTitleParameter, actionParameter, dateParameter, locationParameter, organizationIdParameter, revieweefilterParameter, reviewerfilterParameter, totalRecords);
        }
    
        public virtual ObjectResult<SP_GetRoleResponsibilityVersionList_Result> SP_GetRoleResponsibilityVersionList(Nullable<int> roleResponsibilityID, Nullable<int> organizationId)
        {
            var roleResponsibilityIDParameter = roleResponsibilityID.HasValue ?
                new ObjectParameter("RoleResponsibilityID", roleResponsibilityID) :
                new ObjectParameter("RoleResponsibilityID", typeof(int));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetRoleResponsibilityVersionList_Result>("SP_GetRoleResponsibilityVersionList", roleResponsibilityIDParameter, organizationIdParameter);
        }
    
        public virtual int SP_DeleteAuditSubject(Nullable<int> auditid)
        {
            var auditidParameter = auditid.HasValue ?
                new ObjectParameter("auditid", auditid) :
                new ObjectParameter("auditid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DeleteAuditSubject", auditidParameter);
        }
    
        public virtual ObjectResult<SP_GetAuditList_Result> SP_GetAuditList(Nullable<int> pageNo, Nullable<int> pageSize, string sortColumn, string sortOrder, string title, string scope, Nullable<int> organizationId, ObjectParameter totalRecords)
        {
            var pageNoParameter = pageNo.HasValue ?
                new ObjectParameter("PageNo", pageNo) :
                new ObjectParameter("PageNo", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("SortColumn", sortColumn) :
                new ObjectParameter("SortColumn", typeof(string));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var scopeParameter = scope != null ?
                new ObjectParameter("Scope", scope) :
                new ObjectParameter("Scope", typeof(string));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetAuditList_Result>("SP_GetAuditList", pageNoParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, titleParameter, scopeParameter, organizationIdParameter, totalRecords);
        }
    
        public virtual ObjectResult<SP_GetAuditSubjectList_Result> SP_GetAuditSubjectList(Nullable<int> pageNo, Nullable<int> pageSize, string sortColumn, string sortOrder, string subject, string auditee, string location, string plannedAuditDate, Nullable<int> loggedInUserId, Nullable<int> organizationId, ObjectParameter totalRecords)
        {
            var pageNoParameter = pageNo.HasValue ?
                new ObjectParameter("PageNo", pageNo) :
                new ObjectParameter("PageNo", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("SortColumn", sortColumn) :
                new ObjectParameter("SortColumn", typeof(string));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(string));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            var auditeeParameter = auditee != null ?
                new ObjectParameter("Auditee", auditee) :
                new ObjectParameter("Auditee", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var plannedAuditDateParameter = plannedAuditDate != null ?
                new ObjectParameter("PlannedAuditDate", plannedAuditDate) :
                new ObjectParameter("PlannedAuditDate", typeof(string));
    
            var loggedInUserIdParameter = loggedInUserId.HasValue ?
                new ObjectParameter("LoggedInUserId", loggedInUserId) :
                new ObjectParameter("LoggedInUserId", typeof(int));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetAuditSubjectList_Result>("SP_GetAuditSubjectList", pageNoParameter, pageSizeParameter, sortColumnParameter, sortOrderParameter, subjectParameter, auditeeParameter, locationParameter, plannedAuditDateParameter, loggedInUserIdParameter, organizationIdParameter, totalRecords);
        }
    }
}
