{"version":3,"sources":["C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/rolesresponsibility/rolesresponsibility.component.html","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/rolesresponsibility/rolesresponsibility.component.ts","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/rolesresponsibility/rolesresponsibility.model.ts","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/rolesresponsibility/rolesresponsibility.module.ts","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/rolesresponsibility/rolesresponsibility.service.ts"],"names":[],"mappings":"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","file":"rolesresponsibility.module.chunk.js","sourcesContent":["module.exports = \"<form [formGroup]=\\\"rolesResponsibilityForm\\\" novalidate (ngSubmit)=\\\"SaveRoleResponsibilityFormData(rolesResponsibilityForm.value)\\\">\\r\\n    <div style=\\\"margin-top:10px;\\\">\\r\\n        <div style=\\\"margin:20px;\\\">\\r\\n            <div class=\\\"form-group\\\" style=\\\"text-align:right;\\\">\\r\\n                <button *ngIf=\\\"RoleResponsibilityVersionID>0 && IsLatestVersionApproved==false\\\" type=\\\"button\\\" data-toggle=\\\"modal\\\" class=\\\"btn btn-primary\\\" (click)=\\\"approveVersion();\\\" [disabled]=\\\"!rolesResponsibilityForm.valid\\\">Approve</button>\\r\\n                <button *ngIf=\\\"IsLatestVersionApproved\\\" type=\\\"button\\\" data-toggle=\\\"modal\\\" class=\\\"btn btn-primary\\\" (click)=\\\"showNewVersionForm();\\\" [disabled]=\\\"!rolesResponsibilityForm.valid\\\">New Version</button>\\r\\n                <button type=\\\"button\\\" data-toggle=\\\"modal\\\" class=\\\"btn btn-primary\\\" (click)=\\\"SaveRoleResponsibilityFormData(rolesResponsibilityForm.value)\\\" [disabled]=\\\"!rolesResponsibilityForm.valid\\\">Save</button>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label>Role</label>\\r\\n                <select formControlName=\\\"RoleID\\\" (change)=\\\"GetRoleResponsibility($event.target.value)\\\">\\r\\n                    <option>--Select--</option>\\r\\n                    <option *ngFor=\\\"let role of roles \\\"\\r\\n                            value={{role.id}}>\\r\\n                        {{role.name}}\\r\\n                    </option>\\r\\n                </select>\\r\\n                <!--<small [hidden]=\\\"myFormDocument.controls.DocumentName.valid\\\" class=\\\"text-danger\\\">\\r\\n                    Document Name is required\\r\\n                </small>-->\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label>Type</label>\\r\\n                <label class=\\\"custom-control custom-radio\\\">\\r\\n                    <input type=\\\"radio\\\" name=\\\"Type\\\"  value=\\\"1\\\" formControlName=\\\"Type\\\" [checked]=\\\"Type ===1\\\" class=\\\"custom-control-input\\\" >\\r\\n                    <span class=\\\"custom-control-indicator\\\"></span>\\r\\n                    <span class=\\\"custom-control-description\\\">Template</span>\\r\\n                </label>\\r\\n                <label class=\\\"custom-control custom-radio\\\">\\r\\n                    <input type=\\\"radio\\\" name=\\\"Type\\\" value=\\\"2\\\" formControlName=\\\"Type\\\" [checked]=\\\"Type ===2\\\" class=\\\"custom-control-input\\\">\\r\\n                    <span class=\\\"custom-control-indicator\\\"></span>\\r\\n                    <span class=\\\"custom-control-description\\\">Document</span>\\r\\n                </label>\\r\\n                <!--<small [hidden]=\\\"myFormDocument.controls.DocumentName.valid\\\" class=\\\"text-danger\\\">\\r\\n            Document Name is required\\r\\n        </small>-->\\r\\n            </div>\\r\\n                <div *ngIf=\\\"IsNewVersion==true || IsLatestVersionApproved==false\\\">\\r\\n                    <div class=\\\"form-group\\\" *ngIf=\\\"RoleResponsibilityVersionID>0\\\">\\r\\n                        <label>Version</label>\\r\\n                        <input type=\\\"text\\\" maxlength=\\\"9\\\" formControlName=\\\"LatestVersion\\\" class=\\\"form-control\\\" />\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\" *ngIf=\\\"RoleResponsibilityVersionID>0\\\">\\r\\n                        <label>Changes</label>\\r\\n                        <input type=\\\"text\\\" maxlength=\\\"8000\\\" formControlName=\\\"LatestChanges\\\" class=\\\"form-control\\\" />\\r\\n                    </div>\\r\\n                </div>\\r\\n            <div #dynamicContainer>\\r\\n                <div id=\\\"sectiontemplate\\\" [hidden]=\\\"rolesResponsibilityForm.controls.Type.value!=1\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Job Section</label>\\r\\n                        <select formControlName=\\\"SectionID\\\">\\r\\n                            <option value=\\\"0\\\">--Select--</option>\\r\\n                            <option *ngFor=\\\"let mrs of masterRoleSectionList \\\"\\r\\n                                    value={{mrs.MasterRoleSectionID}}>\\r\\n                                {{mrs.SectionName}}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                        <button type=\\\"button\\\" data-toggle=\\\"modal\\\" pButton icon=\\\"fa-plus\\\" data-target=\\\"#lg-modal\\\" (click)=\\\"clearMasterJobSectionPopupForm();\\\" label=\\\"Add New Section\\\"></button>\\r\\n                        <button type=\\\"button\\\" data-toggle=\\\"modal\\\" pButton icon=\\\"fa-plus\\\" (click)=\\\"addSectionDetails()\\\" label=\\\"Add\\\"></button>\\r\\n                        <!--<small [hidden]=\\\"myFormDocument.controls.DocumentName.valid\\\" class=\\\"text-danger\\\">\\r\\n                    Document Name is required\\r\\n                </small>-->\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n\\r\\n                    </div>\\r\\n                    <div formArrayName=\\\"SectionDetailForm\\\" *ngFor=\\\"let address of SectionDetailForm.controls; let i=index\\\">\\r\\n                        <div>\\r\\n                            <span class=\\\"fa fa-remove pull-right\\\" (click)=\\\"RemoveSectionDetails(i,address.controls.SectionID.value)\\\">\\r\\n                            </span>\\r\\n                        </div>\\r\\n                        <div [formGroupName]=\\\"i\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <input type=\\\"hidden\\\" formControlName=\\\"SectionName\\\" />\\r\\n                                <input type=\\\"hidden\\\" formControlName=\\\"SectionID\\\" />\\r\\n                                <label>{{address.controls.SectionName.value}}:</label>\\r\\n                                <p-editor formControlName=\\\"SectionDetails\\\" [style]=\\\"{'height':'180px'}\\\">\\r\\n\\r\\n                                </p-editor>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div id=\\\"sectionrolerespnsibility\\\" [hidden]=\\\"rolesResponsibilityForm.controls.Type.value!=2\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <div class=\\\"input-group file-upload\\\">\\r\\n                            <input type=\\\"file\\\" (change)=\\\"fileChange(input)\\\" #input class=\\\"file-upload-btn\\\" />\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Choose a file...\\\" value=\\\"{{fileName}}\\\">\\r\\n                            <i class=\\\"fa fa-times delete-file\\\" (click)=\\\"removeFile()\\\" *ngIf=\\\"fileToUpload\\\"></i>\\r\\n                            <span class=\\\"input-group-btn\\\">\\r\\n                                <button class=\\\"btn btn-primary\\\" type=\\\"button\\\"><i class=\\\"fa fa-upload\\\"></i></button>\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <p-dataTable [editable]=\\\"true\\\" [value]=\\\"roleresponsibilityVersionListData\\\" [rows]=\\\"10\\\" [paginator]=\\\"true\\\" [rowsPerPageOptions]=\\\"[5,10,20,50]\\\"\\r\\n                                 resizableColumns=\\\"true\\\" [responsive]=\\\"true\\\">\\r\\n\\r\\n\\r\\n                        <p-column [style]=\\\"{'width':'10%'}\\\" field=\\\"Version\\\" header=\\\"Version\\\"></p-column>\\r\\n                        <p-column [style]=\\\"{'width':'12.5%'}\\\" field=\\\"ApprovedByName\\\" header=\\\"Approved By\\\"></p-column>\\r\\n                        <p-column [style]=\\\"{'width':'12.5%'}\\\" field=\\\"ApprovedDate\\\" header=\\\"Approved Date\\\"></p-column>\\r\\n                        <p-column [style]=\\\"{'width':'30%'}\\\" field=\\\"Changes\\\" header=\\\"Changes\\\"></p-column>\\r\\n                        <p-column [style]=\\\"{'width':'10%'}\\\" field=\\\"ModifiedByName\\\" header=\\\"Modified By\\\"></p-column>\\r\\n                        <p-column [style]=\\\"{'width':'10%'}\\\" field=\\\"ModifiedDate\\\" header=\\\"Modified Date\\\"></p-column>\\r\\n                        <p-column [style]=\\\"{'width':'15%'}\\\" styleClass=\\\"col-button\\\">\\r\\n                            <ng-template let-col let-car=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                                <button type=\\\"button\\\" title=\\\"View\\\" class=\\\"btn btn-primary\\\" *ngIf=\\\"rolesResponsibilityForm.controls.Type.value==1\\\" (click)=\\\"ViewRoleResponsibilityVersion(car)\\\">View</button>\\r\\n                                <div class=\\\"form-group\\\" *ngIf=\\\"rolesResponsibilityForm.controls.Type.value==2\\\">\\r\\n                                    <a class=\\\"btn btn-primary\\\" (click)=\\\"downloadMaterial(car.RoleResponsibilityVersionID, car.DocumentName)\\\" *ngIf=\\\"car.DocumentPath !=null\\\" style=\\\"text-decoration:underline;\\\" href=\\\"javascript:void(0)\\\">\\r\\n                                        View\\r\\n                                    </a>\\r\\n                                </div>\\r\\n                            </ng-template>\\r\\n                        </p-column>\\r\\n                    </p-dataTable>\\r\\n                </div>\\r\\n           </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n</form>\\r\\n\\r\\n\\r\\n<div class=\\\"modal fade\\\" id=\\\"lg-modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"modal-large-label\\\" style=\\\"display: none;\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header state modal-primary\\\">\\r\\n                <h4 class=\\\"modal-title\\\" id=\\\"modal-large-label\\\">Add </h4>\\r\\n                <button #closeDialog type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">×</span></button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\" style=\\\"overflow:scroll\\\">\\r\\n                <form [formGroup]=\\\"myFormPopup\\\" novalidate (ngSubmit)=\\\"SaveMasterJobSectionFormData(myFormPopup.value)\\\">\\r\\n                    <div style=\\\"margin-top:10px;\\\">\\r\\n                        <div style=\\\"margin:20px;\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label>Section</label>\\r\\n                                <input type=\\\"text\\\" formControlName=\\\"SectionName\\\" class=\\\"form-control validation-field\\\" />\\r\\n                                <small *ngIf=\\\"!myFormPopup.controls.SectionName.valid\\\" class=\\\"text-danger\\\">\\r\\n                                    Section Name is required and must be unique\\r\\n                                </small>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"modal-footer\\\">\\r\\n                                <button class=\\\"btn btn-primary\\\"\\r\\n                                        type=\\\"button\\\"\\r\\n                                        (click)=\\\"SaveMasterJobSectionFormData(myFormPopup.value)\\\"\\r\\n                                        [disabled]=\\\"!myFormPopup.valid\\\">\\r\\n                                    Save\\r\\n                                </button>\\r\\n\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/rolesresponsibility/rolesresponsibility.component.html\n// module id = ../../../../../src/app/pages/rolesresponsibility/rolesresponsibility.component.html\n// module chunks = rolesresponsibility.module","import { Component, ViewEncapsulation, ViewChild, TemplateRef, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Validators, FormGroup, FormArray, FormBuilder, AbstractControl } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport { LazyLoadEvent, FilterMetadata } from 'primeng/components/common/api';\r\nimport { IMultiSelectOption, IMultiSelectSettings, IMultiSelectTexts } from 'angular-2-dropdown-multiselect';\r\nimport { UserService } from \"../user/user.service\";\r\nimport { RolesResponsibilityService } from '../rolesresponsibility/rolesresponsibility.service';\nimport { RolesResponsibilityViewModel, RoleResponsibilityVersionSection, MasterRoleSectionViewModel, RoleViewModel } from '../rolesresponsibility/rolesresponsibility.model';\nimport * as FileSaver from 'file-saver';\n\n@Component({\n    selector: 'app-rolesreponsibility',\n    templateUrl: './rolesresponsibility.component.html',\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['../../../../node_modules/primeng/resources/primeng.min.css',\n        \"../../../../node_modules/primeng/resources/themes/omega/theme.css\",\n        '../form-elements/controls/file-uploader/file-uploader.component.scss',],\n    providers: [UserService, RolesResponsibilityService],\n})\n\nexport class RolesResponsibilityComponent implements OnInit {\n    rolesResponsibilityForm: FormGroup; // Model for form\n    myFormPopup: FormGroup;\n    masterRoleSectionListBackup: MasterRoleSectionViewModel[];\n    masterRoleSectionList: MasterRoleSectionViewModel[];\n    roles: RoleViewModel[];\n    roleresponsibilityVersionListData: RoleResponsibilityVersionSection[] = []; // for role responsibility version child grid\n    RoleResponsibilityID: number;\n    RoleResponsibilityVersionID: number;\n    IsLatestVersionApproved: boolean = false;\n    IsNewVersion: boolean=false;\n    Type: number;\n    @ViewChild('closeDialog') closeDialog;\n    @ViewChild('dynamicContainer') dynamicContainer;\n    get SectionDetailForm(): FormArray {\n        return <FormArray>this.rolesResponsibilityForm.get('SectionDetailForm');\n    }\n    constructor(private fb: FormBuilder, private _RolesResponsibilityService: RolesResponsibilityService, private _UserService: UserService, private router: Router, private location: Location, private route: ActivatedRoute) {\n    }\n    ngOnInit() {\n        let roleresposibilityModel = new RolesResponsibilityViewModel();\n        this.addhtmltoform(roleresposibilityModel);\n        this.addMasterPopupHtmlToForm();\n        this._UserService.getRoleMultipleList().subscribe((res) => { this.roles = res; });\n        this.getAllMasterRoleSection();\n        this.RemoveSectionDetails(0);\n    }\n    addhtmltoform(model: RolesResponsibilityViewModel) {\n        this.rolesResponsibilityForm = this.fb.group(\n            {\r\n                Type: [model.Type, Validators.required],\r\n                RoleID: [model.RoleID, Validators.required],\r\n                RoleResponsibilityID: [model.RoleResponsibilityID],\r\n                RoleResponsibilityVersionID: [model.RoleResponsibilityVersionID],\r\n                SectionID: [model.SectionID],\r\n                LatestVersion: [model.LatestVersion],\r\n                LatestChanges: [model.LatestChanges],\r\n                SectionDetailForm: this.fb.array([this.buildOptions(new RoleResponsibilityVersionSection())])\r\n            });\n    }\n    sethtmltoform(model: RolesResponsibilityViewModel) {\n        this.IsNewVersion = false;\n        if (model.Type != 0) {\n            this.Type = model.Type;\n            this.rolesResponsibilityForm.controls['Type'].setValue(model.Type);\n        }\n        if (model.RoleResponsibilityID != 0) {\n            this.rolesResponsibilityForm.controls['RoleResponsibilityID'].setValue(model.RoleResponsibilityID);\n        }\n        if (model.SectionID != 0) {\n            this.rolesResponsibilityForm.controls['SectionID'].setValue(model.SectionID);\n        }\n        this.rolesResponsibilityForm.controls['LatestVersion'].setValue(model.LatestVersion);\n        this.rolesResponsibilityForm.controls['LatestChanges'].setValue(model.LatestChanges);\n    }\n    addMasterPopupHtmlToForm(model: MasterRoleSectionViewModel = new MasterRoleSectionViewModel()) {\n        this.myFormPopup = this.fb.group(\n            {\r\n                SectionName: [model.SectionName, [Validators.required, this.validateDistinctMasterJobSection.bind(this)]],\r\n            });\n    }\n    addSectionDetails(): void {\r\n        let roleresponsibilitymodel = new RoleResponsibilityVersionSection();\r\n        roleresponsibilitymodel.SectionID = this.rolesResponsibilityForm.controls['SectionID'].value;\r\n\r\n        if (roleresponsibilitymodel.SectionID != undefined && roleresponsibilitymodel.SectionID != null && roleresponsibilitymodel.SectionID != 0) {\r\n\r\n            let roleSection = this.masterRoleSectionList.filter(x => x.MasterRoleSectionID == roleresponsibilitymodel.SectionID)[0];\r\n\r\n            if (roleSection != undefined && roleSection != null) {\r\n                roleresponsibilitymodel.SectionName = roleSection.SectionName;\r\n                this.SectionDetailForm.push(this.buildOptions(roleresponsibilitymodel));\r\n                this.masterRoleSectionList = this.masterRoleSectionList.filter(x => x.MasterRoleSectionID != roleresponsibilitymodel.SectionID);\r\n            }\r\n        }\r\n    }\n    RemoveSectionDetails(i: number, SectionID: number=0) {\r\n        const control = <FormArray>this.rolesResponsibilityForm.controls['SectionDetailForm'];\n        if (control.length > 0) {\r\n            control.removeAt(i);\r\n        }\r\n\r\n        if (SectionID != 0) {\r\n            this.masterRoleSectionList.push(this.masterRoleSectionListBackup.filter(x => x.MasterRoleSectionID == SectionID)[0]);\r\n        }\r\n    }\n    \n    buildOptions(model: RoleResponsibilityVersionSection = new RoleResponsibilityVersionSection()): FormGroup {\r\n        return this.fb.group({\r\n            RoleResponsibilityVersionSectionID: [model.RoleResponsibilityVersionSectionID],\r\n            SectionID: [model.SectionID],\r\n            SectionName: [model.SectionName],\r\n            SectionDetails: [model.SectionDetails],\r\n        });\r\n    }\n    SaveRoleResponsibilityFormData(data: RolesResponsibilityViewModel) {\n        data.RoleResponsibilityVersionSectionViewModel = [];\n        if (data.Type == 1) {\n            if ((data as any).SectionDetailForm != undefined && (data as any).SectionDetailForm != null) {\n                for (let aa of (data as any).SectionDetailForm) {\n                    let roleResponsibiltyVerSec: RoleResponsibilityVersionSection = new RoleResponsibilityVersionSection();\n                    roleResponsibiltyVerSec.SectionID = aa.SectionID;\n                    roleResponsibiltyVerSec.SectionDetails = aa.SectionDetails;\n                    data.RoleResponsibilityVersionSectionViewModel.push(roleResponsibiltyVerSec);\n                }\n            }\n        } else if (data.Type == 2) {\n            let roleResponsibiltyVerSec: RoleResponsibilityVersionSection = new RoleResponsibilityVersionSection();\n            roleResponsibiltyVerSec.DocumentName = this.fileName;\n            data.RoleResponsibilityVersionSectionViewModel.push(roleResponsibiltyVerSec);\n        }\n\n        data.RoleResponsibilityVersionID = this.RoleResponsibilityVersionID;\n        this._RolesResponsibilityService.addUpdateRoleResponsibility(data).subscribe((res: RolesResponsibilityViewModel) => {\n            this.RoleResponsibilityVersionID = res.RoleResponsibilityVersionID;\n            if (data.Type == 2) {\n                this.saveMaterial(res.RoleID);\n            } else if (data.Type == 1) {\n                this.GetRoleResponsibility(res.RoleID);\n            }\n            });\n       \n    }\n\n    getAllMasterRoleSection(sectionid : number=0) {\n        this._RolesResponsibilityService.getAllMasterRoleSection().subscribe((res: MasterRoleSectionViewModel[]) => {\n            this.masterRoleSectionList = res;\n            this.masterRoleSectionListBackup = res;\n            if (sectionid != 0) {\n                this.rolesResponsibilityForm.controls['SectionID'].setValue(sectionid);\n            }\n        });\n    }\n    GetRoleResponsibility(roleid: number) {\n        this.Type = 0;\n        this.masterRoleSectionList = this.masterRoleSectionListBackup;\n        this._RolesResponsibilityService.getRoleResponsibility(roleid).subscribe((res: RolesResponsibilityViewModel) => {\n            for (let i = 0; i <= this.SectionDetailForm.controls.length; i++) {\r\n                this.RemoveSectionDetails(0);\r\n            }\n            if (res != null) {\n                this.Type = res.Type;\n                this.RoleResponsibilityID = res.RoleResponsibilityID;\n                this.RoleResponsibilityVersionID = res.RoleResponsibilityVersionID;\n                this.sethtmltoform(res);\n                //this.RemoveSectionDetails(0);\n                if (res.RoleResponsibilityVersionSectionViewModel != null && res.RoleResponsibilityVersionSectionViewModel.length > 0) {\n                    for (let aa of res.RoleResponsibilityVersionSectionViewModel) {\n                        this.masterRoleSectionList = this.masterRoleSectionList.filter(x => x.MasterRoleSectionID != aa.SectionID);;\n                        this.SectionDetailForm.push(this.buildOptions(aa));\n                    }\n                }\n        \n            }\n            else {\n                \r\n                let roleresposibilityModel = new RolesResponsibilityViewModel();\n                roleresposibilityModel.RoleID = roleid;\n                this.sethtmltoform(roleresposibilityModel);\n                this.RoleResponsibilityID = 0;\n                this.RoleResponsibilityVersionID=0\n                this.RemoveSectionDetails(0);\r\n            }\n            this.getRoleResponsibilityVersionList();\n        });\n    }\n    getRoleResponsibilityVersionList() {\n        this.roleresponsibilityVersionListData = [];\n        this._RolesResponsibilityService.getRoleResponsibilityVersionList(this.RoleResponsibilityID).subscribe((res: RoleResponsibilityVersionSection[]) => {\n            this.roleresponsibilityVersionListData = res;\n            if (res.length > 0 && (res[0].ApprovedDate != null)) {\n                this.IsLatestVersionApproved = true;\n                this.dynamicContainer.nativeElement.style.pointerEvents = 'none';\n            } else {\n                this.IsLatestVersionApproved = false;\n                this.dynamicContainer.nativeElement.style.pointerEvents = '';\n            }\n        });\n    }\n    showNewVersionForm() {\n        this.IsNewVersion = true;\n        this.dynamicContainer.nativeElement.style.pointerEvents = '';\n        this.rolesResponsibilityForm.controls['LatestChanges'].setValue('');\n        //this.RoleResponsibilityVersionID = 0;\n    }\n    fileName: string;\n    fileToUpload: File;\n    fileChange(input) {\n        const reader = new FileReader();\n        if (input.files.length) {\n            this.fileName = input.files[0].name;\n            this.fileToUpload = input.files[0];\n        }\n    }\n\n    removeFile(): void {\n        this.fileName = '';\n        this.fileToUpload = null;\n    }\n    saveMaterial(roleid : number=0) {\n        if (this.fileToUpload != null && this.fileToUpload != undefined) {\n            let file = this.fileToUpload;\n            let _formData = new FormData();\r\n            _formData.append(\"FileName\", file.name);\r\n            _formData.append(\"MyFile\", file);\r\n            _formData.append(\"RoleResponsibilityVersionID\", this.RoleResponsibilityVersionID.toString());\r\n            let body = _formData;\n            this._RolesResponsibilityService.uploadMaterial(body).subscribe(res => {\n                this.removeFile();\n\n                if (roleid != 0) {\n                    this.GetRoleResponsibility(roleid);\n                }\n            });\n\n        }\n    }\n    ViewRoleResponsibilityVersion(event: RolesResponsibilityViewModel) {\n        this._RolesResponsibilityService.getRoleResponsibilityVerion(event.RoleResponsibilityVersionID).subscribe((res: RolesResponsibilityViewModel) => {\n            if (res.LatestRoleResponsibilityVersionID != res.RoleResponsibilityVersionID) {\r\n                this.dynamicContainer.nativeElement.style.pointerEvents = 'none';\r\n            } else {\r\n                this.dynamicContainer.nativeElement.style.pointerEvents = '';\r\n            }\r\n            if (res != null) {\r\n                for (let i = 0; i < this.SectionDetailForm.controls.length; i++) {\r\n                    this.RemoveSectionDetails(0);\r\n                }\n                this.sethtmltoform(res);\n                this.RemoveSectionDetails(0);\n                if (res.RoleResponsibilityVersionSectionViewModel != null && res.RoleResponsibilityVersionSectionViewModel.length > 0) {\n                    for (let aa of res.RoleResponsibilityVersionSectionViewModel) {\n                        this.SectionDetailForm.push(this.buildOptions(aa));\n                    }\n                }\n            }\n        });\n    }\n    downloadMaterial(id: number, fileName: string) {\r\n        this._RolesResponsibilityService.downloadMaterial(id).subscribe(res => {\r\n            FileSaver.saveAs(res, fileName);\r\n        });\n    }\n    approveVersion() {\n        this._RolesResponsibilityService.approveVersion(this.RoleResponsibilityVersionID).subscribe((res: number) => {\n            this.getRoleResponsibilityVersionList();\n         });\n    }\n\n    validateDistinctMasterJobSection(control: AbstractControl): { [key: string]: any } {\n        let result: boolean = null;\r\n        if (control.value == null || control.value == \"\")\r\n            result = true;\r\n        else if (control.value != \"\") {\r\n            this._RolesResponsibilityService.validateMasterJobSection(control.value).subscribe((res: boolean) => {\r\n                if (res == false) {\r\n                    result = true;\r\n                    this.myFormPopup.controls[\"SectionName\"].setErrors({ remote: \"SectionName already exists.\" });\r\n                }\r\n            });\r\n        }\r\n        else\r\n            result = null;\r\n        return result ? { 'SectionName': { value: control.value } } : null;\r\n    }\n    clearMasterJobSectionPopupForm() {\n        let Model = new MasterRoleSectionViewModel();\r\n        this.addMasterPopupHtmlToForm(Model);\n    }\n    SaveMasterJobSectionFormData(data: MasterRoleSectionViewModel) {\n        this._RolesResponsibilityService.SaveMasterJobSectionFormData(data).subscribe(res => {\n            this.getAllMasterRoleSection(res);;\n             this.closeDialog.nativeElement.click();\n        });\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/rolesresponsibility/rolesresponsibility.component.ts","// Detail page models\r\nexport class RolesResponsibilityViewModel {\r\n    public RoleResponsibilityID: number;\r\n    public RoleResponsibilityVersionID: number;\r\n    public RoleID: number;\r\n    public Type: number;\r\n    public SectionID: number;\r\n    public LatestRoleResponsibilityVersionID: number;\r\n    public LatestVersion: string;\r\n    public LatestChanges: string;\r\n    public RoleResponsibilityVersionSectionViewModel: RoleResponsibilityVersionSection[];\r\n}\r\n\r\nexport class RoleResponsibilityVersionSection {\r\n    //RoleResponsibilityVersion\r\n    public RoleResponsibilityVersionID: number;\r\n    public Version: string;\r\n    public DocumentName: string;\r\n    public DocumentPath: string;\r\n    public Changes: string;\r\n    public ApprovedBy: number;\r\n    public ApprovedByName: number;\r\n    public ApprovedDate: string;\r\n    public CreatedBy: number;\r\n    public CreatedDate: string;\r\n    public ModifiedByName: string;\r\n    public ModifiedDate: string;\r\n    //RoleResponsibilityVersionSection\r\n    public RoleResponsibilityVersionSectionID: number;\r\n    public SectionID: number;\r\n    public SectionName: string;\r\n    public SectionDetails: string;\r\n}\r\n\r\nexport class RoleViewModel {\r\n    public id: number;\r\n    public name: string;\r\n}\r\nexport class MasterRoleSectionViewModel {\r\n    public MasterRoleSectionID: number;\r\n    public SectionName: string;\r\n    public Active: boolean;\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/rolesresponsibility/rolesresponsibility.model.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DirectivesModule } from '../../theme/directives/directives.module';\nimport { RolesResponsibilityComponent } from './rolesresponsibility.component';\nimport { MultiselectDropdownModule } from 'angular-2-dropdown-multiselect';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { EditorModule, ChartModule, CalendarModule, SharedModule, DataTableModule, MultiSelectModule, SelectItem, CheckboxModule } from 'primeng/primeng';\n\nexport const routes = [\n    { path: '', component: RolesResponsibilityComponent, pathMatch: 'full' },\n]\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        DirectivesModule,\n        MultiselectDropdownModule,\n        NgbModule.forRoot(),\n        CalendarModule,\r\n        SharedModule,\n        DataTableModule,\n        MultiSelectModule,\n        CheckboxModule,\n        EditorModule,\n        RouterModule.forChild(routes)\n    ],\n    declarations: [\n        RolesResponsibilityComponent\n    ]\n})\nexport class RolesResponsibilityModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/rolesresponsibility/rolesresponsibility.module.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { Observable } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport 'rxjs/add/operator/map';\r\n\r\nimport { RolesResponsibilityViewModel, RoleResponsibilityVersionSection, MasterRoleSectionViewModel, RoleViewModel } from '../rolesresponsibility/rolesresponsibility.model';\r\nimport { environment } from '../../../environments/environment';\r\nimport { ResponseContentType } from '@angular/http';\r\nlet apiURL = environment.apiEndpoint;\r\n@Injectable()\r\nexport class RolesResponsibilityService {\r\n\r\n    constructor(private http: Http) {\r\n    }\r\n\r\n    getAllMasterRoleSection(): Observable<any> {\r\n        return this.http.get(apiURL + '/roleresponsibility/GetAllMasterRoleSection').map(response => response.json());\r\n    }\r\n    getRoleResponsibility(roleid:number): Observable<any> {\r\n        return this.http.get(apiURL + '/roleresponsibility/GetRoleResponsibility?roleid=' + roleid).map(response => response.json());\r\n    } \r\n    getRoleResponsibilityVerion(id: number): Observable<any> {\r\n        return this.http.get(apiURL + '/roleresponsibility/GetRoleResponsibilityVerion?RoleResponsibilityVersionID=' + id).map(response => response.json());\r\n    }\r\n    addUpdateRoleResponsibility(model: RolesResponsibilityViewModel): Observable<any> {\r\n\r\n        return this.http.post(apiURL + '/roleresponsibility/AddUpdateRoleResponsibility', model).map(response => response.json());\r\n    }\r\n    getRoleResponsibilityVersionList(roleresponsibilityid: number): Observable<any> {\r\n        return this.http.get(apiURL + '/roleresponsibility/GetRoleResponsibilityVersionList?roleresponsibilityid=' + roleresponsibilityid).map(response => response.json());\r\n    }\r\n    approveVersion(id: number): Observable<any> {\r\n        return this.http.get(apiURL + '/roleresponsibility/ApproveVersion?id=' + id).map(response => response.json());\r\n    }\r\n    uploadMaterial(body: FormData) {\r\n        return this.http.post(apiURL + '/roleresponsibility/SaveMaterial', body).map(res => { });\r\n    }\r\n    downloadMaterial(id: number): Observable<Blob> {\r\n        let options = new RequestOptions({ responseType: ResponseContentType.Blob });\r\n        return this.http.get(apiURL + '/roleresponsibility/DownLoadMaterialBlob?id=' + id, options)\r\n            .map(response => <Blob>response.blob());\r\n    }\r\n    SaveMasterJobSectionFormData(model: MasterRoleSectionViewModel): Observable<any> {\r\n        return this.http.post(apiURL + '/roleresponsibility/SaveMasterJobSectionFormData', model).map(response => response.json());\r\n    }\r\n    validateMasterJobSection(value: string): Observable<any> {\r\n        return this.http.get(apiURL + '/roleresponsibility/ValidateMasterJobSection?value=' + value).map(response => response.json());\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/rolesresponsibility/rolesresponsibility.service.ts"],"sourceRoot":"webpack:///"}