{"version":3,"sources":["C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/training/trainee.component.html","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/training/trainee.component.ts","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/training/trainer.component.html","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/training/trainer.component.ts","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/training/trainerreport.component.html","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/training/trainerreport.component.ts","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/training/training.component.css","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/training/training.component.html","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/training/training.component.ts","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/training/training.model.ts","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/training/training.module.ts","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/training/training.service.ts","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/training/traininglist.component.html","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/training/traininglist.component.ts","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/training/trainingreport.component.html","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/training/trainingreport.component.ts","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/training/userreport.component.html","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/training/userreport.component.ts"],"names":[],"mappings":"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","file":"training.module.chunk.js","sourcesContent":["module.exports = \"<div class=\\\"modal-body\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <div *ngIf=\\\"!ShowAssignment ; else hideAssignment\\\">\\r\\n            <p-dataTable [value]=\\\"traineeListData\\\" [rows]=\\\"10\\\" [paginator]=\\\"true\\\" [rowsPerPageOptions]=\\\"[5,10,20,50]\\\"\\r\\n                         #dt resizableColumns=\\\"true\\\" reorderableColumns=\\\"true\\\" [responsive]=\\\"true\\\" [totalRecords]=\\\"traineeListData.length\\\">\\r\\n\\r\\n                <p-column field=\\\"TrainingNeed\\\" header=\\\"Training\\\" [filter]=\\\"true\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n                <p-column field=\\\"StartDate\\\" header=\\\"Start Date\\\" [filter]=\\\"true\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n                <p-column field=\\\"EndDate\\\" header=\\\"End Date\\\" [filter]=\\\"true\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n                <p-column field=\\\"Trainer\\\" header=\\\"Trainer\\\" [filter]=\\\"true\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n                <p-column field=\\\"Score\\\" header=\\\"Score\\\" [filter]=\\\"true\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n                <p-column field=\\\"AssignmentId\\\">\\r\\n                    <ng-template let-assignment=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                        <!--<div *ngIf=\\\"assignment.AssignmentId == null; else assignmentLink\\\">\\r\\n\\r\\n                        </div>\\r\\n                        <ng-template #assignmentLink><button pButton type=\\\"button\\\" (click)=\\\"onShowAssignment(assignment.TrainingScheduleId,assignment.AssignmentId)\\\" label=\\\"assignment\\\"></button></ng-template>-->\\r\\n                        <!--<div *ngIf=\\\"!assignmentId ; else assignmentLink\\\"></div>\\r\\n                        <ng-template #assignmentLink><a (click)=\\\"onShowAssignment()\\\">assignment</a></ng-template>-->\\r\\n                        <ng-template [ngIf]=\\\"assignment.AssignmentId != null && assignment.Retest == true\\\"><button pButton type=\\\"button\\\" (click)=\\\"onShowAssignment(assignment.TrainingScheduleId,assignment.AssignmentId, true, assignment.IsAssignmentRequired, assignment.Score)\\\" label=\\\"reassessment\\\"></button></ng-template>\\r\\n                        <ng-template [ngIf]=\\\"assignment.AssignmentId != null && (assignment.Retest == false || assignment.Retest == null)\\\"><button pButton type=\\\"button\\\" (click)=\\\"onShowAssignment(assignment.TrainingScheduleId,assignment.AssignmentId, false, assignment.IsAssignmentRequired, assignment.Score)\\\" label=\\\"assessment\\\"></button></ng-template>\\r\\n                    </ng-template>\\r\\n                </p-column>\\r\\n            </p-dataTable>\\r\\n        </div>\\r\\n        <ng-template #hideAssignment>\\r\\n            <div *ngIf=\\\"assignmentData\\\" class=\\\"container\\\">\\r\\n                <div *ngFor=\\\"let questionary of assignmentData.TrainingAssignmentAnswers;let i=index;\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label><b>Q{{i+1}}. {{questionary.QuestionText}} </b></label>\\r\\n                        <div *ngIf=\\\"questionary.QuestionType === 2\\\">\\r\\n                            <div class=\\\"trainee-option\\\">\\r\\n                                <div *ngFor=\\\"let multiple of questionary.AssignmentQuestionOptions; let i = index\\\" class=\\\"ui-g-12\\\">\\r\\n                                    <p-radioButton [disabled]=\\\"score != null? true: false\\\" [value]=\\\"multiple.QuestionOptionID\\\" [label]=\\\"multiple.OptionText\\\" [(ngModel)]=\\\"questionary.QuestionOptionId\\\"></p-radioButton>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"questionary.QuestionType === 1\\\" class=\\\"form-group trainee-option\\\">\\r\\n                                <textarea [readonly]=\\\"score != null? true: false\\\" class=\\\"form-control\\\" rows=\\\"5\\\" [(ngModel)]=\\\"questionary.AnswerText\\\"></textarea>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label><b>Comment</b></label>\\r\\n                    <div class=\\\"trainee-option\\\">\\r\\n                        <textarea class=\\\"form-control\\\" rows=\\\"5\\\" [(ngModel)]=\\\"assignmentData.CommentText\\\"></textarea>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label><b>Rating</b></label>\\r\\n                    <div class=\\\"trainee-option\\\">\\r\\n                        <p-rating [(ngModel)]=\\\"assignmentData.Rating\\\" stars=\\\"5\\\" [cancel]=\\\"false\\\"></p-rating>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <button pButton type=\\\"button\\\" (click)=\\\"saveResponse()\\\" label=\\\"Submit\\\"></button>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/training/trainee.component.html\n// module id = ../../../../../src/app/pages/training/trainee.component.html\n// module chunks = training.module","import { Component, ViewEncapsulation, OnInit } from '@angular/core';\r\n\r\nimport { TrainingService } from './training.service';\r\n\r\nimport { TraineeScheduleListByUserIdViewModel, TrainingAssignmentAttemptViewModel } from './training.model';\r\n\r\n@Component({\r\n    selector: 'app-trainee-component',\r\n    templateUrl: './trainee.component.html',\r\n    encapsulation: ViewEncapsulation.None,\r\n    styleUrls: ['../../../../node_modules/primeng/resources/primeng.min.css',\r\n        \"../../../../node_modules/primeng/resources/themes/omega/theme.css\",\r\n        '../form-elements/controls/file-uploader/file-uploader.component.scss',\r\n        './training.component.css'\r\n    ],\r\n    providers: [TrainingService]\r\n})\r\n\r\nexport class TraineeComponent implements OnInit {\r\n    traineeListData: TraineeScheduleListByUserIdViewModel[] = [];\r\n    assignmentData: TrainingAssignmentAttemptViewModel[] = [];\r\n    ShowAssignment: boolean = false;\r\n    score: number = 44;\r\n\r\n    constructor(private _trainingService: TrainingService, ) { }\r\n\r\n    ngOnInit() {\r\n        this.getTraineeScheduleListData();\r\n    }\r\n\r\n    getTraineeScheduleListData() {\r\n        this._trainingService.GetTraineeScheduleListByUserId().subscribe((res: TraineeScheduleListByUserIdViewModel[]) => {\r\n            this.traineeListData = res;\r\n        });\r\n    };\r\n\r\n    getTraineeAssigmentData(TrainingScheduleId: number, AssignmentId: number, Retest: boolean, IsAssignmentRequired: boolean) {\r\n        this._trainingService.GetTrainingScheduleAssignmentForUser(TrainingScheduleId, AssignmentId, Retest, IsAssignmentRequired).subscribe((res: TrainingAssignmentAttemptViewModel[]) => {\r\n            this.assignmentData = res;\r\n            this.ShowAssignment = true;\r\n        });\r\n    };\r\n\r\n\r\n    onShowAssignment(TrainingScheduleId: number, AssignmentId: number, Retest: boolean, IsAssignmentRequired: boolean, score: number) {\r\n        this.score = score;\r\n        if (!this.ShowAssignment) {\r\n            this.getTraineeAssigmentData(TrainingScheduleId, AssignmentId, Retest, IsAssignmentRequired);\r\n        }\r\n        else this.ShowAssignment = false;\r\n    }\r\n\r\n    saveResponse() {\r\n        this._trainingService.SaveTrainingScheduleAssignmentForUser(this.assignmentData).subscribe((res: any) => {\r\n\r\n            this.ShowAssignment = false;\r\n            this.getTraineeScheduleListData();\r\n        }, err => { console.log(err);  });\r\n    }\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/training/trainee.component.ts","module.exports = \"<div class=\\\"modal-body\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <p-dataTable [value]=\\\"scheduleListData\\\" [rows]=\\\"10\\\" [paginator]=\\\"true\\\" [rowsPerPageOptions]=\\\"[5,10,20,50]\\\"\\r\\n                     resizableColumns=\\\"true\\\" sortField=\\\"StartDate\\\" #dt [responsive]=\\\"true\\\">\\r\\n\\r\\n            <p-column field=\\\"TrainingNeed\\\" header=\\\"Subject\\\" [filter]=\\\"true\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n            <p-column field=\\\"StartDate\\\" header=\\\"Start Date\\\" [filter]=\\\"true\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n            <p-column field=\\\"EndDate\\\" header=\\\"End Date\\\" [filter]=\\\"true\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n\\r\\n            <p-column field=\\\"UserCount\\\" header=\\\"Trainee\\\">\\r\\n                <ng-template let-col let-car=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                    <div class=\\\"form-group\\\" [hidden]=\\\"car.UserCount ==0\\\">\\r\\n                        <span>{{car.UserCount}} &nbsp;Trainee &nbsp; <i data-toggle=\\\"modal\\\" (click)=\\\"getuserScheduleResultList(car.TrainingScheduleId)\\\" data-target=\\\"#lg-modal\\\" class=\\\"fa fa-info\\\" aria-hidden=\\\"true\\\"></i></span>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\" [hidden]=\\\"car.RoleCount ==0\\\">\\r\\n                        <span>{{car.RoleCount}} &nbsp;Trainee &nbsp; <i data-toggle=\\\"modal\\\" (click)=\\\"getuserScheduleResultList(car.TrainingScheduleId)\\\" data-target=\\\"#lg-modal\\\" class=\\\"fa fa-info\\\" aria-hidden=\\\"true\\\"></i></span>\\r\\n                    </div>\\r\\n                </ng-template>\\r\\n            </p-column>\\r\\n            <p-column field=\\\"MaterialCount\\\" header=\\\"Material\\\">\\r\\n                <ng-template let-col let-car=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                    <div class=\\\"form-group\\\" [hidden]=\\\"car.MaterialCount ==0 || car.MaterialCount == null\\\">\\r\\n                        <span>{{car.MaterialCount}} &nbsp;Files &nbsp;<i data-toggle=\\\"modal\\\" (click)=\\\"getMaterialListData(car.TrainingId)\\\" data-target=\\\"#lg-modal-training\\\" class=\\\"fa fa-info\\\" aria-hidden=\\\"true\\\"></i></span>\\r\\n                    </div>\\r\\n                </ng-template>\\r\\n            </p-column>\\r\\n            <p-column field=\\\"Status\\\" header=\\\"Status\\\">\\r\\n                <ng-template let-col let-car=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                    <div class=\\\"form-group\\\" [hidden]=\\\"car.Completed===true\\\">\\r\\n                        <button type=\\\"button\\\" title=\\\"Complete\\\" class=\\\"btn btn-primary\\\" (click)=\\\"updateTrainingScheduleStatus(car,true)\\\">Mark as Complete</button>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\" [hidden]=\\\"car.Completed===false\\\">\\r\\n                        <button type=\\\"button\\\" title=\\\"Save\\\" class=\\\"btn btn-primary\\\" (click)=\\\"updateTrainingScheduleStatus(car,false)\\\">Mark as Incomplete</button>\\r\\n                    </div>\\r\\n                </ng-template>\\r\\n            </p-column>\\r\\n\\r\\n\\r\\n        </p-dataTable>\\r\\n\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal fade\\\" data-backdrop=\\\"static\\\" data-keyboard=\\\"false\\\" id=\\\"lg-modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"modal-large-label\\\" style=\\\"display: none;\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header state modal-primary\\\">\\r\\n                <h4 class=\\\"modal-title\\\" id=\\\"modal-large-label\\\">Trainee List</h4>\\r\\n                <button type=\\\"button\\\" #closeDialog class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">×</span></button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <div class=\\\"form-group\\\" [hidden]=\\\"userScheduleResultList.length ==0\\\" *ngIf=\\\"!ShowAssignment ; else hideAssignment\\\">\\r\\n                    <p-dataTable  [editable]=\\\"true\\\" [value]=\\\"userScheduleResultList\\\" [rows]=\\\"10\\\" [paginator]=\\\"true\\\" [rowsPerPageOptions]=\\\"[5,10,20,50]\\\"\\r\\n                                 resizableColumns=\\\"true\\\" #dtscheduleResult [responsive]=\\\"true\\\">\\r\\n\\r\\n\\r\\n                        <p-column field=\\\"UserName\\\" header=\\\"Trainee Name\\\"></p-column>\\r\\n                        <p-column field=\\\"IsUserAttendedTraining\\\" [editable]=\\\"true\\\" header=\\\"Attended Training\\\">\\r\\n                            <ng-template let-col let-car=\\\"rowData\\\" pTemplate=\\\"editor\\\">\\r\\n                                <p-checkbox appendTo=\\\"body\\\" label=\\\"Attended By User\\\" binary=\\\"true\\\"\\r\\n                                            [(ngModel)]=\\\"car[col.field]\\\"></p-checkbox>\\r\\n                            </ng-template>\\r\\n                            <template let-col let-car=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                                 {{car.IsUserAttendedTraining ? 'Yes' : ''}}\\r\\n                            </template>\\r\\n                        </p-column>\\r\\n                        <p-column field=\\\"ReviewerComment\\\" [editable]=\\\"true\\\" header=\\\"Reviewer Comment\\\">\\r\\n\\r\\n                        </p-column>\\r\\n                        <p-column styleClass=\\\"col-button\\\">\\r\\n                            <ng-template pTemplate=\\\"header\\\">\\r\\n                                <div class=\\\"ui-helper-clearfix\\\" style=\\\"width:100%\\\">\\r\\n                                    <button type=\\\"button\\\" pButton icon=\\\"fa-floppy-o fa\\\" (click)=\\\"updateAllTrainerUserRecords()\\\" label=\\\"Save All\\\"></button>\\r\\n                                </div>\\r\\n                            </ng-template>\\r\\n                            <ng-template let-meeting=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                                <button type=\\\"button\\\" title=\\\"Save\\\" pButton (click)=\\\"UpdateScheduleResult(meeting)\\\" label=\\\"Save\\\" icon=\\\"fa-floppy-o fa\\\"></button>\\r\\n                            </ng-template>\\r\\n\\r\\n                        </p-column>\\r\\n                        <p-column field=\\\"TrainingAssignmentAttemptId\\\" header=\\\"Assignment\\\">\\r\\n                            <ng-template let-col let-assignment=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                                <ng-template [ngIf]=\\\"assignment.TrainingAssignmentAttemptId != null\\\"><button pButton type=\\\"button\\\" (click)=\\\"onShowAssignment(assignment.TrainingAssignmentAttemptId, assignment.UserId)\\\" label=\\\"Assignment\\\"></button></ng-template>\\r\\n                            </ng-template>\\r\\n                        </p-column>\\r\\n                        <!--<p-column field=\\\"UserComment\\\" header=\\\"Trainee Comment\\\">\\r\\n                        </p-column>\\r\\n                        <p-column field=\\\"UserRating\\\" header=\\\"Trainee Rating\\\">\\r\\n\\r\\n                        </p-column>-->\\r\\n                    </p-dataTable>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <ng-template #hideAssignment>\\r\\n                        <div *ngIf=\\\"assignmentData\\\">\\r\\n                            <h4>Trainee response</h4><br />\\r\\n                            <div class=\\\"container trainee-response\\\">\\r\\n                                <div *ngFor=\\\"let questionary of assignmentData.TrainingAssignmentAnswers;let i=index\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label><b>Q{{i+1}}. {{questionary.QuestionText}}</b></label>\\r\\n                                        <div *ngIf=\\\"questionary.QuestionType === 2\\\">\\r\\n                                            <div class=\\\"trainee-option\\\">\\r\\n                                                <div *ngFor=\\\"let multiple of questionary.AssignmentQuestionOptions; let i = index\\\">\\r\\n                                                    <p-radioButton disabled=\\\"true\\\" [value]=\\\"multiple.QuestionOptionID\\\" [label]=\\\"multiple.OptionText\\\" [(ngModel)]=\\\"questionary.QuestionOptionId\\\"></p-radioButton>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                                <b>Score: </b>\\r\\n                                                <input readonly type=\\\"number\\\" [value]=\\\"questionary.IsCorrectAnswer ? questionary.QuestionScore: 0\\\" (change)=\\\"onScoreChange()\\\" />\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"questionary.QuestionType === 1\\\">\\r\\n                                            <div class=\\\"trainee-option\\\">\\r\\n                                                <textarea class=\\\"form-control\\\" pInputTextarea [(ngModel)]=\\\"questionary.AnswerText\\\" readonly></textarea>\\r\\n                                            </div>\\r\\n                                            <b>Score: </b>\\r\\n                                            <input type=\\\"number\\\" [(ngModel)]=\\\"questionary.QuestionScore\\\" [max]=\\\"questionary.QuestionScore\\\"\\r\\n                                                          (change)=\\\"onScoreChange()\\\" />\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div><br />\\r\\n                                <!--<div class=\\\"form-group\\\">\\r\\n                                    <label><b>Comment</b></label>\\r\\n                                    <div class=\\\"trainee-option\\\">\\r\\n                                        <textarea class=\\\"form-control\\\" rows=\\\"5\\\" [(ngModel)]=\\\"assignmentData.CommentText\\\" readonly></textarea>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label><b>Rating</b></label>\\r\\n                                    <div class=\\\"trainee-option\\\">\\r\\n                                        <p-rating [(ngModel)]=\\\"assignmentData.Rating\\\" stars=\\\"5\\\" [cancel]=\\\"false\\\" [readonly]=\\\"true\\\"></p-rating>\\r\\n                                    </div>\\r\\n                                </div>-->  \\r\\n                            </div>\\r\\n                            <br/>\\r\\n                            <hr/>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <b>Score: </b><input type=\\\"number\\\" [(ngModel)]=\\\"assignmentData.Score\\\" />\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <b>Retest : </b><input type=\\\"checkbox\\\" [(ngModel)]=\\\"assignmentData.Retest\\\" />\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <br/>\\r\\n                        <button pButton type=\\\"button\\\" (click)=\\\"SaveAssignmentScoreForUser()\\\" label=\\\"Submit\\\"></button>\\r\\n                    </ng-template>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal fade\\\" data-backdrop=\\\"static\\\" data-keyboard=\\\"false\\\" id=\\\"lg-modal-training\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"modal-large-label\\\" style=\\\"display: none;\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header state modal-primary\\\">\\r\\n                <h4 class=\\\"modal-title\\\" id=\\\"modal-large-label\\\">Training Material List</h4>\\r\\n                <button type=\\\"button\\\" #closeDialog class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">×</span></button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <div class=\\\"form-group\\\" [hidden]=\\\"trainingMaterialList.length ==0\\\" >\\r\\n                    <p-dataTable [value]=\\\"trainingMaterialList\\\" [rows]=\\\"10\\\" [paginator]=\\\"true\\\" [rowsPerPageOptions]=\\\"[5,10,20,50]\\\"\\r\\n                                 resizableColumns=\\\"true\\\" #dtMaterial [responsive]=\\\"true\\\">\\r\\n\\r\\n\\r\\n                        <p-column field=\\\"YouTubeLink\\\" header=\\\"Link\\\">\\r\\n                            <ng-template let-col let-car=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                                <div class=\\\"form-group\\\" [hidden]=\\\"car.YouTubeLink ==''\\\">\\r\\n                                    <a style=\\\"text-decoration:underline;\\\" target=\\\"_blank\\\" href=\\\"{{car.YouTubeLink}}\\\">{{car.YouTubeLink}}</a>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\" [hidden]=\\\"car.FilePath ==null\\\">\\r\\n                                    <a (click)=\\\"downloadMaterial(car.TrainingMaterialId, car.FileName)\\\" *ngIf=\\\"car.FilePath !=null\\\" style=\\\"text-decoration:underline;\\\" href=\\\"javascript:void(0)\\\">\\r\\n                                        <!--href=\\\"{{apiEndPoint+'training/DownLoadMaterial?id='+car.TrainingMaterialId}}\\\">-->\\r\\n                                        {{car.FileName}}\\r\\n                                    </a>\\r\\n                                </div>\\r\\n                            </ng-template>\\r\\n                        </p-column>\\r\\n                    </p-dataTable>\\r\\n                </div>\\r\\n                \\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/training/trainer.component.html\n// module id = ../../../../../src/app/pages/training/trainer.component.html\n// module chunks = training.module","import { Component, ViewEncapsulation, ViewChild, TemplateRef, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Validators, FormGroup, FormArray, FormBuilder, FormControl, AbstractControl, ReactiveFormsModule, ValidatorFn } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { IMultiSelectOption, IMultiSelectSettings, IMultiSelectTexts } from 'angular-2-dropdown-multiselect';\nimport { Observable } from 'rxjs/Observable';\nimport { Http, URLSearchParams } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport { NgbModal, NgbDateStruct, NgbTimeStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { CalendarModule, CheckboxModule, InputTextareaModule, InputTextModule } from 'primeng/primeng';\nimport { LazyLoadEvent, FilterMetadata } from 'primeng/components/common/api';\nimport { MenuItem } from 'primeng/primeng';\nimport { TrainingService } from './training.service';\nimport { UserScheduleResultViewModel, TrainingScheduleListByUserIdViewModel, TrainingScheduleUserListViewModel, TrainingScheduleListViewModel, TrainingScheduleRoleViewModel, TrainingViewModel, TrainingMaterialViewModel, TrainingScheduleViewModel, TrainingScheduleUserViewModel, TrainingAssignmentAttemptViewModel  } from './training.model';\nimport { AssignmentService } from '../assignment/assignment.service';\nimport { Assignment } from '../assignment/assignment.model';\nimport { MasterEventDataService } from '../calendar/Mastereventdata';\nimport { UserModel } from '../meeting/meeting.model';\nimport { UserService } from \"../user/user.service\";\nimport { UserViewModel, RoleViewModel } from '../user/user.model';\nimport { environment } from '../../../environments/environment';\nimport * as FileSaver from 'file-saver';\nlet apiURL = environment.apiEndpoint;\n@Component({\n    selector: 'app-trainer-component',\n    templateUrl: './trainer.component.html',\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['../../../../node_modules/primeng/resources/primeng.min.css',\n        \"../../../../node_modules/primeng/resources/themes/omega/theme.css\",\n        '../form-elements/controls/file-uploader/file-uploader.component.scss',\n        './training.component.css'\n    ],\n    providers: [TrainingService, AssignmentService, MasterEventDataService, UserService],\n\n\n})\n\nexport class TrainerComponent implements OnInit {\n    public apiEndPoint: string;\n    public myForm: FormGroup; // our form model\n    ShowAssignment: boolean = false;\n    assignmentData: TrainingAssignmentAttemptViewModel;\n\n    constructor(private _UserService: UserService, private _assignmentService: AssignmentService, private _masterDataService: MasterEventDataService, private _trainingService: TrainingService, private router: Router, private location: Location, private _fb: FormBuilder, private route: ActivatedRoute) {\n        this.apiEndPoint = apiURL;\n        this.apiEndPoint = this.apiEndPoint.replace(\"/api\", \"\");\n    }\n    ngOnInit() {\n        this.getTrainingScheduleListData();\n\n    }\n    scheduleListData: TrainingScheduleListByUserIdViewModel[] = [];\n    totalScheduleRecords: number = 0;\n    getTrainingScheduleListData(): void {\n        this.scheduleListData = [];\n        this.totalScheduleRecords = 0;\n        this._trainingService.getTrainingScheduleListByUserId().subscribe((res: TrainingScheduleListByUserIdViewModel[]) => {\n            this.scheduleListData = res;\n            this.totalScheduleRecords = res.length;\n        });\n    }\n\n    userScheduleResultList: UserScheduleResultViewModel[] = [];\n\n    getuserScheduleResultList(id: number): void {\n        this.userScheduleResultList = [];\n        this.ShowAssignment = false;\n\n        this._trainingService.getTrainingScheduleUserResultList(id).subscribe((res: UserScheduleResultViewModel[]) => {\n            this.userScheduleResultList = res;\n        });\n    }\n    UpdateScheduleResult(model: UserScheduleResultViewModel) {\n        this._trainingService.addUpdateUserTrainingScheduleResult(model).subscribe(res => {\n            this.getuserScheduleResultList(model.TrainingScheduleId);\n        });\n    }\n    updateTrainingScheduleStatus(event: TrainingScheduleListByUserIdViewModel, status: boolean) {\n        this._trainingService.updateTrainingScheduleStatus(event.TrainingScheduleId, status).subscribe(res => {\n            this.getTrainingScheduleListData();\n        });\n    }\n    @ViewChild('closeDialog') closeDialog;\n    updateAllTrainerUserRecords() {\n        for (let aa of this.userScheduleResultList) {\r\n            this.UpdateScheduleResult(aa);\r\n        }\r\n        this.closeDialog.nativeElement.click();\r\n    }\n\n    GetAssignmentForUser(TrainingAssignmentAttemptId: number, UserId: number) {\r\n        this._trainingService.GetAssignmentForUser(TrainingAssignmentAttemptId, UserId).subscribe((res: TrainingAssignmentAttemptViewModel) => {\r\n            this.assignmentData = res;\r\n            this.ShowAssignment = true;\r\n            this.onScoreChange();\r\n        });\r\n    };\r\n\r\n    onScoreChange()\r\n    {\r\n        let score = 0;\r\n        this.assignmentData.TrainingAssignmentAnswers.forEach(answers => {\r\n            score = score + answers.QuestionScore;\r\n        });\r\n        this.assignmentData.Score = score;\r\n    }\r\n\r\n\r\n    onShowAssignment(TrainingAssignmentAttemptId: number, UserId: number) {\r\n        if (!this.ShowAssignment) {\r\n            this.GetAssignmentForUser(TrainingAssignmentAttemptId, UserId);\r\n        }\r\n        else this.ShowAssignment = false;\r\n    }\n\n    SaveAssignmentScoreForUser() {        \n        this._trainingService.SaveAssignmentScoreForUser(this.assignmentData).subscribe((res: any) => {\r\n            this.ShowAssignment = false;\r\n        }, err => { console.log(err); });\r\n    }\n\n    trainingMaterialList: TrainingMaterialViewModel[] = [];\n    getMaterialListData(trainingId) {\n        this.trainingMaterialList = [];\n        this._trainingService.getTrainingMaterialList(trainingId).subscribe((res: TrainingMaterialViewModel[]) => {\n            this.trainingMaterialList = res;\n\n        });\n    }\n\n    downloadMaterial(id: number, fileName: string) {\n        this._trainingService.downloadMaterial(id).subscribe(res => {\r\n            FileSaver.saveAs(res, fileName);\r\n        });\n    }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/training/trainer.component.ts","module.exports = \"<div style=\\\"margin-top:10px;\\\">\\r\\n    <div style=\\\"margin:20px;\\\">\\r\\n        <div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label>Trainer</label>\\r\\n                <select [(ngModel)]=\\\"trainerId\\\" class=\\\"form-control\\\">\\r\\n                    <option value=\\\"0\\\">--Select--</option>\\r\\n                    <option *ngFor=\\\"let trainer of trainerList\\\"\\r\\n                            value={{trainer.UserId}}>\\r\\n                        {{trainer.UserName}}\\r\\n                    </option>\\r\\n                </select>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <input type=\\\"button\\\" class=\\\"btn btn-primary\\\" value=\\\"Filter\\\" (click)=\\\"getTrainerReport()\\\" />\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n            <p-dataTable [value]=\\\"trainerReportData\\\" [rows]=\\\"10\\\" [paginator]=\\\"true\\\" [rowsPerPageOptions]=\\\"[5,10,20,50]\\\"\\r\\n                         #dt resizableColumns=\\\"true\\\" reorderableColumns=\\\"true\\\" [responsive]=\\\"true\\\" [totalRecords]=\\\"totalRecords\\\"\\r\\n                         sortField=\\\"TrainingNeed\\\" [lazy]=\\\"true\\\"  (onLazyLoad)=\\\"loadTrainerReportLazy($event)\\\">\\r\\n                <p-header>\\r\\n                    <div class=\\\"ui-helper-clearfix\\\">\\r\\n                        <button type=\\\"button\\\" pButton icon=\\\"fa-file-o\\\" iconPos=\\\"left\\\" label=\\\"Download\\\" (click)=\\\"exportCSV()\\\" style=\\\"float:left\\\"></button>\\r\\n                    </div>\\r\\n                </p-header>\\r\\n                <!--<p-footer></p-footer>-->\\r\\n                <p-column field=\\\"TrainingNeed\\\" header=\\\"Training\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n                <p-column field=\\\"StartDate\\\" header=\\\"Training Date\\\" [sortable]=\\\"true\\\">\\r\\n                    <ng-template let-col let-report=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                        <span>{{report.StartDate}}</span>\\r\\n                    </ng-template>\\r\\n                </p-column>\\r\\n                <p-column field=\\\"UsersAttended\\\" header=\\\"Number of Trainees\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n                <p-column field=\\\"AverageRating\\\" header=\\\"Overall rating\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n</p-dataTable>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/training/trainerreport.component.html\n// module id = ../../../../../src/app/pages/training/trainerreport.component.html\n// module chunks = training.module","import { Component, ViewEncapsulation, OnInit } from '@angular/core';\r\nimport { NgbDateStruct} from '@ng-bootstrap/ng-bootstrap';\r\nimport { TrainingService } from './training.service';\r\nimport { LazyLoadEvent, FilterMetadata } from 'primeng/components/common/api';\r\nimport * as FileSaver from 'file-saver';\r\nimport { TrainerReportViewModel, UserListViewModel, TrainerReportFilterModel, ReportViewModel } from './training.model';\r\n\r\n@Component({\r\n    selector: 'app-trainerreport-component',\r\n    templateUrl: './trainerreport.component.html',\r\n    encapsulation: ViewEncapsulation.None,\r\n    styleUrls: ['../../../../node_modules/primeng/resources/primeng.min.css',\r\n        \"../../../../node_modules/primeng/resources/themes/omega/theme.css\",\r\n        '../form-elements/controls/file-uploader/file-uploader.component.scss',\r\n        './training.component.css'\r\n    ],\r\n    providers: [TrainingService]\r\n})\r\n\r\nexport class TrainerReportComponent implements OnInit {\r\n    trainerReportData: TrainerReportViewModel[] = [];\r\n    totalRecords: number;\r\n    trainerList: UserListViewModel[]= [];\r\n    trainerId: number = 0;\r\n    filterModel: TrainerReportFilterModel;\r\n\r\n    constructor(private _trainingService: TrainingService, ) { }\r\n\r\n    ngOnInit() {\r\n        this.filterModel = new TrainerReportFilterModel();\n        this.filterModel.PageNo = 1;\n        this.filterModel.PageSize = 10;\n        this.filterModel.SortColumn = \"TrainingNeed\";\n        this.filterModel.SortOrder = \"asc\";\r\n        this.getTrainerList();\r\n        this.getTrainerReport();\r\n    }\r\n\r\n    getTrainerList() {\r\n        this._trainingService.getTrainerList().subscribe((res: UserListViewModel[]) => {\r\n            this.trainerList = res;\r\n        });\r\n    }\r\n\r\n    getTrainerReport() {\r\n        this.filterModel.TrainerId = this.trainerId == 0 ? null : this.trainerId;\r\n        this._trainingService.GetTrainerReport(this.filterModel).subscribe((res: ReportViewModel<TrainerReportViewModel>) => {\r\n            this.trainerReportData = res.ReportModel;\r\n            this.totalRecords = res.TotalRecords;\r\n        });\r\n    };\r\n\r\n    loadTrainerReportLazy(event: LazyLoadEvent) {\r\n        this.filterModel.PageNo = (event.first / event.rows) + 1;\r\n        this.filterModel.PageSize = event.rows;\r\n        this.filterModel.SortColumn = event.sortField;\r\n        this.filterModel.SortOrder = event.sortOrder == 1 ? \"asc\" : \"desc\";\r\n\r\n        this.getTrainerReport();\r\n    }\r\n\r\n    exportCSV() {\r\n        let downloadFilterModel = this.filterModel;\r\n        downloadFilterModel.PageSize = this.totalRecords;\r\n        this._trainingService.DownloadTrainerReport(downloadFilterModel).subscribe(res => {\r\n            FileSaver.saveAs(res, \"TrainerReport_\" + (new Date()).toLocaleDateString() + \".csv\");\r\n        });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/training/trainerreport.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"a.disabled {\\r\\n    pointer-events: none;\\r\\n    cursor: not-allowed;\\r\\n}\\r\\n\\r\\n.trainee-response {\\r\\n    border-style: groove;\\r\\n}\\r\\n\\r\\n.trainee-option {\\r\\n    margin: 10px;\\r\\n}\\r\\n\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/training/training.component.css\n// module id = ../../../../../src/app/pages/training/training.component.css\n// module chunks = training.module","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div style=\\\"width:100%;\\\">\\r\\n        <h6 class=\\\"mt-4\\\"></h6>\\r\\n        <div class=\\\"clearfix\\\">\\r\\n            <ul class=\\\"nav nav-tabs custom top\\\">\\r\\n                <li class=\\\"nav-item\\\">\\r\\n                    <a class=\\\"nav-link active\\\" data-toggle=\\\"tab\\\" href=\\\"#tabTraining\\\">Training</a>\\r\\n                </li>\\r\\n                <li class=\\\"nav-item\\\">\\r\\n                    <a class=\\\"nav-link\\\" [class.disabled]=\\\"disableTabSchedule ? true : null\\\" data-toggle=\\\"tab\\\" href=\\\"#tabSchedule\\\">Schedule</a>\\r\\n                </li>\\r\\n\\r\\n            </ul>\\r\\n        </div>\\r\\n        <div class=\\\"tab-content top\\\">\\r\\n            <div class=\\\"tab-pane active\\\" id=\\\"tabTraining\\\">\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                    <form [formGroup]=\\\"myForm\\\" novalidate (ngSubmit)=\\\"SaveTraining(myForm.value)\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>Training Need</label>\\r\\n                            <input type=\\\"text\\\" formControlName=\\\"TrainingNeed\\\" class=\\\"form-control validation-field\\\">\\r\\n                            <small *ngIf=\\\"!myForm.controls.TrainingNeed.valid\\\" class=\\\"text-danger\\\">\\r\\n                                Training Need is required.\\r\\n                            </small>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <div class=\\\"custom-controls-stacked\\\">\\r\\n                                <label class=\\\"custom-control custom-checkbox\\\">\\r\\n                                    <input formControlName=\\\"TrainerRequired\\\" type=\\\"checkbox\\\" class=\\\"custom-control-input\\\">\\r\\n                                    <span class=\\\"custom-control-indicator\\\"></span>\\r\\n                                    <span class=\\\"custom-control-description\\\">Is Trainer required?</span>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>Training Type</label>\\r\\n                            <div class=\\\"custom-controls-stacked\\\">\\r\\n                                <label class=\\\"custom-control custom-radio\\\">\\r\\n                                    <input #trainingTypeEvent name=\\\"TrainingType\\\" formControlName=\\\"TrainingType\\\" type=\\\"radio\\\" (click)=\\\"EnableDisableTrainingEvent(1)\\\" [value]=\\\"1\\\" class=\\\"custom-control-input\\\">\\r\\n                                    <span class=\\\"custom-control-indicator\\\"></span>\\r\\n                                    <span class=\\\"custom-control-description\\\">Event</span>\\r\\n                                </label>\\r\\n                                <select style=\\\"width:30%;\\\" formControlName=\\\"TrainingEventID\\\" #dropDownTrainingEvent class=\\\"form-control\\\">\\r\\n                                    <option value=\\\"0\\\">--Select--</option>\\r\\n                                    <option value=\\\"1\\\">Event 1</option>\\r\\n                                    <option value=\\\"2\\\">Event 2</option>\\r\\n                                </select>\\r\\n                                <label class=\\\"custom-control custom-radio\\\">\\r\\n                                    <input #trainingTypeUser name=\\\"TrainingType\\\" formControlName=\\\"TrainingType\\\" type=\\\"radio\\\" [value]=\\\"2\\\" (click)=\\\"EnableDisableTrainingEvent(2)\\\" class=\\\"custom-control-input\\\">\\r\\n                                    <span class=\\\"custom-control-indicator\\\"></span>\\r\\n                                    <span class=\\\"custom-control-description\\\">Trainee Specific</span>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <div class=\\\"custom-controls-stacked\\\">\\r\\n                                <label class=\\\"custom-control custom-checkbox\\\">\\r\\n                                    <input #assigmentResuiredCheckBox (click)=\\\"EnableDisableAssignmentDropDown()\\\" formControlName=\\\"IsAssignmentRequired\\\" type=\\\"checkbox\\\" class=\\\"custom-control-input\\\">\\r\\n                                    <span class=\\\"custom-control-indicator\\\"></span>\\r\\n                                    <span class=\\\"custom-control-description\\\">Is Assigment required?</span>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>Assignment</label>\\r\\n                            <select #assignmentDropDown formControlName=\\\"AssignmentID\\\" class=\\\"form-control\\\">\\r\\n                                <option value=\\\"0\\\">--Select--</option>\\r\\n                                <option *ngFor=\\\"let evebtStatus of assignmentList\\\"\\r\\n                                        value={{evebtStatus.AssignmentID}}>\\r\\n                                    {{evebtStatus.Title}}\\r\\n                                </option>\\r\\n                            </select>                            \\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>You Tube Link</label>\\r\\n\\r\\n                            <input type=\\\"text\\\" #youtubelinktextbox formControlName=\\\"YouTubeLink\\\" class=\\\"form-control validation-field\\\">\\r\\n\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <div class=\\\"input-group file-upload\\\">\\r\\n                                <input type=\\\"file\\\" multiple (change)=\\\"fileChange($event)\\\" #input class=\\\"file-upload-btn\\\" />\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Choose a file...\\\" value=\\\"{{fileName}}\\\">\\r\\n                                <i class=\\\"fa fa-times delete-file\\\" (click)=\\\"removeFile()\\\" *ngIf=\\\"fileToUpload\\\"></i>\\r\\n                                <span class=\\\"input-group-btn\\\">\\r\\n                                    <button class=\\\"btn btn-primary\\\" type=\\\"button\\\"><i class=\\\"fa fa-upload\\\"></i></button>\\r\\n                                </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"modal-footer\\\">\\r\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!myForm.valid\\\">Save</button>\\r\\n                            <!--<button type=\\\"button\\\" #buttonMaterial data-toggle=\\\"modal\\\" data-target=\\\"#lg-modal\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!myForm.valid\\\">Add Material</button>-->\\r\\n                        </div>\\r\\n                    </form>\\r\\n                </div>\\r\\n\\r\\n                <p-dataTable [value]=\\\"trainingMaterialList\\\" [rows]=\\\"10\\\" [paginator]=\\\"true\\\" [rowsPerPageOptions]=\\\"[5,10,20,50]\\\"\\r\\n                             resizableColumns=\\\"true\\\" #dtMaterial [responsive]=\\\"true\\\">\\r\\n\\r\\n\\r\\n                    <p-column field=\\\"YouTubeLink\\\" header=\\\"Link\\\">\\r\\n                        <ng-template let-col let-car=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                            <div class=\\\"form-group\\\" [hidden]=\\\"car.YouTubeLink ==''\\\">\\r\\n                                <a style=\\\"text-decoration:underline;\\\" target=\\\"_blank\\\" href=\\\"{{car.YouTubeLink}}\\\">{{car.YouTubeLink}}</a>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\" [hidden]=\\\"car.FilePath ==null\\\">\\r\\n                                <a (click)=\\\"downloadMaterial(car.TrainingMaterialId, car.FileName)\\\" *ngIf=\\\"car.FilePath !=null\\\" style=\\\"text-decoration:underline;\\\" href=\\\"javascript:void(0)\\\" >\\r\\n                                   <!--href=\\\"{{apiEndPoint+'training/DownLoadMaterial?id='+car.TrainingMaterialId}}\\\">-->\\r\\n                                {{car.FileName}}</a>\\r\\n                            </div>\\r\\n                        </ng-template>\\r\\n                    </p-column>\\r\\n                    <p-column styleClass=\\\"col-button\\\">\\r\\n                        <ng-template let-meeting=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                            <button type=\\\"button\\\" title=\\\"Delete\\\" pButton (click)=\\\"deleteMaterial(meeting)\\\" icon=\\\"fa fa-trash-o\\\"></button>\\r\\n                        </ng-template>\\r\\n\\r\\n                    </p-column>\\r\\n\\r\\n                </p-dataTable>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"tab-pane\\\" id=\\\"tabSchedule\\\">\\r\\n                <div #divMaterial class=\\\"modal-body\\\">\\r\\n                    <form [formGroup]=\\\"scheduleForm\\\" novalidate (ngSubmit)=\\\"saveSchedule(scheduleForm.value)\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>Start Date</label>\\r\\n                            <!--<input type=\\\"text\\\" formControlName=\\\"duedate\\\" type=\\\"date\\\" class=\\\"form-control\\\">-->\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <div class=\\\"input-group\\\">\\r\\n                                    <input class=\\\"form-control validation-field\\\" placeholder=\\\"yyyy-mm-dd\\\" name=\\\"StartDateStruct\\\" formControlName=\\\"StartDateStruct\\\" ngbDatepicker #d=\\\"ngbDatepicker\\\">\\r\\n                                    <div class=\\\"input-group-addon\\\" (click)=\\\"d.toggle()\\\">\\r\\n                                        <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!--display error message if agenda is not valid-->\\r\\n                            <small [hidden]=\\\"scheduleForm.controls.StartDateStruct.valid\\\" class=\\\"text-danger\\\">\\r\\n                                Start date is required\\r\\n                            </small>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>End Date</label>\\r\\n                            <!--<input type=\\\"text\\\" formControlName=\\\"duedate\\\" type=\\\"date\\\" class=\\\"form-control\\\">-->\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <div class=\\\"input-group\\\">\\r\\n                                    <input class=\\\"form-control validation-field\\\" placeholder=\\\"yyyy-mm-dd\\\" name=\\\"EndDateStruct\\\" formControlName=\\\"EndDateStruct\\\" ngbDatepicker #d1=\\\"ngbDatepicker\\\">\\r\\n                                    <div class=\\\"input-group-addon\\\" (click)=\\\"d1.toggle()\\\">\\r\\n                                        <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!--display error message if agenda is not valid-->\\r\\n                            <small [hidden]=\\\"scheduleForm.controls.EndDateStruct.valid\\\" class=\\\"text-danger\\\">\\r\\n                                End date is required\\r\\n                            </small>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\" *ngIf=\\\"myForm.controls.TrainerRequired.value\\\">\\r\\n                            <label>Trainer</label>\\r\\n                            <select  formControlName=\\\"Trainer\\\" class=\\\"form-control validation-field\\\">\\r\\n                                <option value=\\\"\\\">--Select--</option>\\r\\n                                <option *ngFor=\\\"let evebtStatus of trainersList\\\"\\r\\n                                        value={{evebtStatus.id}}>\\r\\n                                    {{evebtStatus.name}}\\r\\n                                </option>\\r\\n                            </select>\\r\\n                            <!--display error message if name is not valid-->\\r\\n                            <small [hidden]=\\\"scheduleForm.controls.Trainer.valid\\\" class=\\\"text-danger\\\">\\r\\n                                Action Status is required .\\r\\n                            </small>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>Assigned To</label>\\r\\n                            <label class=\\\"custom-control custom-radio\\\">\\r\\n                                <input #assignedToTrainee [disabled]=\\\"myForm.controls.TrainingType.value === 1\\\" type=\\\"radio\\\" name=\\\"assignedToRadio\\\" (click)=\\\"EnableDisableAssignedTo(1)\\\" value=\\\"1\\\" class=\\\"custom-control-input\\\">\\r\\n                                <span class=\\\"custom-control-indicator\\\"></span>\\r\\n                                <span class=\\\"custom-control-description\\\">Trainee</span>\\r\\n                            </label>\\r\\n                            <ss-multiselect-dropdown #userDropdown [options]=\\\"usersOptions\\\" [texts]=\\\"responsiblePersonTexts\\\" [settings]=\\\"responsiblePersonSettings\\\" formControlName=\\\"Users\\\"></ss-multiselect-dropdown>\\r\\n                            <label class=\\\"custom-control custom-radio\\\">\\r\\n                                <input [disabled]=\\\"myForm.controls.TrainingType.value === 1\\\" type=\\\"radio\\\" name=\\\"assignedToRadio\\\" (click)=\\\"EnableDisableAssignedTo(2)\\\" value=\\\"2\\\" class=\\\"custom-control-input\\\">\\r\\n                                <span class=\\\"custom-control-indicator\\\"></span>\\r\\n                                <span class=\\\"custom-control-description\\\">Roles</span>\\r\\n                            </label>\\r\\n                            <ss-multiselect-dropdown #roleDropdown [options]=\\\"rolesOptions\\\" [texts]=\\\"rolesTexts\\\" [settings]=\\\"rolesSettings\\\" formControlName=\\\"Roles\\\"></ss-multiselect-dropdown>\\r\\n                        </div>\\r\\n                        <div class=\\\"modal-footer\\\">\\r\\n                            <button type=\\\"submit\\\" [disabled]=\\\"!scheduleForm.valid && myForm.controls.TrainerRequired.value\\\" class=\\\"btn btn-primary\\\">Submit</button>\\r\\n                        </div>\\r\\n                    </form>\\r\\n\\r\\n                </div>\\r\\n                <p-dataTable [value]=\\\"scheduleListData\\\" [rows]=\\\"10\\\" [paginator]=\\\"true\\\" [rowsPerPageOptions]=\\\"[5,10,20,50]\\\"\\r\\n                             resizableColumns=\\\"true\\\" sortField=\\\"StartDate\\\" #dt [responsive]=\\\"true\\\">\\r\\n\\r\\n\\r\\n                    <p-column field=\\\"StartDate\\\" header=\\\"Start Date\\\"></p-column>\\r\\n                    <p-column field=\\\"EndDate\\\" header=\\\"End Date\\\"></p-column>\\r\\n                    <p-column field=\\\"Trainer\\\" header=\\\"Trainer\\\"></p-column>\\r\\n                    <p-column field=\\\"UserCount\\\" header=\\\"Trainee\\\">\\r\\n                        <ng-template let-col let-car=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                            <div class=\\\"form-group\\\" [hidden]=\\\"car.UserCount ==0\\\">\\r\\n                                <span>{{car.UserCount}} &nbsp;Trainee &nbsp; <i data-toggle=\\\"modal\\\" (click)=\\\"getTrainingScheduleUserList(car.TrainingScheduleId)\\\" data-target=\\\"#lg-modal\\\" class=\\\"fa fa-info\\\" aria-hidden=\\\"true\\\"></i></span>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\" [hidden]=\\\"car.RoleCount ==0\\\">\\r\\n                                <span>{{car.RoleCount}} &nbsp;Users &nbsp; <i data-toggle=\\\"modal\\\" (click)=\\\"getTrainingScheduleUserList(car.TrainingScheduleId)\\\" data-target=\\\"#lg-modal\\\" class=\\\"fa fa-info\\\" aria-hidden=\\\"true\\\"></i></span>\\r\\n                            </div>\\r\\n                        </ng-template>\\r\\n                    </p-column>\\r\\n                    <p-column field=\\\"Status\\\" header=\\\"Status\\\"></p-column>\\r\\n                    <p-column field=\\\"Rating\\\" header=\\\"Rating\\\"></p-column>\\r\\n                    <p-column styleClass=\\\"col-button\\\">\\r\\n                        <ng-template pTemplate=\\\"header\\\">\\r\\n                            <div class=\\\"ui-helper-clearfix\\\" style=\\\"width:100%\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </ng-template>\\r\\n                        <ng-template let-meeting=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                            <button type=\\\"button\\\" title=\\\"Delete\\\" pButton (click)=\\\"deleteSchedule(meeting)\\\" icon=\\\"fa fa-trash-o\\\"></button>\\r\\n                        </ng-template>\\r\\n                    </p-column>\\r\\n                </p-dataTable>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<div class=\\\"modal fade\\\" id=\\\"lg-modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"modal-large-label\\\" style=\\\"display: none;\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header state modal-primary\\\">\\r\\n                <h4 class=\\\"modal-title\\\" id=\\\"modal-large-label\\\">Trainee List</h4>\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">×</span></button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <p-dataTable [value]=\\\"trainingScheduleUserList\\\" [rows]=\\\"10\\\" [paginator]=\\\"true\\\" [rowsPerPageOptions]=\\\"[5,10,20,50]\\\"\\r\\n                             resizableColumns=\\\"true\\\" sortField=\\\"UserName\\\" #dt [responsive]=\\\"true\\\">\\r\\n\\r\\n\\r\\n                    <p-column field=\\\"UserName\\\" header=\\\"Trainee\\\"></p-column>\\r\\n                    <p-column field=\\\"Attended\\\" header=\\\"Attended\\\"></p-column>\\r\\n                    <p-column field=\\\"Signed\\\" header=\\\"Signed\\\"></p-column>\\r\\n                    <p-column field=\\\"UserRating\\\" header=\\\"Rating\\\"></p-column>\\r\\n                    <p-column field=\\\"TraineeComment\\\" header=\\\"Trainee Comment\\\"></p-column>\\r\\n                    <p-column field=\\\"TrainerComment\\\" header=\\\"Trainer Comment\\\"></p-column>\\r\\n                </p-dataTable>\\r\\n\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<iframe  style=\\\"display:none;\\\" #iframeDownload src=\\\"\\\"></iframe>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/training/training.component.html\n// module id = ../../../../../src/app/pages/training/training.component.html\n// module chunks = training.module","import { Component, ViewEncapsulation, ViewChild, TemplateRef, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Validators, FormGroup, FormArray, FormBuilder, FormControl, AbstractControl, ReactiveFormsModule, ValidatorFn } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { IMultiSelectOption, IMultiSelectSettings, IMultiSelectTexts } from 'angular-2-dropdown-multiselect';\nimport { Observable } from 'rxjs/Observable';\nimport { Http, URLSearchParams } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport { NgbModal, NgbDateStruct, NgbTimeStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { CalendarModule } from 'primeng/primeng';\nimport { LazyLoadEvent, FilterMetadata } from 'primeng/components/common/api';\nimport { MenuItem } from 'primeng/primeng';\nimport { TrainingService } from './training.service';\nimport { TrainingScheduleUserListViewModel, TrainingScheduleListViewModel, TrainingScheduleRoleViewModel, TrainingViewModel, TrainingMaterialViewModel, TrainingScheduleViewModel, TrainingScheduleUserViewModel } from './training.model';\nimport { AssignmentService } from '../assignment/assignment.service';\nimport { Assignment } from '../assignment/assignment.model';\nimport { MasterEventDataService } from '../calendar/Mastereventdata';\nimport { UserModel } from '../meeting/meeting.model';\nimport { UserService } from \"../user/user.service\";\nimport { UserViewModel, RoleViewModel } from '../user/user.model';\nimport { environment } from '../../../environments/environment';\nimport { AssignmentListFilterModel } from '../assignment/assignment.model';\nimport * as FileSaver from 'file-saver';\nlet apiURL = environment.apiEndpoint;\n@Component({\n    selector: 'app-training-component',\n    templateUrl: './training.component.html',\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['../../../../node_modules/primeng/resources/primeng.min.css',\n        \"../../../../node_modules/primeng/resources/themes/omega/theme.css\",\n        '../form-elements/controls/file-uploader/file-uploader.component.scss',\n        './training.component.css'\n    ],\n    providers: [TrainingService, AssignmentService, MasterEventDataService, UserService],\n\n\n})\n\nexport class TrainingComponent implements OnInit {\n    public apiEndPoint: string;\n    public myForm: FormGroup; // our form model\n    public materialForm: FormGroup;\n    public scheduleForm: FormGroup;\n    trainingId: number = 0;\n    disableTabSchedule: boolean = true;\n    usersOptions: IMultiSelectOption[] = [];\n    rolesOptions: IMultiSelectOption[] = [];\n    trainersList: UserModel[] = [];\n    assignmentList: AssignmentListFilterModel[] = [];\n\n    public responsiblePersonTexts: IMultiSelectTexts = {\n        checkAll: 'Select all',\n        uncheckAll: 'Unselect all',\n        checked: 'item selected',\n        checkedPlural: 'items selected',\n        searchPlaceholder: 'Find...',\n        defaultTitle: 'Select',\n        allSelected: 'All selected',\n    };\n    public responsiblePersonSettings: IMultiSelectSettings = {\n        enableSearch: true,\n        checkedStyle: 'fontawesome',\n        buttonClasses: 'btn btn-secondary btn-block',\n        dynamicTitleMaxItems: 3,\n        displayAllSelectedText: true,\n        maxHeight: '300px'\n    };\n\n    public rolesTexts: IMultiSelectTexts = {\n        checkAll: 'Select all',\n        uncheckAll: 'Unselect all',\n        checked: 'item selected',\n        checkedPlural: 'items selected',\n        searchPlaceholder: 'Find...',\n        defaultTitle: 'Select',\n        allSelected: 'All selected',\n    };\n    public rolesSettings: IMultiSelectSettings = {\n        enableSearch: true,\n        checkedStyle: 'fontawesome',\n        buttonClasses: 'btn btn-secondary btn-block',\n        dynamicTitleMaxItems: 3,\n        displayAllSelectedText: true,\n        maxHeight: '300px'\n    };\n    @ViewChild('assigmentResuiredCheckBox') assigmentResuiredCheckBox;\n    @ViewChild('dropDownTrainingEvent') dropDownTrainingEvent;\n    @ViewChild('closeDialog') closeDialog;\n    @ViewChild('assignmentDropDown') assignmentDropDown;\n    @ViewChild('youtubelinktextbox') youtubelinktextbox;\n    @ViewChild('trainingTypeEvent') trainingTypeEvent;\n    @ViewChild('trainingTypeUser') trainingTypeUser;\n    @ViewChild('assignedToTrainee') assignedToTrainee;\n\n    constructor(private _UserService: UserService, private _assignmentService: AssignmentService, private _masterDataService: MasterEventDataService, private _trainingService: TrainingService, private router: Router, private location: Location, private _fb: FormBuilder, private route: ActivatedRoute) {\n        this.apiEndPoint = apiURL;\n        this.apiEndPoint = this.apiEndPoint + \"/\";\n    }\n    ngOnInit() {\n\n        this.addhtmltoform(new TrainingViewModel());\n        this.addTrainingMaterialHtmlToForm(new TrainingMaterialViewModel());\n        this.addTrainingScheduleHtmlToForm(new TrainingScheduleViewModel());\n        this.EnableDisableTrainingEvent(2);\n        this.trainingTypeUser.nativeElement.checked = true;\n        this._assignmentService.getAllAssignment().subscribe((res: AssignmentListFilterModel[]) => {\n            this.assignmentList = res;\n        });\n        this._masterDataService.getUserList().subscribe(res => {\r\n\r\n            let compare = (a, b) => {\r\n                const nameA = a.name.toUpperCase();\r\n                const nameB = b.name.toUpperCase();\r\n                let comparison = 0;\r\n                if (nameA > nameB) {\r\n                    comparison = 1;\r\n                } else if (nameA < nameB) {\r\n                    comparison = -1;\r\n                }\r\n                return comparison;\r\n            }\r\n            res.sort(compare);\r\n            this.usersOptions = res;\r\n            this.trainersList = res;\r\n        });\n        this._UserService.getRoleMultipleList().subscribe((res) => {\n\n            this.rolesOptions = res;\n\n        });\n        this.userDropdown.disabled = true;\n        this.roleDropdown.disabled = true;\n        this.route.params.subscribe(params => {\r\n            this.trainingId = params['id'] as number; //log the value of id\r\n        });\n        if (this.trainingId > 0) {\n            this.getTrainingScheduleListData();\n            this._trainingService.getTraining(this.trainingId).subscribe((res: TrainingViewModel) => {\n                this.EnableDisableTrainingEvent(res.TrainingType);\n\n                this.addhtmltoform(res);\n                if (res.TrainingType == 1) {\n                    this.trainingTypeEvent.nativeElement.checked = true;\n                }\n                else {\n                    this.trainingTypeUser.nativeElement.checked = true;\n                }\n                this.EnableDisableTrainingEvent(res.TrainingType);\n                this.disableTabSchedule = false;\n                this.getMaterialListData();\n                this._assignmentService.getAssignment(res.AssignmentID).subscribe((res: AssignmentListFilterModel) => {\n                    this.assignmentList.push(res);\n                });\n            });\n        }\n    }\n    EnableDisableAssignmentDropDown() {\n        if (this.assigmentResuiredCheckBox.nativeElement.checked == true) {\n            this.assignmentDropDown.nativeElement.disabled = false;\n        }\n        else {\n            this.assignmentDropDown.nativeElement.disabled = true;\n            this.assignmentDropDown.nativeElement.value = '0';\n        }\n\n    }\n    addhtmltoform(model: TrainingViewModel) {\n        this.myForm = this._fb.group({\n            TrainingId: [model.TrainingId],\n            TrainingNeed: new FormControl(model.TrainingNeed, [Validators.required]),\n            TrainerRequired: [model.TrainerRequired],\n            TrainingType: [model.TrainingType],\n            TrainingEventID: new FormControl(model.TrainingEventID),\n            IsAssignmentRequired: [model.IsAssignmentRequired],\n            AssignmentID: [model.AssignmentID],\n            Active: [model.Active],\n            YouTubeLink: [model.YouTubeLink],\n        });\n    }\n    addTrainingMaterialHtmlToForm(model: TrainingMaterialViewModel) {\n        this.materialForm = this._fb.group({\n            TrainingMaterialId: [model.TrainingMaterialId],\n            YouTubeLink: [model.YouTubeLink],\n            FilePath: [model.FilePath],\n            FileName: [model.FileName],\n            TrainingId: [this.trainingId],\n            FileExtension: [model.FileExtension],\n            File: [''],\n        })\n    }\n    addTrainingScheduleHtmlToForm(model: TrainingScheduleViewModel) {\n        this.scheduleForm = this._fb.group({\n            TrainingScheduleId: [model.TrainingScheduleId],\n            TrainingId: [this.trainingId],\n            StartDateStruct: [{ year: new Date(model.StartDate).getFullYear(), month: new Date(model.StartDate).getMonth() + 1, day: new Date(model.StartDate).getDate() }, Validators.required],\n            EndDateStruct: [{ year: new Date(model.EndDate).getFullYear(), month: new Date(model.EndDate).getMonth() + 1, day: new Date(model.EndDate).getDate() }, Validators.required],\n            Trainer: [model.Trainer, Validators.required],\n            Users: [model.Users],\n            Roles: [model.Roles],\n        })\n    }\n\n    SaveTraining(model: TrainingViewModel) {\n        model.TrainingId = this.trainingId;\n        this._trainingService.addUpdateTraining(model).subscribe((res: number) => {\n            this.trainingId = res;\n            //this.divMaterial.nativeElement.hidden = true;\n            this.getMaterialListData();\n            this.disableTabSchedule = false;\n            this.saveMaterial();\n            this.youtubelinktextbox.nativeElement.value = '';\n            this.router.navigate(['/pages/training/' + res.toString()]);\n\n        });\n    }\n    EnableDisableTrainingEvent(value: number) {\n        this.dropDownTrainingEvent.nativeElement.value = 0;\n        if (value == 1) {\n            this.dropDownTrainingEvent.nativeElement.disabled = false;\n            this.scheduleForm['controls'].Users.setValue([]);\n            this.scheduleForm['controls'].Roles.setValue([]);\n            this.userDropdown.disabled = true;\n            this.roleDropdown.disabled = true;\n        }\n        else {\n            this.dropDownTrainingEvent.nativeElement.disabled = true;\n            this.assignedToTrainee.nativeElement.checked = true;\n            this.EnableDisableAssignedTo(1);\n        }\n    }\n    @ViewChild('userDropdown') userDropdown;\n    @ViewChild('roleDropdown') roleDropdown;\n\n    EnableDisableAssignedTo(value: number) {\n        if (value == 1) {\n            this.scheduleForm['controls'].Users.setValue([]);\n            this.scheduleForm['controls'].Roles.setValue([]);\n            this.userDropdown.disabled = false;\n            this.roleDropdown.disabled = true;\n        }\n        else {\n            this.scheduleForm['controls'].Users.setValue([]);\n            this.scheduleForm['controls'].Roles.setValue([]);\n            this.userDropdown.disabled = true;\n            this.roleDropdown.disabled = false;\n        }\n    }\n    saveSchedule(data: TrainingScheduleViewModel) {\n        data.TrainingId = this.trainingId;\n        data.StartDate = new Date(data.StartDateStruct.year, data.StartDateStruct.month - 1, data.StartDateStruct.day).toLocaleDateString();\n        data.EndDate = new Date(data.EndDateStruct.year, data.EndDateStruct.month - 1, data.EndDateStruct.day).toLocaleDateString();\n        if (data.Users != null && data.Users.length > 0) {\n            data.UserList = [];\n            for (let d of data.Users) {\n                var user: TrainingScheduleUserViewModel = new TrainingScheduleUserViewModel();\n                user.TrainingScheduleUserId = 0;\n                user.UserId = d;\n                user.TrainingScheduleId = data.TrainingScheduleId;\n                data.UserList.push(user);\n            }\n        }\n        if (data.Roles != null && data.Roles.length > 0) {\n            data.RoleList = [];\n            for (let d of data.Roles) {\n                var role: TrainingScheduleRoleViewModel = new TrainingScheduleRoleViewModel();\n                role.TrainingScheduleRoleId = 0;\n                role.RoleId = d;\n                role.TrainingScheduleId = data.TrainingScheduleId;\n                data.RoleList.push(role);\n            }\n        }\n        this._trainingService.addUpdateTrainingSchedule(data).subscribe(res => {\n\n            this.addTrainingScheduleHtmlToForm(new TrainingScheduleViewModel());\n            this.getTrainingScheduleListData();\n        });\n    }\n    fileName: string;\n    fileToUpload: Array<File>;\n    fileChange(input) {\n        this.fileToUpload = <Array<File>>input.target.files;\n        //const reader = new FileReader();\n        //if (input.files.length) {\n        //    this.fileName = input.files[0].name;\n        //    this.fileToUpload = input.files[0];\n        //}\n    }\n\n    removeFile(): void {\n        this.fileName = '';\n        this.fileToUpload = null;\n    }\n\n    saveMaterial() {\n        if (this.fileToUpload != null && this.fileToUpload != undefined && this.fileToUpload.length > 0) {\n            let files = this.fileToUpload;\n            this.fileToUpload = null;\n            for (let file of files) {\n                let _formData = new FormData();\r\n                _formData.append(\"FileName\", file.name);\r\n                _formData.append(\"MyFile\", file);\r\n                _formData.append(\"YouTubeLink\", '');\r\n                _formData.append(\"TrainingId\", this.trainingId.toString());\r\n                let body = _formData;\n                this._trainingService.uploadMaterial(body).subscribe(res => {\n\n                    this.getMaterialListData();\n                });\n\n            }\n        }\n    }\n    scheduleListData: TrainingScheduleListViewModel[] = [];\n    totalScheduleRecords: number = 0;\n    getTrainingScheduleListData() {\n        this.scheduleListData = [];\n        this.totalScheduleRecords = 0;\n        this._trainingService.getTrainingScheduleList(this.trainingId).subscribe((res: TrainingScheduleListViewModel[]) => {\n            this.scheduleListData = res;\n            this.totalScheduleRecords = res.length;\n        });\n    }\n    deleteSchedule(event: TrainingScheduleListViewModel) {\n        if (confirm(\"Are you sure want to delete this training schedule ?\")) {\r\n            this._trainingService.deleteTrainingSchedule(event.TrainingScheduleId).subscribe(res => {\n                this.getTrainingScheduleListData();\n            });\n        }\n    }\n    trainingScheduleUserList: TrainingScheduleUserListViewModel[] = [];\n    getTrainingScheduleUserList(id: number) {\n        this.trainingScheduleUserList = [];\n        this._trainingService.getTrainingScheduleUserList(id).subscribe((res: TrainingScheduleUserListViewModel[]) => {\n            this.trainingScheduleUserList = res;\n        });\n    }\n\n    // Material List\n    trainingMaterialList: TrainingMaterialViewModel[] = [];\n    getMaterialListData() {\n        this.trainingMaterialList = [];\n        this._trainingService.getTrainingMaterialList(this.trainingId).subscribe((res: TrainingMaterialViewModel[]) => {\n            this.trainingMaterialList = res;\n\n        });\n    }\n    deleteMaterial(event: TrainingMaterialViewModel) {\n        if (confirm(\"Are you sure want to delete this material ?\")) {\n            this._trainingService.deleteTrainingMaterial(event.TrainingMaterialId).subscribe(res => {\n                this.getMaterialListData();\n            });\n        }\n    }\n    @ViewChild('iframeDownload') iframeDownload;\n    downloadMaterial(id: number, fileName: string) {\r\n        debugger;\n        this._trainingService.downloadMaterial(id).subscribe(res => {\r\n            FileSaver.saveAs(res, fileName);\r\n        });\n    }\n    //Material List End\n}\n\n\n\n\n// WEBPACK FOOTER //\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/training/training.component.ts","import { NgbModal, NgbDateStruct, NgbTimeStruct } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nexport class TrainingViewModel {\r\n    public TrainingId: number;\r\n    public TrainingNeed: string;\r\n    public TrainerRequired: boolean;\r\n    public TrainingType: number = 2;\r\n    public TrainingEventID: number;\r\n    public IsAssignmentRequired: boolean;\r\n    public AssignmentID: number;\r\n    public Active: boolean;\r\n    public CreatedOn: Date;\r\n    public CreatedBy: number;\r\n    public YouTubeLink: string;\r\n}\r\n\r\n\r\nexport class TrainingMaterialViewModel {\r\n    public TrainingMaterialId: number;\r\n    public YouTubeLink: string;\r\n    public FilePath: string;\r\n    public FileName: string;\r\n    public TrainingId: number;\r\n    public FileExtension: string;\r\n}\r\n\r\n\r\nexport class TrainingScheduleViewModel {\r\n\r\n    public TrainingScheduleId: number;\r\n    public TrainingId: number;\r\n    public StartDate: string;\r\n    public EndDate: string;\r\n    public StartDateStruct: NgbDateStruct;\r\n    public EndDateStruct: NgbDateStruct;\r\n    public Trainer: number;\r\n    public Users: number[] = [];\r\n    public Roles: number[] = [];\r\n    public UserList: TrainingScheduleUserViewModel[] = [];\r\n    public RoleList: TrainingScheduleRoleViewModel[] = [];\r\n}\r\n\r\nexport class TrainingScheduleUserViewModel {\r\n    public TrainingScheduleUserId: number;\r\n    public TrainingScheduleId: number;\r\n    public UserId: number;\r\n}\r\n\r\nexport class TrainingScheduleRoleViewModel {\r\n    public TrainingScheduleRoleId: number;\r\n    public TrainingScheduleId: number;\r\n    public RoleId: number;\r\n}\r\n\r\n\r\nexport class TrainingScheduleListViewModel {\r\n    public TrainingScheduleId: number;\r\n    public StartDate: string;\r\n    public EndDate: string;\r\n    public Trainer: string;\r\n    public UserCount: number;\r\n    public RoleCount: number;\r\n    public Status: string;\r\n    public Rating: string;\r\n}\r\n\r\n\r\nexport class TrainingScheduleUserListViewModel {\r\n    public TrainingScheduleUserId: number;\r\n    public UserId: number;\r\n    public UserName: string;\r\n    public Attended: string;\r\n    public Signed: string;\r\n    public Result: string;\r\n    public TraineeComment: string;\r\n    public TrainerComment: string;\r\n    public Status: number;\r\n    public UserRating: number;\r\n}\r\n\r\nexport class TrainingListFilterModel {\r\n    public PageNo: number;\r\n    public PageSize: number;\r\n    public SortColumn: string;\r\n    public SortOrder: string;\r\n    public TrainingNeed: string;\r\n    public TrainerRequired: number;\r\n    public TrainingType: number;\r\n    public Assignment: string;\r\n}\r\n\r\nexport class TrainingList {\r\n    public TrainingId: number;\r\n    public TrainingNeed: string;\r\n    public TrainerRequired: string;\r\n    public TrainingType: string;\r\n    public Assignment: string;\r\n    public RowID: number;\r\n}\r\n\r\nexport class TrainingListViewModel {\r\n    public TrainingList: TrainingList[] = [];\r\n    public TotalRecords: number;\r\n}\r\n\r\nexport class TrainingScheduleListByUserIdViewModel {\r\n    public TrainingScheduleId: number;\r\n    public TrainingId: number;\r\n    public StartDate: string;\r\n    public EndDate: string;\r\n    public Trainer: string;\r\n    public UserCount: number;\r\n    public RoleCount: number;\r\n    public Status: string;\r\n    public Rating: string;\r\n    public TrainingNeed: string;\r\n    public MaterialCount: number;\r\n    public Completed: boolean;\r\n}\r\n\r\n\r\n\r\nexport class UserScheduleResultViewModel {\r\n    public UserScheduleResultId: number;\r\n    public TrainingId: number;\r\n    public TrainingScheduleId: number;\r\n    public UserId: number;\r\n    public IsUserAttendedTraining: boolean;\r\n    public ReviewerComment: string;\r\n    public Status: number;\r\n    public UserName: string;\r\n    public TrainingAssignmentAttemptId: number;\r\n    public UserComment: string;\r\n    public UserRating: number;\r\n}\r\n\r\nexport class TraineeScheduleListByUserIdViewModel {\r\n    public TrainingScheduleUserId: number;\r\n    public TrainingScheduleId: number;\r\n    public TrainingId: number;\r\n    public TrainingNeed: string;\r\n    public AssignmentId: number;\r\n    public TrainerId: number;\r\n    public Trainer: string;\r\n    public StartDate: string;\r\n    public EndDate: string;\r\n}\r\n\r\nexport class TrainingAssignmentAttemptViewModel {\r\n    public TrainingAssignmentAttemptId: number;\r\n    public TrainingScheduleId: number;\r\n    public AssignmentId: number\r\n    public UserId: number;\r\n    public CommentText: string;\r\n    public Rating: number;\r\n    public Score: number;\r\n    public AttemptDate: string;\r\n    public TrainingAssignmentAnswers: [{\r\n        TrainingAssignmentAnswerId: number;\r\n        TrainingAssignmentAttemptId: number;\r\n        QuestionId: number;\r\n        QuestionText: string;\r\n        QuestionType: number;\r\n        QuestionScore: number;\r\n        Score: number;\r\n        AnswerText: string;\r\n        QuestionOptionId: number;\r\n\r\n        AssignmentQuestionOptions: [{\r\n            QuestionOptionID: number;\r\n            QuestionID: number;\r\n            OptionText: string;\r\n        }]\r\n    }]\r\n}\r\n\r\nexport class ReportViewModel<T>{\r\n    ReportModel: T[];\r\n    TotalRecords: number;\r\n}\r\n\r\nexport class TrainingReportViewModel {\r\n    public TrainingId: number;\r\n    public TrainingScheduleId: number;\r\n    public TrainingNeed: string;\r\n    public TraineeId: number;\r\n    public TraineeName: string;\r\n    public TraineeComment: string;\r\n    public TrainerId: number;\r\n    public TrainerName: string;\r\n    public TrainerComment: string;\r\n    public IsUserAttendedTraining: boolean;\r\n    public AttemptDate: string;\r\n    public Score: number;\r\n    public TotalScore: number;\r\n}\r\n\r\nexport class TrainingNeedListViewModel {\r\n    public TrainingId: number;\r\n    public TrainingNeed: string;\r\n}\r\n\r\nexport class UserListViewModel {\r\n    public UserId: number;\r\n    public UserName: string;\r\n}\r\n\r\nexport class TrainerReportViewModel {\r\n    public TrainingId: number;\r\n    public TrainingNeed: string;\r\n    public StartDate: string;\r\n    public EndDate: string;\r\n    public UsersAttended: number;\r\n    public AverageRating: number;\r\n}\r\n\r\nexport class TrainingUserReportViewModel {\r\n    public TrainingId : number;\r\n    public TrainingScheduleId : number;\r\n    public StartDate: string;\r\n    public TrainingNeed: string;\r\n    public TraineeId : number;\r\n    public TraineeName: string;\r\n    public TrainerId: number;\r\n    public TrainerName: string;\r\n    public TrainerComment: string;\r\n    public IsUserAttendedTraining : boolean;\r\n    public Score: number;\r\n    public TotalScore: number;\r\n}\r\n\r\nexport class BaseFilterModel {\r\n    public PageNo: number;\r\n    public PageSize: number;\r\n    public SortColumn: string;\r\n    public SortOrder: string;\r\n}\r\n\r\nexport class TrainingReportFilterModel extends BaseFilterModel {    \r\n    public StartDate: string;\r\n    public EndDate: string;\r\n    public TrainingId: number;\r\n}\r\n\r\nexport class TrainerReportFilterModel extends BaseFilterModel {\r\n    public TrainerId: number;\r\n}\r\n\r\nexport class TrainingUserReportFilterModel extends BaseFilterModel {\r\n    public UserId: number;\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/training/training.model.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DirectivesModule } from '../../theme/directives/directives.module';\nimport { TrainingListComponent } from './traininglist.component';\nimport { TrainingComponent } from './training.component';\nimport { TrainerComponent } from './trainer.component';\nimport { TraineeComponent } from './trainee.component';\nimport { TrainingReportComponent } from './trainingreport.component';\nimport { TrainerReportComponent } from './trainerreport.component';\nimport { UserReportComponent } from './userreport.component';\nimport { MultiselectDropdownModule } from 'angular-2-dropdown-multiselect';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ChartModule, CalendarModule, SharedModule, DataTableModule, MultiSelectModule, SelectItem, CheckboxModule, RadioButtonModule, InputTextareaModule, RatingModule } from 'primeng/primeng';\n\nexport const routes = [\n    { path: '', component: TrainingComponent, pathMatch: 'full' },\n    { path: 'list', component: TrainingListComponent, data: { breadcrumb: 'List' } },\n    { path: 'training', component: TrainingComponent, data: { breadcrumb: 'Training' } },\n    { path: 'trainer', component: TrainerComponent, data: { breadcrumb: 'Trainer' } },\n    { path: 'trainee', component: TraineeComponent, data: { breadcrumb: 'Trainee' } },\n    { path: 'trainingreport', component: TrainingReportComponent, data: { breadcrumb: 'Training Report' } },\n    { path: 'userreport', component: UserReportComponent, data: { breadcrumb: 'User Report' } },\n    { path: 'trainerreport', component: TrainerReportComponent, data: { breadcrumb: 'Trainer Report' } },\n    { path: ':id', component: TrainingComponent, data: { breadcrumb: 'Edit' } },\n]\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        DirectivesModule,\n        MultiselectDropdownModule,\n        NgbModule.forRoot(),\n        CalendarModule,\r\n        SharedModule,\n        DataTableModule,\n        MultiSelectModule,\n        CheckboxModule,\n        InputTextareaModule,\n        RatingModule,\n        RadioButtonModule,\n        RouterModule.forChild(routes)\n    ],\n    declarations: [\n        TrainingListComponent,\n        TrainingComponent,\n        TrainerComponent,\n        TraineeComponent,\n        TrainingReportComponent,\n        TrainerReportComponent,\n        UserReportComponent\n    ]\n})\nexport class TrainingModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/training/training.module.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { Observable } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport 'rxjs/add/operator/map';\r\nimport { IMultiSelectOption, IMultiSelectSettings, IMultiSelectTexts } from 'angular-2-dropdown-multiselect';\r\nimport { UserScheduleResultViewModel, TrainingViewModel, TrainingScheduleViewModel, TrainingAssignmentAttemptViewModel, TrainingReportFilterModel, TrainerReportFilterModel, TrainingUserReportFilterModel } from './training.model';\r\nimport { ResponseContentType } from '@angular/http';\r\n\r\nimport { environment } from '../../../environments/environment';\r\nimport { TrainingListFilterModel, TrainingList, TrainingListViewModel, TrainingReportViewModel } from './training.model';\r\nlet apiURL = environment.apiEndpoint;\r\n@Injectable()\r\nexport class TrainingService {\r\n\r\n    constructor(private http: Http) {\r\n    }\r\n    addUpdateTraining(model: TrainingViewModel): Observable<any> {\r\n        return this.http.post(apiURL + '/training/AddUpdateTraining', model).map(response => response.json());\r\n    }\r\n    uploadMaterial(body: FormData) {\r\n        return this.http.post(apiURL + '/training/SaveMaterial', body).map(res => { });\r\n    }\r\n    addUpdateTrainingSchedule(model: TrainingScheduleViewModel): Observable<any> {\r\n        return this.http.post(apiURL + '/trainingschedule/AddUpdateTrainingSchedule', model).map(response => response.json());\r\n    }\r\n    getTrainingScheduleList(id: number): Observable<any> {\r\n        return this.http.get(apiURL + '/trainingschedule/GetTrainingScheduleList?id=' + id).map(response => response.json());\r\n    }\r\n    getTrainingScheduleUserList(id: number): Observable<any> {\r\n        return this.http.get(apiURL + '/trainingschedule/GetTrainingScheduleUserList?id=' + id).map(response => response.json());\r\n    }\r\n    getTraining(id: number): Observable<any> {\r\n        return this.http.get(apiURL + '/training/GetTraining?id=' + id).map(response => response.json());\r\n    }\r\n    getTrainingList(filterModel: TrainingListFilterModel): Observable<any> {\r\n        return this.http.post(apiURL + '/training/GetTrainingList', filterModel).map(response => response.json());\r\n    }\r\n    deleteTraining(id: number): Observable<any> {\r\n        return this.http.get(apiURL + '/training/DeleteTraining?id=' + id).map(response => response.json());\r\n    }\r\n    getTrainingMaterialList(id: number): Observable<any> {\r\n        return this.http.get(apiURL + '/training/GetSngleByTrainingId?id=' + id).map(response => response.json());\r\n    }\r\n    deleteTrainingMaterial(id: number): Observable<any> {\r\n        return this.http.get(apiURL + '/training/DeleteMaterial?id=' + id).map(response => response.json());\r\n    }\r\n    getTrainingScheduleListByUserId(): Observable<any> {\r\n        return this.http.get(apiURL + '/trainingschedule/GetTrainingScheduleListByUserId').map(response => response.json());\r\n    }\r\n    addUpdateUserTrainingScheduleResult(model: UserScheduleResultViewModel): Observable<any> {\r\n        return this.http.post(apiURL + '/trainingschedule/AddUpdateUserScheduleResult', model).map(response => response.json());\r\n    }\r\n    getTrainingScheduleUserResultList(id: number): Observable<any> {\r\n        return this.http.get(apiURL + '/trainingschedule/GetTrainingScheduleUserResultList?id=' + id).map(response => response.json());\r\n    }\r\n\r\n    GetTraineeScheduleListByUserId(): Observable<any> {\r\n        return this.http.get(apiURL + '/trainee/GetTraineeScheduleListByUserId').map(response => response.json());\r\n    }\r\n    deleteTrainingSchedule(id: number): Observable<any> {\r\n        return this.http.get(apiURL + '/trainingschedule/DeleteTrainingSchedule?id=' + id).map(response => response.json());\r\n    }\r\n    updateTrainingScheduleStatus(id: number, status: boolean): Observable<any> {\r\n        return this.http.get(apiURL + '/trainingschedule/UpdateTrainingScheduleStatus?id=' + id + \"&Status=\" + status).map(response => response.json());\r\n    }\r\n\r\n    GetTrainingScheduleAssignmentForUser(trainingScheduleId: number, assignmentId: number, Retest: boolean, AssignmentRequired: boolean): Observable<any> {\r\n        let url = apiURL + '/trainee/GetTrainingScheduleAssignmentForUser/' + trainingScheduleId + \"/\" + assignmentId + \"/\" + Retest + \"/\" + AssignmentRequired;\r\n        return this.http.get(url).map(response => response.json());\r\n    }\r\n\r\n    SaveTrainingScheduleAssignmentForUser(model: TrainingAssignmentAttemptViewModel[]): Observable<any> {\r\n        return this.http.post(apiURL + '/trainee/SaveTrainingScheduleAssignmentForUser', model).map(response => response.json());\r\n    }\r\n    downloadMaterial(id: number): Observable<Blob> {\r\n        let options = new RequestOptions({ responseType: ResponseContentType.Blob });\r\n        return this.http.get(apiURL + '/training/DownLoadMaterialBlob?id=' + id, options)\r\n            .map(response => <Blob>response.blob());\r\n    }\r\n\r\n    GetAssignmentForUser(TrainingAssignmentAttemptId: number, UserId: number): Observable<any> {\r\n        let url = apiURL + '/trainingschedule/GetAssignmentForUser/' + TrainingAssignmentAttemptId + \"/\" + UserId;\r\n        return this.http.get(url).map(response => response.json());\r\n    }\r\n\r\n    SaveAssignmentScoreForUser(model: TrainingAssignmentAttemptViewModel): Observable<any> {\r\n        model.TrainingAssignmentAnswers = null;\r\n        return this.http.post(apiURL + '/trainingschedule/SaveAssignmentScoreForUser', model).map(response => response.json());\r\n    }\r\n\r\n    GetTrainingReport(filterModel: TrainingReportFilterModel): Observable<any> {\r\n        let url = apiURL + '/training/GetTrainingReport';\r\n        return this.http.get(url, { params: filterModel}).map(response => response.json());\r\n    }\r\n\r\n    DownloadTrainingReport(filterModel: TrainingReportFilterModel): Observable<Blob> {\r\n        let options = new RequestOptions({ responseType: ResponseContentType.Blob, params: filterModel });\r\n        return this.http.get(apiURL + '/training/DownloadTrainingReport', options)\r\n            .map(response => <Blob>response.blob());\r\n    }\r\n\r\n    GetTrainerReport(filterModel: TrainerReportFilterModel): Observable<any> {\r\n        let url = apiURL + '/training/GetTrainerReport';\r\n        return this.http.get(url, { params: filterModel }).map(response => response.json());\r\n    }\r\n\r\n    DownloadTrainerReport(filterModel: TrainerReportFilterModel): Observable<Blob> {\r\n        let options = new RequestOptions({ responseType: ResponseContentType.Blob, params: filterModel });\r\n        return this.http.get(apiURL + '/training/DownloadTrainerReport', options)\r\n            .map(response => <Blob>response.blob());\r\n    }\r\n\r\n    GetUserReport(filterModel: TrainingUserReportFilterModel): Observable<any> {\r\n        let url = apiURL + '/training/GetTrainingUserReport';\r\n        return this.http.get(url, { params: filterModel }).map(response => response.json());\r\n    }\r\n\r\n    DownloadUserReport(filterModel: TrainingUserReportFilterModel): Observable<Blob> {\r\n        let options = new RequestOptions({ responseType: ResponseContentType.Blob, params: filterModel });\r\n        return this.http.get(apiURL + '/training/DownloadTrainingUserReport', options)\r\n            .map(response => <Blob>response.blob());\r\n    }\r\n\r\n    GetTrainingNeedList(): Observable<any> {\r\n        let url = apiURL + '/training/GetTrainingNeedList';\r\n        return this.http.get(url).map(response => response.json());\r\n    }\r\n\r\n    getTrainerList(): Observable<any> {\r\n        let url = apiURL + '/training/GetTrainerList';\r\n        return this.http.get(url).map(response => response.json());\r\n    }\r\n\r\n    getUserList(): Observable<any> {\r\n        let url = apiURL + '/training/GetUserList';\r\n        return this.http.get(url).map(response => response.json());\r\n    }\r\n    \r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/training/training.service.ts","module.exports = \"<p-dataTable [value]=\\\"data\\\" [lazy]=\\\"true\\\" [rows]=\\\"10\\\" [paginator]=\\\"true\\\" [rowsPerPageOptions]=\\\"[5,10,20,50]\\\"\\r\\n             #dt resizableColumns=\\\"true\\\" reorderableColumns=\\\"true\\\" [responsive]=\\\"true\\\" [totalRecords]=\\\"totalRecords\\\"\\r\\n             sortField=\\\"TrainingNeed\\\" (onLazyLoad)=\\\"loadCarsLazy($event)\\\">\\r\\n    <!--<p-footer></p-footer>-->\\r\\n    <p-column field=\\\"TrainingNeed\\\" header=\\\"Training Need\\\" [filter]=\\\"true\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n    <p-column field=\\\"TrainerRequired\\\" header=\\\"Trainer Required\\\" [filter]=\\\"true\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n    <p-column field=\\\"TrainingType\\\" header=\\\"Training Type\\\" [filter]=\\\"true\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n    <p-column field=\\\"Assignment\\\" header=\\\"Assignment\\\" [filter]=\\\"true\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n    <p-column styleClass=\\\"col-button\\\">\\r\\n        <ng-template pTemplate=\\\"header\\\">\\r\\n            <div class=\\\"ui-helper-clearfix\\\" style=\\\"width:100%\\\">\\r\\n                <button type=\\\"button\\\" pButton icon=\\\"fa-plus\\\" (click)=\\\"redirectToNewPage()\\\" label=\\\"Add\\\"></button>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n        <ng-template let-meeting=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n            <button type=\\\"button\\\" title=\\\"Edit\\\" pButton (click)=\\\"redirectToEditPage(meeting)\\\" icon=\\\"fa fa-pencil-square-o\\\"></button>\\r\\n            <button type=\\\"button\\\" title=\\\"Cancel\\\" pButton (click)=\\\"deleteAction(meeting)\\\" icon=\\\"fa fa-trash-o\\\"></button>\\r\\n        </ng-template>\\r\\n\\r\\n    </p-column>\\r\\n</p-dataTable>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/training/traininglist.component.html\n// module id = ../../../../../src/app/pages/training/traininglist.component.html\n// module chunks = training.module","import { Component, ViewEncapsulation, ViewChild, TemplateRef, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Validators, FormGroup, FormArray, FormBuilder } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { Location } from '@angular/common';\nimport { IMultiSelectOption, IMultiSelectSettings, IMultiSelectTexts } from 'angular-2-dropdown-multiselect';\nimport { Observable } from 'rxjs/Observable';\nimport { Http, URLSearchParams } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport { LazyLoadEvent, FilterMetadata } from 'primeng/components/common/api';\r\nimport { AccordionModule, MultiSelectModule, SelectItem, CheckboxModule } from 'primeng/primeng';     //accordion and accordion tab\r\nimport { MenuItem } from 'primeng/primeng';\nimport { TrainingService } from './training.service';\nimport { TrainingListFilterModel, TrainingList, TrainingListViewModel } from './training.model';\n\n@Component({\n    selector: 'app-traininglist-component',\n    templateUrl: './traininglist.component.html',\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['../../../../node_modules/primeng/resources/primeng.min.css',\n        \"../../../../node_modules/primeng/resources/themes/omega/theme.css\"],\n    providers: [TrainingService],\n\n\n})\n\nexport class TrainingListComponent implements OnInit {\n    data: TrainingList[];\n    filterModel: TrainingListFilterModel;\n    totalRecords: number = 0;\n    constructor(private _trainingService: TrainingService, private router: Router, private location: Location, private route: ActivatedRoute) { }\n    ngOnInit() {\n        this.filterModel = new TrainingListFilterModel();\n        this.filterModel.PageNo = 1;\n        this.filterModel.PageSize = 10;\n        this.filterModel.SortColumn = \"TrainingNeed\";\n        this.filterModel.SortOrder = \"asc\";\n    }\n    getList() {\r\n        this._trainingService.getTrainingList(this.filterModel).subscribe((res: TrainingListViewModel) => {\r\n            this.data = res.TrainingList;\r\n            this.totalRecords = res.TotalRecords;\r\n        });\r\n    }\n    public redirectToEditPage(event: TrainingList) {\n        this.router.navigate(['/pages/training/' + event.TrainingId]);\n    }\n    public deleteAction(event: TrainingList) {\n        if (confirm(\"Are you sure want to delete this training ?\")) {\n            this._trainingService.deleteTraining(event.TrainingId).subscribe(res => {\n                this.getList();\n            });\n        }\n    }\n    redirectToNewPage() {\n        this.router.navigate(['/pages/training']);\n    }\n\r\n    loadCarsLazy(event: LazyLoadEvent) {\r\n        this.filterModel.PageNo = (event.first / event.rows) + 1;\r\n        this.filterModel.PageSize = event.rows;\r\n        this.filterModel.SortColumn = event.sortField;\r\n        this.filterModel.SortOrder = event.sortOrder == 1 ? \"asc\" : \"desc\";\r\n        this.filterModel.Assignment = event.filters.Assignment == undefined ? '' : event.filters.Assignment.value;\r\n        this.filterModel.TrainingNeed = event.filters.TrainingNeed == undefined ? '' : event.filters.TrainingNeed.value;\r\n        this.filterModel.TrainerRequired = event.filters.TrainerRequired == undefined ? null : (event.filters.TrainerRequired.value == \"Yes\" ? 1 : 0);\r\n        this.filterModel.TrainingType = null;\r\n        if (event.filters.TrainingType != undefined) {\r\n            if (event.filters.TrainingType.value === \"Event\")\r\n                this.filterModel.TrainingType = 1;\r\n            else if (event.filters.TrainingType.value === \"User Specific\")\r\n                this.filterModel.TrainingType = 2;\r\n            //else\r\n            //    this.filterModel.TrainingType = null;\r\n        }\r\n\r\n        this.getList();\r\n\r\n    }\r\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/training/traininglist.component.ts","module.exports = \"<div style=\\\"margin-top:10px;\\\">\\r\\n    <div style=\\\"margin:20px;\\\">\\r\\n        <div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label>Training</label>\\r\\n                <select [(ngModel)]=\\\"trainingId\\\" class=\\\"form-control\\\">\\r\\n                    <option value=\\\"0\\\">--Select--</option>\\r\\n                    <option *ngFor=\\\"let training of trainingList\\\"\\r\\n                            value={{training.TrainingId}}>\\r\\n                        {{training.TrainingNeed}}\\r\\n                    </option>\\r\\n                </select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label>Start Date</label>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"input-group\\\">\\r\\n                        <input class=\\\"form-control validation-field\\\" [(ngModel)]=\\\"startDate\\\" placeholder=\\\"yyyy-mm-dd\\\" ngbDatepicker #d=\\\"ngbDatepicker\\\">\\r\\n                        <div class=\\\"input-group-addon\\\" (click)=\\\"d.toggle()\\\">\\r\\n                            <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label>End Date</label>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"input-group\\\">\\r\\n                        <input class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\" [(ngModel)]=\\\"endDate\\\" ngbDatepicker #d1=\\\"ngbDatepicker\\\">\\r\\n                        <div class=\\\"input-group-addon\\\" (click)=\\\"d1.toggle()\\\">\\r\\n                            <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <input type=\\\"button\\\" class=\\\"btn btn-primary\\\" value=\\\"Filter\\\" (click)=\\\"getTrainingReport()\\\" />\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n    <p-dataTable [value]=\\\"trainingReportData\\\" [rows]=\\\"10\\\" [paginator]=\\\"true\\\" [rowsPerPageOptions]=\\\"[5,10,20,50]\\\"\\r\\n                 #dt resizableColumns=\\\"true\\\" reorderableColumns=\\\"true\\\" [responsive]=\\\"true\\\" [totalRecords]=\\\"totalRecords\\\"\\r\\n                 sortField=\\\"TrainingNeed\\\" [lazy]=\\\"true\\\"  (onLazyLoad)=\\\"loadTrainingReportLazy($event)\\\">\\r\\n        <p-header>\\r\\n        <div class=\\\"ui-helper-clearfix\\\">\\r\\n            <button type=\\\"button\\\" pButton icon=\\\"fa-file-o\\\" iconPos=\\\"left\\\" label=\\\"Download\\\" (click)=\\\"exportCSV()\\\" style=\\\"float:left\\\"></button>\\r\\n        </div>\\r\\n        </p-header>\\r\\n        <!--<p-footer></p-footer>-->\\r\\n        <p-column field=\\\"TrainingNeed\\\" header=\\\"Training\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n        <p-column field=\\\"TraineeName\\\" header=\\\"Trainee\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n        <p-column field=\\\"TrainerName\\\" header=\\\"Trainer\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n        <p-column field=\\\"AttemptDate\\\" header=\\\"Date Attended\\\" [sortable]=\\\"true\\\">\\r\\n            <ng-template let-col let-report=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                <span>{{report.AttemptDate}}</span>\\r\\n            </ng-template>\\r\\n        </p-column>\\r\\n        <p-column field=\\\"Score\\\" header=\\\"Score\\\" [sortable]=\\\"true\\\">\\r\\n            <ng-template let-report=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                <span>{{report.Score != null?  report.Score + '/' + report.TotalScore: ''}}</span>\\r\\n            </ng-template>\\r\\n        </p-column>\\r\\n        <p-column field=\\\"TrainerComment\\\" header=\\\"Trainer Comment\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n        <p-column field=\\\"TraineeComment\\\" header=\\\"Trainee Comment\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n    </p-dataTable>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/training/trainingreport.component.html\n// module id = ../../../../../src/app/pages/training/trainingreport.component.html\n// module chunks = training.module","import { Component, ViewEncapsulation, OnInit } from '@angular/core';\r\nimport { NgbDateStruct} from '@ng-bootstrap/ng-bootstrap';\r\nimport { TrainingService } from './training.service';\r\nimport { LazyLoadEvent, FilterMetadata } from 'primeng/components/common/api';\r\nimport * as FileSaver from 'file-saver';\r\nimport { TrainingReportViewModel, TrainingNeedListViewModel, TrainingReportFilterModel, ReportViewModel } from './training.model';\r\n\r\n@Component({\r\n    selector: 'app-trainingreport-component',\r\n    templateUrl: './trainingreport.component.html',\r\n    encapsulation: ViewEncapsulation.None,\r\n    styleUrls: ['../../../../node_modules/primeng/resources/primeng.min.css',\r\n        \"../../../../node_modules/primeng/resources/themes/omega/theme.css\",\r\n        '../form-elements/controls/file-uploader/file-uploader.component.scss',\r\n        './training.component.css'\r\n    ],\r\n    providers: [TrainingService]\r\n})\r\n\r\nexport class TrainingReportComponent implements OnInit {\r\n    trainingReportData: TrainingReportViewModel[] = [];\r\n    totalRecords: number;\r\n    trainingList: TrainingNeedListViewModel[]= [];\r\n    trainingId: number = 0;\r\n    startDate: NgbDateStruct= null;\r\n    endDate: NgbDateStruct= null;\r\n    filterModel: TrainingReportFilterModel;\r\n\r\n    constructor(private _trainingService: TrainingService, ) { }\r\n\r\n    ngOnInit() {\r\n        this.filterModel = new TrainingReportFilterModel();\n        this.filterModel.PageNo = 1;\n        this.filterModel.PageSize = 10;\n        this.filterModel.SortColumn = \"TrainingNeed\";\n        this.filterModel.SortOrder = \"asc\";\r\n        this.getTrainingNeedList();\r\n        this.getTrainingReport();\r\n    }\r\n\r\n    getTrainingNeedList() {\r\n        this._trainingService.GetTrainingNeedList().subscribe((res: TrainingNeedListViewModel[]) => {\r\n            this.trainingList = res;\r\n        });\r\n    }\r\n\r\n    getTrainingReport() {\r\n        this.filterModel.TrainingId = this.trainingId == 0 ? null : this.trainingId;\r\n        this.filterModel.StartDate = this.startDate == null ? \"\" : (new Date(this.startDate.year, this.startDate.month - 1, this.startDate.day)).toLocaleDateString();\r\n        this.filterModel.EndDate = this.endDate == null ? \"\" : (new Date(this.endDate.year, this.endDate.month - 1, this.endDate.day)).toLocaleDateString();\r\n        this._trainingService.GetTrainingReport(this.filterModel).subscribe((res: ReportViewModel<TrainingReportViewModel>) => {\r\n            this.trainingReportData = res.ReportModel;\r\n            this.totalRecords = res.TotalRecords;\r\n        });\r\n    };\r\n\r\n    loadTrainingReportLazy(event: LazyLoadEvent) {\r\n        this.filterModel.PageNo = (event.first / event.rows) + 1;\r\n        this.filterModel.PageSize = event.rows;\r\n        this.filterModel.SortColumn = event.sortField;\r\n        this.filterModel.SortOrder = event.sortOrder == 1 ? \"asc\" : \"desc\";        \r\n        \r\n        this.getTrainingReport();\r\n    }\r\n\r\n    exportCSV() {\r\n        let downloadFilterModel = this.filterModel;\r\n        downloadFilterModel.PageSize = this.totalRecords;\r\n        this._trainingService.DownloadTrainingReport(downloadFilterModel).subscribe(res => {\r\n            FileSaver.saveAs(res, \"TrainingReport_\" + (new Date()).toLocaleDateString() + \".csv\");\r\n        });\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/training/trainingreport.component.ts","module.exports = \"<div style=\\\"margin-top:10px;\\\">\\r\\n    <div style=\\\"margin:20px;\\\">\\r\\n        <div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label>Trainee</label>\\r\\n                <select [(ngModel)]=\\\"userId\\\" class=\\\"form-control\\\">\\r\\n                    <option value=\\\"0\\\">--Select--</option>\\r\\n                    <option *ngFor=\\\"let user of userList\\\"\\r\\n                            value={{user.UserId}}>\\r\\n                        {{user.UserName}}\\r\\n                    </option>\\r\\n                </select>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <input type=\\\"button\\\" class=\\\"btn btn-primary\\\" value=\\\"Filter\\\" (click)=\\\"getUserReport()\\\" />\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n            <p-dataTable [value]=\\\"trainingUserReportData\\\" [rows]=\\\"10\\\" [paginator]=\\\"true\\\" [rowsPerPageOptions]=\\\"[5,10,20,50]\\\"\\r\\n                         #dt resizableColumns=\\\"true\\\" reorderableColumns=\\\"true\\\" [responsive]=\\\"true\\\" [totalRecords]=\\\"totalRecords\\\"\\r\\n                         sortField=\\\"TrainingNeed\\\" [lazy]=\\\"true\\\"  (onLazyLoad)=\\\"loadTrainingUserReportLazy($event)\\\">\\r\\n                <p-header>\\r\\n                    <div class=\\\"ui-helper-clearfix\\\">\\r\\n                        <button type=\\\"button\\\" pButton icon=\\\"fa-file-o\\\" iconPos=\\\"left\\\" label=\\\"Download\\\" (click)=\\\"exportCSV()\\\" style=\\\"float:left\\\"></button>\\r\\n                    </div>\\r\\n                </p-header>\\r\\n                <!--<p-footer></p-footer>-->\\r\\n                <p-column field=\\\"TrainingNeed\\\" header=\\\"Training\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n                <p-column field=\\\"TraineeName\\\" header=\\\"Trainee\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n                <p-column field=\\\"TrainerName\\\" header=\\\"Trainer\\\" [sortable]=\\\"true\\\"></p-column>                \\r\\n                <p-column field=\\\"StartDate\\\" header=\\\"Attempt Date\\\" [sortable]=\\\"true\\\">\\r\\n                    <ng-template let-col let-report=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                        <span>{{report.StartDate}}</span>\\r\\n                    </ng-template>\\r\\n                </p-column>\\r\\n                <p-column field=\\\"IsUserAttendedTraining\\\" header=\\\"Attended\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n                <p-column field=\\\"Score\\\" header=\\\"Score\\\" [sortable]=\\\"true\\\">\\r\\n                    <ng-template let-report=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                        <span>{{report.Score != null?  report.Score + '/' + report.TotalScore: ''}}</span>\\r\\n                    </ng-template>\\r\\n                </p-column>\\r\\n                <p-column field=\\\"TrainerComment\\\" header=\\\"Trainer Comment\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n</p-dataTable>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/training/userreport.component.html\n// module id = ../../../../../src/app/pages/training/userreport.component.html\n// module chunks = training.module","import { Component, ViewEncapsulation, OnInit } from '@angular/core';\r\nimport { NgbDateStruct} from '@ng-bootstrap/ng-bootstrap';\r\nimport { TrainingService } from './training.service';\r\nimport { LazyLoadEvent, FilterMetadata } from 'primeng/components/common/api';\r\nimport * as FileSaver from 'file-saver';\r\nimport { TrainingUserReportViewModel, UserListViewModel, TrainingUserReportFilterModel, ReportViewModel } from './training.model';\r\n\r\n@Component({\r\n    selector: 'app-userreport-component',\r\n    templateUrl: './userreport.component.html',\r\n    encapsulation: ViewEncapsulation.None,\r\n    styleUrls: ['../../../../node_modules/primeng/resources/primeng.min.css',\r\n        \"../../../../node_modules/primeng/resources/themes/omega/theme.css\",\r\n        '../form-elements/controls/file-uploader/file-uploader.component.scss',\r\n        './training.component.css'\r\n    ],\r\n    providers: [TrainingService]\r\n})\r\n\r\nexport class UserReportComponent implements OnInit {\r\n    trainingUserReportData: TrainingUserReportViewModel[] = [];\r\n    totalRecords: number;\r\n    userList: UserListViewModel[]= [];\r\n    userId: number = 0;\r\n    filterModel: TrainingUserReportFilterModel;\r\n\r\n    constructor(private _trainingService: TrainingService, ) { }\r\n\r\n    ngOnInit() {\r\n        this.filterModel = new TrainingUserReportFilterModel();\n        this.filterModel.PageNo = 1;\n        this.filterModel.PageSize = 10;\n        this.filterModel.SortColumn = \"TrainingNeed\";\n        this.filterModel.SortOrder = \"asc\";\r\n        this.getUserList();\r\n        this.getUserReport();\r\n    }\r\n\r\n    getUserList() {\r\n        this._trainingService.getUserList().subscribe((res: UserListViewModel[]) => {\r\n            this.userList = res;\r\n        });\r\n    }\r\n\r\n    getUserReport() {\r\n        this.filterModel.UserId = this.userId == 0 ? null : this.userId;\r\n        this._trainingService.GetUserReport(this.filterModel).subscribe((res: ReportViewModel<TrainingUserReportViewModel>) => {\r\n            this.trainingUserReportData = res.ReportModel;\r\n            this.totalRecords = res.TotalRecords;\r\n        });\r\n    };\r\n\r\n    loadTrainingUserReportLazy(event: LazyLoadEvent) {\r\n        this.filterModel.PageNo = (event.first / event.rows) + 1;\r\n        this.filterModel.PageSize = event.rows;\r\n        this.filterModel.SortColumn = event.sortField;\r\n        this.filterModel.SortOrder = event.sortOrder == 1 ? \"asc\" : \"desc\";\r\n\r\n        this.getUserReport();\r\n    }\r\n\r\n    exportCSV() {\r\n        let downloadFilterModel = this.filterModel;\r\n        downloadFilterModel.PageSize = this.totalRecords;\r\n        this._trainingService.DownloadUserReport(downloadFilterModel).subscribe(res => {\r\n            FileSaver.saveAs(res, \"TrineeReport_\" + (new Date()).toLocaleDateString() + \".csv\");\r\n        });\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/training/userreport.component.ts"],"sourceRoot":"webpack:///"}