{"version":3,"sources":["C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/user/user.changepassword.component.html","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/user/user.changepassword.component.ts","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/user/user.component.html","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/user/user.component.ts","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/user/user.module.ts","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/user/userlist.component.html","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/user/userlist.component.ts"],"names":[],"mappings":"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","file":"user.module.chunk.js","sourcesContent":["module.exports = \"<form [formGroup]=\\\"form\\\" novalidate (ngSubmit)=\\\"onSubmit(form.value)\\\" class=\\\"text-left mt-4\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <label>Old Password </label>\\r\\n        <input formControlName=\\\"OldPassword\\\" class=\\\"form-control validation-field\\\" placeholder=\\\"Old  Password\\\" type=\\\"password\\\">\\r\\n        <small *ngIf=\\\"!form.controls.OldPassword.valid\\\" class=\\\"text-danger\\\">\\r\\n            Old Password is required.\\r\\n        </small>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <label>New Password </label>\\r\\n        <input formControlName=\\\"Password\\\" class=\\\"form-control validation-field\\\" placeholder=\\\"Password\\\" type=\\\"password\\\">\\r\\n        <small *ngIf=\\\"!form.controls.Password.valid\\\" class=\\\"text-danger\\\">\\r\\n            Password is required and minimum 8 characters.\\r\\n        </small>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <label>Confirm Password </label>\\r\\n        <input formControlName=\\\"ConfirmPassword\\\" class=\\\"form-control validation-field\\\" placeholder=\\\"Confirm Password\\\" type=\\\"password\\\">\\r\\n        <small *ngIf=\\\"!form.controls.ConfirmPassword.valid\\\" class=\\\"text-danger\\\">\\r\\n            Confirm Password is required and minimum 8 characters.\\r\\n        </small>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button [disabled]=\\\"!form.valid\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Set Password</button>\\r\\n    </div>\\r\\n</form>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/user/user.changepassword.component.html\n// module id = ../../../../../src/app/pages/user/user.changepassword.component.html\n// module chunks = user.module","\r\nimport { Component, ViewEncapsulation, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormControl, AbstractControl, FormBuilder, Validators, ReactiveFormsModule, ValidatorFn } from '@angular/forms';\nimport { CustomValidators } from 'ng2-validation';\nimport { LoginService } from \"../login/login.service\";\nimport { ResetPassswordModel } from '../login/login.model';\nimport { UserService } from \"../user/user.service\";\nimport { UserViewModel, RoleViewModel, SecurityQuestionModel, OrgaizationViewModel } from '../user/user.model';\r\n\r\n@Component({\n    selector: 'app-resetuserpassword',\n    templateUrl: './user.changepassword.component.html',\n    //styleUrls: ['./login.component.scss'],\n    providers: [LoginService, UserService],\n    encapsulation: ViewEncapsulation.None\n})\r\n\r\nexport class UserChangePasword implements OnInit {\r\n    public router: Router;\n    public form: FormGroup;\r\n    ngOnInit() {\r\n    }\r\n    constructor(private _UserService: UserService, router: Router, private fb: FormBuilder, private _loginService: LoginService) {\n        this.router = router;\n        this.form = this.fb.group({\n            Password: new FormControl('', [Validators.required, Validators.minLength(8)]),\n            ConfirmPassword: new FormControl('', [Validators.required, Validators.minLength(8), this.validateConfirmPassword.bind(this)]),\n            OldPassword: new FormControl('', [Validators.required, Validators.minLength(8), this.validatePassword.bind(this)])\n        });\n\n    }\r\n    validateConfirmPassword(control: AbstractControl): { [key: string]: any } {\n        let result: boolean = null;\r\n        if (control != undefined) {\r\n            if (control.value == null || control.value == \"\")\r\n                result = true;\r\n            if (this.form != undefined && this.form.controls[\"Password\"].value != this.form.controls[\"ConfirmPassword\"].value) {\r\n                result = true;\r\n                this.form.controls[\"Password\"].updateValueAndValidity();\r\n            }\r\n\r\n\r\n        }\r\n        return result ? { 'password': { value: \"Invalid\" } } : null;\r\n    }\r\n    public onSubmit(values: Object): void {\n        if (this.form.valid) {\n            this._UserService.changePassword(this.form.value).subscribe((res: string) => {\n                if (res == \"done\")\n                    alert(\"password changed successfully\");\n            });\n        }\n    }\r\n\r\n    validatePassword(control: AbstractControl): { [key: string]: any } {\n        let result: boolean = null;\r\n        if (control.value == null || control.value == \"\")\r\n            result = true;\r\n        else if (control.value != \"\") {\r\n            this._UserService.verifyPassword(control.value).subscribe((res: boolean) => {\r\n                if (res == false) {\r\n                    result = true;\r\n                    this.form.controls[\"OldPassword\"].setErrors({ remote: \"Password doesn't match with old password.\" });\r\n                }\r\n            });\r\n        }\r\n        else\r\n            result = null;\r\n        return result ? { 'userName': { value: control.value } } : null;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/user/user.changepassword.component.ts","module.exports = \"<div class=\\\"modal-body\\\">\\r\\n    <form [formGroup]=\\\"myForm\\\" novalidate (ngSubmit)=\\\"saveeventformdata(myForm.value)\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label>User Name</label>\\r\\n            <input type=\\\"text\\\" formControlName=\\\"UserName\\\" class=\\\"form-control\\\">\\r\\n            <small *ngIf=\\\"!myForm.controls.UserName.valid\\\" class=\\\"text-danger\\\">\\r\\n                User Name is required and must be unique.\\r\\n            </small>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label>First Name</label>\\r\\n            <input type=\\\"text\\\" formControlName=\\\"FirstName\\\" class=\\\"form-control\\\">\\r\\n            <small *ngIf=\\\"!myForm.controls.FirstName.valid\\\" class=\\\"text-danger\\\">\\r\\n                First Name is required .\\r\\n            </small>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label>Last Name</label>\\r\\n            <input type=\\\"text\\\" formControlName=\\\"LastName\\\" class=\\\"form-control\\\">\\r\\n            <small *ngIf=\\\"!myForm.controls.LastName.valid\\\" class=\\\"text-danger\\\">\\r\\n                Last Name is required .\\r\\n            </small>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label>Email</label>\\r\\n            <input type=\\\"text\\\" formControlName=\\\"EmailID\\\" class=\\\"form-control\\\">\\r\\n            <small *ngIf=\\\"!myForm.controls.EmailID.valid\\\" class=\\\"text-danger\\\">\\r\\n                Email is required and must be unique.\\r\\n            </small>\\r\\n        </div>\\r\\n        <div style=\\\"display:none;\\\" class=\\\"form-group\\\">\\r\\n            <label>Organization</label>\\r\\n            <select formControlName=\\\"OrganizationID\\\" class=\\\"form-control\\\">\\r\\n                <option value=\\\"\\\">--Select--</option>\\r\\n                <option *ngFor=\\\"let subtitle of organizationList \\\"\\r\\n                        value={{subtitle.OrganizationID}}>\\r\\n                    {{subtitle.OrganizationName}}\\r\\n                </option>\\r\\n            </select>\\r\\n            <!--display error message if name is not valid-->\\r\\n            <small *ngIf=\\\"!myForm.controls.OrganizationID.valid\\\" class=\\\"text-danger\\\">\\r\\n                Organization is required .\\r\\n            </small>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label>Role</label>\\r\\n            <ss-multiselect-dropdown [options]=\\\"multiroleList\\\" \\r\\n                                     [texts]=\\\"responsiblePersonTexts\\\" \\r\\n                                     [settings]=\\\"responsiblePersonSettings\\\" \\r\\n                                     formControlName=\\\"RoleList\\\">\\r\\n\\r\\n            </ss-multiselect-dropdown>\\r\\n            <!--display error message if name is not valid-->\\r\\n            <small *ngIf=\\\"!myForm.controls.RoleList.valid\\\" class=\\\"text-danger\\\">\\r\\n                Role is required .\\r\\n            </small>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label>Security Question 1</label>\\r\\n            <select formControlName=\\\"SecurityQuestion1\\\" class=\\\"form-control\\\" (change)=\\\"SecurityQuestion1Changesd($event.target.value)\\\">\\r\\n                <option value=\\\"\\\">--Select--</option>\\r\\n                <option *ngFor=\\\"let subtitle of securityQuestionList1 \\\"\\r\\n                        value={{subtitle.SecurityQuestionID}}>\\r\\n                    {{subtitle.Question}}\\r\\n                </option>\\r\\n            </select>\\r\\n            <!--display error message if name is not valid-->\\r\\n            <small *ngIf=\\\"!myForm.controls.SecurityQuestion1.valid\\\" class=\\\"text-danger\\\">\\r\\n                Security Question 1 is required .\\r\\n            </small>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label>Security Answer 1</label>\\r\\n            <input type=\\\"text\\\" formControlName=\\\"SecurityAnswer1\\\" class=\\\"form-control\\\">\\r\\n            <small *ngIf=\\\"!myForm.controls.SecurityAnswer1.valid\\\" class=\\\"text-danger\\\">\\r\\n                Security Answer 1 is required.\\r\\n            </small>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label>Security Question 2</label>\\r\\n            <select formControlName=\\\"SecurityQuestion2\\\" class=\\\"form-control\\\" (change)=\\\"SecurityQuestion2Changesd($event.target.value)\\\">\\r\\n                <option value=\\\"\\\">--Select--</option>\\r\\n                <option *ngFor=\\\"let subtitle of securityQuestionList2 \\\"\\r\\n                        value={{subtitle.SecurityQuestionID}}>\\r\\n                    {{subtitle.Question}}\\r\\n                </option>\\r\\n            </select>\\r\\n            <!--display error message if name is not valid-->\\r\\n            <small *ngIf=\\\"!myForm.controls.SecurityQuestion2.valid\\\" class=\\\"text-danger\\\">\\r\\n                Security Question 2 is required .\\r\\n            </small>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label>Security Answer 2</label>\\r\\n            <input type=\\\"text\\\" formControlName=\\\"SecurityAnswer2\\\" class=\\\"form-control\\\">\\r\\n            <small *ngIf=\\\"!myForm.controls.SecurityAnswer2.valid\\\" class=\\\"text-danger\\\">\\r\\n                Security Answer 2 is required.\\r\\n            </small>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!myForm.valid\\\">Save</button>\\r\\n        </div>\\r\\n    </form>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/user/user.component.html\n// module id = ../../../../../src/app/pages/user/user.component.html\n// module chunks = user.module","\nimport { Component, ViewEncapsulation, ViewChild, TemplateRef, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Validators, FormGroup, FormArray, FormBuilder, FormControl, AbstractControl, ReactiveFormsModule, ValidatorFn } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { EventActionService } from '../eventactions/eventaction.service';\nimport { Location } from '@angular/common';\nimport { IMultiSelectOption, IMultiSelectSettings, IMultiSelectTexts } from 'angular-2-dropdown-multiselect';\nimport { Observable } from 'rxjs/Observable';\nimport { Http, URLSearchParams } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport { MasterEventDataService } from '../calendar/Mastereventdata';\nimport { NgbModal, NgbDateStruct, NgbTimeStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { MeetingDataService } from '../meeting/meeting.service';\nimport { CalendarModule } from 'primeng/primeng';\nimport { UserService } from \"../user/user.service\";\nimport { UserViewModel, RoleViewModel, SecurityQuestionModel, OrgaizationViewModel } from '../user/user.model';\n@Component({\n    selector: 'app-meeting',\n    templateUrl: './user.component.html',\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['../../../../node_modules/primeng/resources/primeng.min.css',\n        \"../../../../node_modules/primeng/resources/themes/omega/theme.css\"\n    ],\n    providers: [EventActionService, MasterEventDataService, MeetingDataService, UserService],\n\n\n})\n\nexport class UserComponent implements OnInit {\n\r\n\n    roleList: RoleViewModel[];\n    securityQuestionList: SecurityQuestionModel[];\n    securityQuestionList1: SecurityQuestionModel[];\n    securityQuestionList2: SecurityQuestionModel[];\n    organizationList: OrgaizationViewModel[];\n    userId: number;\n    orgid: number = 0;\n    public multiroleList: IMultiSelectOption[] = [];\n    public myForm: FormGroup; // our form model\n    constructor(private _UserService: UserService, private _meetingService: MeetingDataService, private router: Router, private location: Location, private _fb: FormBuilder, private _dataService: EventActionService, private route: ActivatedRoute, private _masterDataService: MasterEventDataService) {\n\n    }\n    ngOnInit() {\n        this.route.params.subscribe(params => {\r\n            this.userId = params['id'] as number; //log the value of id\r\n            this.orgid = params['orgid'] as number; //log the value of organization id\r\n        });\n        this._UserService.getMultiSelectRoleList(this.orgid).subscribe((res) => {\n            this.multiroleList = res;\n         });\n        this._UserService.getSecurityQuestionList().subscribe((res: SecurityQuestionModel[]) => {\n            this.securityQuestionList = res;\n            this.securityQuestionList1 = res;\n            this.securityQuestionList2 = res;\n        });\n        this._UserService.getOrganizationList().subscribe((res: OrgaizationViewModel[]) => {\n            this.organizationList = res;\n        });\n        let userModel = new UserViewModel();\n        userModel.OrganizationID = 1;\n        this.addhtmltoform(userModel);\n        if (this.userId > 0) {\n            this._UserService.getSingleUser(this.userId).subscribe((res: UserViewModel) => {\n                this.addhtmltoform(res);\n            });\n        }\n    }\n\n    addhtmltoform(model: UserViewModel) {\n        this.myForm = this._fb.group({\n            UserID: [model.UserID],\n            UserName: new FormControl(model.UserName, [Validators.required, this.validateDistinctUserName.bind(this)]),\n            FirstName: [model.FirstName, Validators.required],\n            LastName: [model.LastName, Validators.required],\n            EmailID: new FormControl(model.EmailID, [Validators.required, Validators.email, this.validateDistinctEmail.bind(this)]),\n            OrganizationID: [model.OrganizationID, Validators.required],\n            RoleID: [1],\n            RoleList: [model.RoleList, Validators.required],\n            SecurityQuestion1: [model.SecurityQuestion1],\n            SecurityAnswer2: [model.SecurityAnswer2],\n            SecurityAnswer1: [model.SecurityAnswer1],\n            SecurityQuestion2: [model.SecurityQuestion2],\n            OverRideOrganizationId: [false]\n        });\n    }\n\n    validateDistinctEmail(control: AbstractControl): { [key: string]: any } {\n        let result: boolean = null;\r\n        if (control.value == null || control.value == \"\")\r\n            result = true;\r\n        else if (control.value != \"\") {\r\n            this._UserService.validateUserEmail(control.value, this.myForm.controls[\"UserID\"].value).subscribe((res: boolean) => {\r\n                if (res == false) {\r\n                    result = true;\r\n                    this.myForm.controls[\"EmailID\"].setErrors({ remote: \"Email already exists.\" });\r\n                }\r\n            });\r\n        }\r\n        else\r\n            result = null;\r\n        return result ? { 'email': { value: control.value } } : null;\r\n    }\n\n    validateDistinctUserName(control: AbstractControl): { [key: string]: any } {\n        let result: boolean = null;\r\n        if (control.value == null || control.value == \"\")\r\n            result = true;\r\n        else if (control.value != \"\") {\r\n            this._UserService.validateUserName(control.value, this.myForm.controls[\"UserID\"].value).subscribe((res: boolean) => {\r\n                if (res == false) {\r\n                    result = true;\r\n                    this.myForm.controls[\"UserName\"].setErrors({ remote: \"UserName already exists.\" });\r\n                }\r\n            });\r\n        }\r\n        else\r\n            result = null;\r\n        return result ? { 'userName': { value: control.value } } : null;\r\n    }\n    saveeventformdata(data: UserViewModel) {\n        if (this.orgid > 0) {\n            data.OverRideOrganizationId = true;\n            data.OrganizationID = this.orgid;\n        }\n        this._UserService.saveUser(data).subscribe(res => {\n            this.router.navigate(['/pages/user/list']);\n        });\n    }\n    SecurityQuestion1Changesd(questionId: number) {\n        this.securityQuestionList2 = this.securityQuestionList;\n        this.securityQuestionList2 = this.securityQuestionList2.filter(x => x.SecurityQuestionID != questionId);\n\n    }\n    SecurityQuestion2Changesd(questionId: number) {\n        this.securityQuestionList1 = this.securityQuestionList;\n        this.securityQuestionList1 = this.securityQuestionList1.filter(x => x.SecurityQuestionID != questionId);\n    }\n    public responsiblePersonTexts: IMultiSelectTexts = {\n        checkAll: 'Select all',\n        uncheckAll: 'Unselect all',\n        checked: 'item selected',\n        checkedPlural: 'items selected',\n        searchPlaceholder: 'Find...',\n        defaultTitle: 'Select',\n        allSelected: 'All selected',\n    };\n    public responsiblePersonSettings: IMultiSelectSettings = {\n        enableSearch: true,\n        checkedStyle: 'fontawesome',\n        buttonClasses: 'btn btn-secondary btn-block',\n        dynamicTitleMaxItems: 3,\n        displayAllSelectedText: true,\n        maxHeight: '300px'\n    };\n}\n\n\n\n\n// WEBPACK FOOTER //\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/user/user.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DirectivesModule } from '../../theme/directives/directives.module';\nimport { UserListComponent } from './userlist.component';\nimport { UserComponent } from './user.component';\nimport { MultiselectDropdownModule } from 'angular-2-dropdown-multiselect';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { UserChangePasword } from '../user/user.changepassword.component';\nimport { ChartModule, CalendarModule, SharedModule, DataTableModule, MultiSelectModule, SelectItem, CheckboxModule } from 'primeng/primeng';\n\nexport const routes = [\n    { path: '', component: UserComponent, pathMatch: 'full' },\n    { path: 'list', component: UserListComponent, data: { breadcrumb: 'User List' } },\n    { path: 'user', component: UserComponent, data: { breadcrumb: 'User' } },\n    { path: 'changepassword', component: UserChangePasword, data: { breadcrumb: 'Change Password' } },\n    { path: ':id/:orgid', component: UserComponent, data: { breadcrumb: 'Edit' } },\n    { path: ':id', component: UserComponent, data: { breadcrumb: 'Edit' } },\n]\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        DirectivesModule,\n        MultiselectDropdownModule,\n        NgbModule.forRoot(),\n        CalendarModule,\r\n        SharedModule,\n        DataTableModule,\n        MultiSelectModule,\n        CheckboxModule,\n        RouterModule.forChild(routes)\n    ],\n    declarations: [\n        UserListComponent,\n        UserComponent,\n        UserChangePasword\n    ]\n})\nexport class UserModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/user/user.module.ts","module.exports = \"<p-dataTable [value]=\\\"data\\\" [lazy]=\\\"true\\\" [rows]=\\\"10\\\" [paginator]=\\\"true\\\" [rowsPerPageOptions]=\\\"[5,10,20,50]\\\"\\r\\n             #dt resizableColumns=\\\"true\\\" reorderableColumns=\\\"true\\\" [responsive]=\\\"true\\\" [totalRecords]=\\\"totalRecords\\\" (onLazyLoad)=\\\"loadCarsLazy($event)\\\">\\r\\n    <!--<p-footer></p-footer>-->\\r\\n    <p-column field=\\\"UserName\\\" header=\\\"User Name\\\" [filter]=\\\"true\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n    <p-column field=\\\"FirstName\\\" header=\\\"First Name\\\" [filter]=\\\"true\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n    <p-column field=\\\"LastName\\\" header=\\\"Last Name\\\" [filter]=\\\"true\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n    <p-column field=\\\"EmailID\\\" header=\\\"Email\\\" [filter]=\\\"true\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n    <p-column field=\\\"InActiveText\\\" [filter]=\\\"true\\\" header=\\\"Active\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n    <p-column field=\\\"RoleName\\\" header=\\\"Role\\\" [filter]=\\\"false\\\" [sortable]=\\\"false\\\"></p-column>\\r\\n    <p-column styleClass=\\\"col-button\\\">\\r\\n        <ng-template pTemplate=\\\"header\\\">\\r\\n            <div class=\\\"ui-helper-clearfix\\\" style=\\\"width:100%\\\">\\r\\n                <button type=\\\"button\\\" pButton icon=\\\"fa-plus\\\"  (click)=\\\"redirectToNewPage()\\\" label=\\\"Add\\\"></button>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n        <ng-template let-meeting=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n            <button type=\\\"button\\\" title=\\\"Edit\\\" pButton (click)=\\\"redirectToEditPage(meeting)\\\" icon=\\\"fa fa-pencil-square-o\\\"></button>\\r\\n            <button type=\\\"button\\\" title=\\\"Cancel\\\" pButton (click)=\\\"deleteAction(meeting)\\\" icon=\\\"fa fa-trash-o\\\"></button>\\r\\n            <button type=\\\"button\\\" [hidden]=\\\"!isAdminUser\\\" title=\\\"Reset Password\\\" pButton (click)=\\\"resetPassword(meeting)\\\" icon=\\\"fa fa-key\\\"></button>\\r\\n            <button type=\\\"button\\\" [hidden]=\\\"!isAdminUser\\\" title=\\\"Inactive\\\" pButton (click)=\\\"inactiveUser(meeting)\\\" icon=\\\"fa fa-ban\\\"></button>\\r\\n        </ng-template>\\r\\n\\r\\n    </p-column>\\r\\n</p-dataTable>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/user/userlist.component.html\n// module id = ../../../../../src/app/pages/user/userlist.component.html\n// module chunks = user.module","\nimport { Component, ViewEncapsulation, ViewChild, TemplateRef, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Validators, FormGroup, FormArray, FormBuilder } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { EventActionService } from '../eventactions/eventaction.service';\nimport { Location } from '@angular/common';\nimport { IMultiSelectOption, IMultiSelectSettings, IMultiSelectTexts } from 'angular-2-dropdown-multiselect';\nimport { Observable } from 'rxjs/Observable';\nimport { Http, URLSearchParams } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport { LocationModel, TitleModel, SubTitleModel, Title, SubTitle, Action, EventActionStatusModel, events, EventFilterModel, EventViewModel, EventDataModel, EventFilterViewModel, EventAttendeeDataModel, ActionDataModel, ActionResponsiblePersonDataModel, AgendaDataModel } from '../calendar/formeventdata';\nimport { CategoryModel, ActionSourceModel, ActionCommentsListModel } from '../eventactions/eventaction.model';\nimport { MasterEventDataService } from '../calendar/Mastereventdata';\nimport { LazyLoadEvent, FilterMetadata } from 'primeng/components/common/api';\r\nimport { UserViewModel, RoleViewModel, SecurityQuestionModel, OrgaizationViewModel, UserViewListModel, UserViewList } from '../user/user.model';\r\nimport { AccordionModule, MultiSelectModule, SelectItem, CheckboxModule } from 'primeng/primeng';     //accordion and accordion tab\r\nimport { MenuItem } from 'primeng/primeng';\nimport { UserService } from \"../user/user.service\";\n@Component({\n    selector: 'app-meetinglist',\n    templateUrl: './userlist.component.html',\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['../../../../node_modules/primeng/resources/primeng.min.css',\n        \"../../../../node_modules/primeng/resources/themes/omega/theme.css\"],\n    providers: [EventActionService, MasterEventDataService, UserService],\n\n\n})\n\nexport class UserListComponent implements OnInit {\n    data: UserViewListModel[];\n    isAdminUser: boolean = (sessionStorage[\"RoleId\"] as number[]).indexOf(1) > - 1 ? true : false;\n    totalRecords: number = 0;\n    pageNumber: number = 1;\n    sortColumn: string = \"UserName\";\n    sortOrder: string = \"asc\";\n    pageSize: number = 10;\n    organizationFilter: string = '';\n    roleFilter: string = '';\n    userNameFilter: string;\n    firstNameFilter: string;\n    lastNameFilter: string;\n    emailIdFilter: string;\n    inactiveFilter: boolean;\n    constructor(private _UserService: UserService, private router: Router, private location: Location, private _fb: FormBuilder, private _dataService: EventActionService, private route: ActivatedRoute, private _masterDataService: MasterEventDataService) { }\n    ngOnInit() {\n\n\n    }\n    loadCarsLazy(event: LazyLoadEvent) {\r\n        //in a real application, make a remote request to load data using state metadata from event\r\n        //event.first = First row offset\r\n        //event.rows = Number of rows per page\r\n        //event.sortField = Field name to sort with\r\n        //event.sortOrder = Sort order as number, 1 for asc and -1 for dec\r\n        //filters: FilterMetadata object having field as key and filter value, filter matchMode as value\r\n\r\n        //imitate db connection over a network\r\n        this.pageNumber = (event.first / event.rows) + 1;\r\n        this.pageSize = event.rows;\r\n        this.sortColumn = event.sortField;\r\n        this.sortOrder = event.sortOrder == 1 ? \"asc\" : \"desc\";\r\n        this.organizationFilter = event.filters.OrganizationName == undefined ? '' : event.filters.OrganizationName.value;\r\n        this.roleFilter = event.filters.RoleName == undefined ? '' : event.filters.RoleName.value;\r\n        this.userNameFilter = event.filters.UserName == undefined ? '' : event.filters.UserName.value;\r\n        this.firstNameFilter = event.filters.FirstName == undefined ? '' : event.filters.FirstName.value;\r\n        this.lastNameFilter = event.filters.LastName == undefined ? '' : event.filters.LastName.value;\r\n        this.emailIdFilter = event.filters.EmailID == undefined ? '' : event.filters.EmailID.value;\r\n        if (event.filters.InActiveText != undefined) {\r\n            if (event.filters.InActiveText.value.toLocaleLowerCase() == \"yes\")\r\n                this.inactiveFilter = true;\r\n            else\r\n                this.inactiveFilter = false;\r\n        }\r\n        else\r\n            this.inactiveFilter = null;\r\n        this.getList(this.pageNumber, this.pageSize, this.sortColumn, this.sortOrder, this.organizationFilter, this.roleFilter\r\n            , this.userNameFilter, this.firstNameFilter, this.lastNameFilter, this.emailIdFilter, this.inactiveFilter);\r\n\r\n    }\n\n    getList(pageNo: number, pageSize: number, sortColumn: string, sortOrder: string,\r\n        organizationFilter: string, roleFilter: string, userName: string, firstName: string, lastName: string,\r\n        emailId: string, inactiveFilter: boolean) {\r\n        this._UserService.getAllUser(pageNo, pageSize, sortColumn, sortOrder, organizationFilter, roleFilter,\r\n            userName, firstName, lastName, emailId, inactiveFilter)\r\n            .subscribe((res: UserViewList) => {\r\n                this.totalRecords = res.TotalRecords;\r\n                this.data = res.UserViewListModel\r\n            });\r\n    }\r\n\r\n    public redirectToEditPage(event: UserViewListModel) {\n        this.router.navigate(['/pages/user/' + event.UserID]);\n    }\n    public deleteAction(event: UserViewListModel) {\n        if (confirm(\"Are you sure want to delete this user ?\")) {\n            this._UserService.deleteUser(event.UserID).subscribe(res => {\n                this.getList(this.pageNumber, this.pageSize, this.sortColumn, this.sortOrder, this.organizationFilter, this.roleFilter, this.userNameFilter, this.firstNameFilter, this.lastNameFilter, this.emailIdFilter, this.inactiveFilter);\n            });\n        }\n    }\n    redirectToNewPage() {\n        this.router.navigate(['/pages/user']);\n    }\n    public resetPassword(event: UserViewListModel) {\n        if (confirm(\"Are you sure want to reset password for this user ?\")) {\n            this._UserService.resetPassword(event.UserID).subscribe();\n        }\n    }\n    public inactiveUser(event: UserViewListModel) {\n        if (confirm(\"Are you sure want to change status of this user ?\")) {\n            this._UserService.inactiveUser(event.UserID, !event.InActive).subscribe(res => { this.getList(this.pageNumber, this.pageSize, this.sortColumn, this.sortOrder, this.organizationFilter, this.roleFilter, this.userNameFilter, this.firstNameFilter, this.lastNameFilter, this.emailIdFilter, this.inactiveFilter) });\n        }\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/user/userlist.component.ts"],"sourceRoot":"webpack:///"}