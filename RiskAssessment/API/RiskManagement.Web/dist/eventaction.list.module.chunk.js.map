{"version":3,"sources":["C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/eventactions/eventaction.component.html","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/eventactions/eventaction.component.ts","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/eventactions/eventaction.list.component.html","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/eventactions/eventaction.list.component.ts","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/eventactions/eventaction.list.module.ts"],"names":[],"mappings":"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","file":"eventaction.list.module.chunk.js","sourcesContent":["module.exports = \"<div class=\\\"modal-body\\\">\\r\\n    <form [formGroup]=\\\"myForm\\\" novalidate (ngSubmit)=\\\"saveeventformdata(myForm.value,'save')\\\">\\r\\n\\r\\n        <div style=\\\"border: 1px solid black;margin-top:10px;\\\">\\r\\n            <div style=\\\"margin:20px;\\\" formArrayName=\\\"actionlist\\\">\\r\\n                <div *ngFor=\\\"let acton of myForm['controls'].actionlist['controls']; let i=index\\\">\\r\\n                    <div>\\r\\n                        <!--<span>Agenda {{i + 1}}</span>-->\\r\\n                        <span class=\\\" fa fa-remove pull-right\\\" *ngIf=\\\"myForm.controls.actionlist.controls.length > 1\\\" (click)=\\\"RemoveAction(i)\\\">\\r\\n                        </span>\\r\\n                    </div>\\r\\n                    <div [formGroupName]=\\\"i\\\">\\r\\n                        <!--agenda-->\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>Action</label>\\r\\n                            <!--<input type=\\\"text\\\" formControlName=\\\"title\\\" class=\\\"form-control\\\">-->\\r\\n                            <textarea formControlName=\\\"title\\\" id=\\\"textAreaTitle\\\" rows=\\\"6\\\" class=\\\"form-control\\\"></textarea>\\r\\n                            <!--display error message if agenda is not valid-->\\r\\n                            <small [hidden]=\\\"myForm.controls.actionlist.controls[i].controls.title.value !=''\\\" class=\\\"text-danger\\\">\\r\\n                                Action is required\\r\\n                            </small>\\r\\n                        </div>\\r\\n                        <div style=\\\"display:none;\\\" class=\\\"form-group\\\">\\r\\n                            <label>Is Correction Action required ?</label>\\r\\n                            <input style=\\\"float:right;width:90%;\\\" id=\\\"chkboxactionrequired\\\" type=\\\"checkbox\\\" (change)=\\\"SetCorrectionRequired()\\\" formControlName=\\\"CorrectionStatusRequired\\\" class=\\\"form-control\\\">\\r\\n                            <!--display error message if agenda is not valid-->\\r\\n\\r\\n                        </div>\\r\\n                        <div style=\\\"display:none;\\\" class=\\\"form-group\\\" *ngIf=\\\"myForm.controls.actionlist.controls[i].controls.CorrectionStatusRequired.value\\\">\\r\\n                            <label>Corrective Action</label>\\r\\n                            <select formControlName=\\\"CorrectiveActionID\\\" (change)=\\\"setActionText($event.target.value)\\\" class=\\\"form-control\\\">\\r\\n                                <option value=\\\"0\\\">--Select--</option>\\r\\n                                <option *ngFor=\\\"let evebtStatus of correctiveList\\\"\\r\\n                                        value={{evebtStatus.CorrectiveActionId}}>\\r\\n                                    {{evebtStatus.CorrectiveActionName}}\\r\\n                                </option>\\r\\n                            </select>\\r\\n                            <small [hidden]=\\\"myForm.controls.actionlist.controls[i].controls.CorrectiveActionID.value > 0\\\" class=\\\"text-danger\\\">\\r\\n                                Corrective action is required\\r\\n                            </small>\\r\\n                        </div>\\r\\n\\r\\n                        <div>\\r\\n                            <label>Due Date</label>\\r\\n                            <!--<input type=\\\"text\\\" formControlName=\\\"duedate\\\" type=\\\"date\\\" class=\\\"form-control\\\">-->\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <div class=\\\"input-group\\\">\\r\\n                                    <input class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\" name=\\\"dueDate\\\" formControlName=\\\"dueDate\\\" ngbDatepicker #d=\\\"ngbDatepicker\\\">\\r\\n                                    <div class=\\\"input-group-addon\\\" (click)=\\\"d.toggle()\\\">\\r\\n                                        <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!--display error message if agenda is not valid-->\\r\\n                            <small [hidden]=\\\"myForm.controls.actionlist.controls[i].controls.dueDate.valid\\\" class=\\\"text-danger\\\">\\r\\n                                Due date is required\\r\\n                            </small>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>Assigned To</label>\\r\\n                            <ss-multiselect-dropdown [options]=\\\"responsiblePersonOptions\\\" [texts]=\\\"responsiblePersonTexts\\\" [settings]=\\\"responsiblePersonSettings\\\" formControlName=\\\"responsiblePerson\\\"\\r\\n                                                     (ngModelChange)=\\\"onResponsiblePersonChange($event)\\\"></ss-multiselect-dropdown>\\r\\n                            <!--<ss-multiselect-dropdown [options]=\\\"responsiblePersonOptions\\\" [texts]=\\\"responsiblePersonTexts\\\" [settings]=\\\"responsiblePersonSettings\\\" formControlName=\\\"responsiblePerson\\\" (ngModelChange)=\\\"onResponsiblePersonChange($event)\\\"></ss-multiselect-dropdown>\\r\\n                            -->\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>Assigned By</label>\\r\\n                            <select formControlName=\\\"AssignedBy\\\" class=\\\"form-control\\\">\\r\\n                                <option value=\\\"\\\">--Select--</option>\\r\\n                                <option *ngFor=\\\"let evebtStatus of responsiblePersonOptions\\\"\\r\\n                                        value={{evebtStatus.id}}>\\r\\n                                    {{evebtStatus.name}}\\r\\n                                </option>\\r\\n                            </select>\\r\\n                            <small [hidden]=\\\"myForm.controls.actionlist.controls[i].controls.AssignedBy.valid\\\" class=\\\"text-danger\\\">\\r\\n                                Assigned By is required .\\r\\n                            </small>\\r\\n                        </div>\\r\\n                        <div style=\\\"display:none;\\\" class=\\\"form-group\\\">\\r\\n                            <label>Status</label>\\r\\n                            <select formControlName=\\\"EventActionStatusID\\\" class=\\\"form-control\\\">\\r\\n                                <option value=\\\"\\\">--Select--</option>\\r\\n                                <option *ngFor=\\\"let evebtStatus of eventActionStatusList\\\"\\r\\n                                        value={{evebtStatus.EventActionStatusID}}>\\r\\n                                    {{evebtStatus.ActionName}}\\r\\n                                </option>\\r\\n                            </select>\\r\\n                            <!--display error message if name is not valid-->\\r\\n                            <small [hidden]=\\\"myForm.controls.actionlist.controls[i].controls.EventActionStatusID.valid\\\" class=\\\"text-danger\\\">\\r\\n                                Action Status is required .\\r\\n                            </small>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>Category</label>\\r\\n                            <select formControlName=\\\"CategoryId\\\" class=\\\"form-control\\\">\\r\\n                                <option value=\\\"\\\">--Select--</option>\\r\\n                                <option *ngFor=\\\"let evebtStatus of categoryList\\\"\\r\\n                                        value={{evebtStatus.CategoryID}}>\\r\\n                                    {{evebtStatus.CategoryName}}\\r\\n                                </option>\\r\\n                            </select>\\r\\n                            <!--display error message if name is not valid-->\\r\\n                            <small [hidden]=\\\"myForm.controls.actionlist.controls[i].controls.CategoryId.valid\\\" class=\\\"text-danger\\\">\\r\\n                                Category is required .\\r\\n                            </small>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>Source</label>\\r\\n                            <select formControlName=\\\"ActionSourceId\\\" class=\\\"form-control\\\">\\r\\n                                <option value=\\\"\\\">--Select--</option>\\r\\n                                <option *ngFor=\\\"let evebtStatus of actionSourceList\\\"\\r\\n                                        value={{evebtStatus.ActionSourceID}}>\\r\\n                                    {{evebtStatus.Source}}\\r\\n                                </option>\\r\\n                            </select>\\r\\n                            <!--display error message if name is not valid-->\\r\\n                            <small [hidden]=\\\"myForm.controls.actionlist.controls[i].controls.ActionSourceId.valid\\\" class=\\\"text-danger\\\">\\r\\n                                Action Source is required .\\r\\n                            </small>\\r\\n                        </div>\\r\\n\\r\\n                        <div>\\r\\n                            <label>Root Cause</label>\\r\\n                            <textarea formControlName=\\\"RootCause\\\" rows=\\\"6\\\" class=\\\"form-control\\\"></textarea>\\r\\n                            <!--<input type=\\\"text\\\" formControlName=\\\"title\\\" class=\\\"form-control\\\">-->\\r\\n                            <!--display error message if agenda is not valid-->\\r\\n\\r\\n                        </div>\\r\\n\\r\\n                        <div>\\r\\n                            <label>Comments</label>\\r\\n                            <textarea formControlName=\\\"comments\\\" rows=\\\"6\\\" class=\\\"form-control\\\"></textarea>\\r\\n                            <!--<input type=\\\"text\\\" formControlName=\\\"title\\\" class=\\\"form-control\\\">-->\\r\\n                            <!--display error message if agenda is not valid-->\\r\\n\\r\\n                        </div>\\r\\n                        <!--<div>\\r\\n                            <table>\\r\\n                                <tr>\\r\\n                                    <td>Comment Date</td>\\r\\n                                    <td>Added By</td>\\r\\n                                    <td>Comment</td>\\r\\n                                </tr>\\r\\n                                <tr *ngFor=\\\"let comment of acitonCommentList\\\">\\r\\n                                    <td>{{comment.AddedON | date: 'MM/dd/yyyy'}}</td>\\r\\n                                    <td>{{comment.AddedBy}}</td>\\r\\n                                    <td>{{comment.Comment}}</td>\\r\\n                                </tr>\\r\\n                            </table>\\r\\n                        </div>-->\\r\\n\\r\\n\\r\\n                        <div style=\\\"padding-top:10px;\\\">\\r\\n                            <label>Previous Comments</label>\\r\\n                            <div class=\\\"list\\\">\\r\\n                                <a *ngFor=\\\"let comment of acitonCommentList\\\" href=\\\"javascript:void(0);\\\" style=\\\"color:black !important; border-bottom-color:black !important\\\" class=\\\"transition\\\">\\r\\n                                    <div class=\\\"list-content\\\">\\r\\n                                        <h3 style=\\\"font-size:1rem !important;\\\">{{comment.AddedBy}} <span class=\\\"pull-right\\\"><i class=\\\"fa fa-clock-o\\\"></i> {{comment.AddedON | date: 'MM/dd/yyyy'}}</span></h3>\\r\\n                                        <p>\\r\\n                                            {{comment.Comment}}\\r\\n                                        </p>\\r\\n                                    </div>\\r\\n                                </a>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n        <!-- we will place our fields here -->\\r\\n        <!--<button type=\\\"submit\\\" [disabled]=\\\"!myForm.valid\\\">Submit</button>-->\\r\\n\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"submit\\\" #buttonSubmit class=\\\"btn btn-primary\\\" [disabled]=\\\"!myForm.valid\\\">Save</button>\\r\\n\\r\\n            <button type=\\\"button\\\" (click)=\\\"saveeventformdata(myForm.value,'complete')\\\" #buttonComplete data-toggle=\\\"modal\\\" data-target=\\\"#lg-modal\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!myForm.valid\\\">Complete</button>\\r\\n\\r\\n        </div>\\r\\n    </form>\\r\\n</div>\\r\\n<div class=\\\"modal fade\\\" id=\\\"lg-modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"modal-large-label\\\" style=\\\"display: none;\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header state modal-primary\\\">\\r\\n                <h4 class=\\\"modal-title\\\" id=\\\"modal-large-label\\\">Action Taken</h4>\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">×</span></button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <form [formGroup]=\\\"actionTakenForm\\\" novalidate (ngSubmit)=\\\"saveActionTaken(actionTakenForm.value)\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Action Taken</label>\\r\\n                        <!--<input type=\\\"text\\\" formControlName=\\\"title\\\" class=\\\"form-control\\\">-->\\r\\n                        <textarea formControlName=\\\"ActionTaken\\\" rows=\\\"6\\\" class=\\\"form-control validation-field\\\"></textarea>\\r\\n                        <!--display error message if agenda is not valid-->\\r\\n                        <small [hidden]=\\\"actionTakenForm.controls['ActionTaken'].value !=''\\\" class=\\\"text-danger\\\">\\r\\n                            Action Taken is required\\r\\n                        </small>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <div class=\\\"custom-controls-stacked\\\">\\r\\n                            <label class=\\\"custom-control custom-checkbox\\\">\\r\\n                                <input formControlName=\\\"IsReportedAction\\\" type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked>\\r\\n                                <span class=\\\"custom-control-indicator\\\"></span>\\r\\n                                <span class=\\\"custom-control-description\\\">Add to Corrective Action log</span>\\r\\n                            </label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <div class=\\\"input-group file-upload\\\">\\r\\n                            <input type=\\\"file\\\" (change)=\\\"fileChange(input)\\\" #input class=\\\"file-upload-btn\\\" />\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Choose a file...\\\" value=\\\"{{fileName}}\\\">\\r\\n                            <i class=\\\"fa fa-times delete-file\\\" (click)=\\\"removeFile()\\\" *ngIf=\\\"fileToUpload\\\"></i>\\r\\n                            <span class=\\\"input-group-btn\\\">\\r\\n                                <button class=\\\"btn btn-primary\\\" type=\\\"button\\\"><i class=\\\"fa fa-upload\\\"></i></button>\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"modal-footer\\\">\\r\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!actionTakenForm.valid\\\">Save</button>\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" #closeDialog data-dismiss=\\\"modal\\\">Close</button>\\r\\n                    </div>\\r\\n                </form>\\r\\n\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/eventactions/eventaction.component.html\n// module id = ../../../../../src/app/pages/eventactions/eventaction.component.html\n// module chunks = eventaction.list.module","\nimport { Component, ViewEncapsulation, ViewChild, TemplateRef, OnInit } from '@angular/core';\n\nimport { Subject } from 'rxjs/Subject';\nimport { Validators, FormGroup, FormArray, FormBuilder } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { EventActionService } from '../eventactions/eventaction.service';\nimport { Location } from '@angular/common';\nimport { IMultiSelectOption, IMultiSelectSettings, IMultiSelectTexts } from 'angular-2-dropdown-multiselect';\nimport { Observable } from 'rxjs/Observable';\nimport { Http, URLSearchParams } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport { LocationModel, TitleModel, SubTitleModel, Title, SubTitle, Action, EventActionStatusModel, events, EventFilterModel, EventViewModel, EventDataModel, EventFilterViewModel, EventAttendeeDataModel, ActionDataModel, ActionResponsiblePersonDataModel, AgendaDataModel } from '../calendar/formeventdata';\nimport { CategoryModel, ActionSourceModel, ActionCommentsListModel, CorrectiveActionModel } from '../eventactions/eventaction.model';\nimport { MasterEventDataService } from '../calendar/Mastereventdata';\n\n@Component({\n    selector: 'app-eventactionedit',\n    templateUrl: './eventaction.component.html',\n    encapsulation: ViewEncapsulation.None,\n    providers: [EventActionService, MasterEventDataService],\n    styleUrls: ['../../theme/components/messages/messages.component.scss',\n        '../form-elements/controls/file-uploader/file-uploader.component.scss']\n    //    styles: [`.modal-dialog{\n    //    overflow-y: initial !important\n    //}\n    //.redclr{\n    //color:red;\n    //}\n    //.modal-body{\n    //    height: 400px;\n\n    //    overflow-y: auto;\n    //}`]\n})\n\nexport class EventActionEditComponent implements OnInit {\n    actionID: number = 0;\n    fileToUpload: File;\n    public responsiblePersonOptions: IMultiSelectOption[] = [];\n    myOptions: IMultiSelectOption[];\n    eventActionStatusList: EventActionStatusModel[] = [];\n    public responsiblePersonTexts: IMultiSelectTexts = {\n        checkAll: 'Select all',\n        uncheckAll: 'Unselect all',\n        checked: 'item selected',\n        checkedPlural: 'items selected',\n        searchPlaceholder: 'Find...',\n        defaultTitle: 'Select',\n        allSelected: 'All selected',\n    };\n    public responsiblePersonSettings: IMultiSelectSettings = {\n        enableSearch: true,\n        checkedStyle: 'fontawesome',\n        buttonClasses: 'btn btn-secondary btn-block',\n        dynamicTitleMaxItems: 3,\n        displayAllSelectedText: true,\n        maxHeight: '300px'\n    };\n    correctiveList: CorrectiveActionModel[];\n    onResponsiblePersonChange(s) {\n    }\n    actionSourceList: ActionSourceModel[] = [];\n    categoryList: CategoryModel[] = [];\n    @ViewChild('closeDialog') closeDialog;\n    @ViewChild('buttonComplete') buttonComplete;\n    @ViewChild('buttonSubmit') buttonSubmit;\n    constructor(private router: Router, private location: Location, private _fb: FormBuilder, private _dataService: EventActionService, private route: ActivatedRoute, private _masterDataService: MasterEventDataService) { }\n    ngOnInit() {\n        this.buttonComplete.nativeElement.hidden = false;\n        let dataModel: ActionDataModel = new ActionDataModel();\n        dataModel.AssignedBy = sessionStorage[\"UserId\"] as number;\n        this.addhtmltoform(dataModel);\n        this.route.params.subscribe(params => {\r\n            this.actionID = params['id'] as number; //log the value of id\r\n        });\n        this._masterDataService.getEventActionStatusList().subscribe((res: EventActionStatusModel[]) => {\n            this.eventActionStatusList = [];\n            for (let eventAction of res) {\n                let eve: EventActionStatusModel = new EventActionStatusModel();\n                eve.EventActionStatusID = eventAction.EventActionStatusID;\n                eve.ActionName = eventAction.ActionName;\n                this.eventActionStatusList.push(\n                    eve);\n            }\n        });\n        this._masterDataService.getUserList().subscribe(res => { this.myOptions = res; this.responsiblePersonOptions = res; });\n        this._dataService.getAllCategories().subscribe(res => { this.categoryList = res; });\n        this._dataService.getAllActionSource().subscribe(res => { this.actionSourceList = res; });\n        if (this.actionID > 0) {\n            this.buttonComplete.nativeElement.hidden = false;\n\n            this._dataService.getActionData(this.actionID).subscribe((res: ActionDataModel) => {\n                if (res.EventActionStatusID == 3) {\n                    this.buttonComplete.nativeElement.hidden = true;\n                    this.buttonSubmit.nativeElement.hidden = true;\n                }\n                const control1 = <FormArray>this.myForm.controls['actionlist'];\n                control1.removeAt(0);\n                if (res.CorrectiveActionID > 0)\n                    res.CorrectionStatusRequired = true;\n                control1.push(this.initAction(res));\n                this.acitonCommentList = res.ActionCommentsListModel;\n                //if (res.CorrectiveActionID > 0) {\n                //    this.SetCorrectionRequired();\n                //    this.setActionText(res.CorrectiveActionID);\n                //}\n\n            });\n        }\n        this._dataService.getAllCorrectedAction().subscribe((res: CorrectiveActionModel[]) => {\n            this.correctiveList = res;\n        });\n        //this._dataService.downloadActionFile(\"2017-09-02-10-49-23-685_AJOPS8968C_2017_.pdf\");\n    }\n    acitonCommentList: ActionCommentsListModel[] = [];\n    public myForm: FormGroup; // our form model\n    public actionTakenForm: FormGroup;\r\n\r\n    addhtmltoform(content: ActionDataModel) {\n        this.myForm = this._fb.group({\n            actionlist: this._fb.array([\n                this.initAction(content)\n            ])\n\n        });\n        this.actionTakenForm = this.initActionTaken();\n    }\n\n    initAction(actionModel: ActionDataModel = new ActionDataModel()) {\n        if (actionModel.ActionResponsiblePersonDataModel == null || actionModel.ActionResponsiblePersonDataModel == undefined)\n            actionModel.ActionResponsiblePersonDataModel = [new ActionResponsiblePersonDataModel()];\n        return this._fb.group({\n            Id: [actionModel.ActionID],\n            title: [actionModel.Title, Validators.required],\n            dueDate: [{ year: new Date(actionModel.Duedate).getFullYear(), month: new Date(actionModel.Duedate).getMonth() + 1, day: new Date(actionModel.Duedate).getDate() }, Validators.required],\n            responsiblePerson: [actionModel.ActionResponsiblePersonDataModel.map(x => x.UserID), Validators.required],\n            actionRequired: [actionModel.IsActionRequired],\n            CategoryId: [actionModel.CategoryID, Validators.required],\n            ActionSourceId: [actionModel.ActionSourceID, Validators.required],\n            RootCause: [actionModel.RootCause],\n            eventID: [actionModel.SourceID],\n            comments: [''],\n            CorrectionStatusRequired: [actionModel.CorrectionStatusRequired],\n            CorrectiveActionID: [actionModel.CorrectiveActionID],\n            EventActionStatusID: [1],\n            AssignedBy: [actionModel.AssignedBy, Validators.required],\n        })\n    }\n    initActionTaken() {\n        return this._fb.group({\r\n            ActionTaken: ['', Validators.required],\r\n            IsReportedAction: [false, Validators.required],\r\n            File: ['']\r\n        });\r\n    }\n    saveActionTaken(data: any) {\n        let _formData = new FormData();\r\n        _formData.append(\"FileName\", this.fileName);\r\n        _formData.append(\"MyFile\", this.fileToUpload);\r\n        _formData.append(\"action\", data.ActionTaken);\r\n        _formData.append(\"IsReportedAction\", data.IsReportedAction);\r\n        _formData.append(\"ActionId\", this.actionID.toString());\r\n        let body = _formData;\n        this._dataService.postUploadData(body).subscribe(res => {\n            this.closeDialog.nativeElement.click();\n            if (data.IsReportedAction == \"true\" || data.IsReportedAction == true)\n                this.router.navigate(['/pages/correctiveaction/actionrequired/' + (this.myForm.controls.actionlist as any).controls[0].controls.Id.value]);\n            else\n                this.router.navigate(['/pages/action/list']);\n        });\n    }\n\n    saveeventformdata(data: events, buttonText: string) {\n        let currentEvent: EventViewModel = new EventViewModel();\n        if (data.actionlist != null && data.actionlist.length > 0) {\n            let eventArray: ActionDataModel[] = [];\n            for (let entry of data.actionlist) {\n                let tempmodel: ActionDataModel = new ActionDataModel();\n                tempmodel.Title = entry.title;\n                tempmodel.OrganizationID = 1;\n                tempmodel.EventActionStatusID = entry.EventActionStatusID;\n                tempmodel.IsActionRequired = entry.actionRequired;\n                tempmodel.ActionID = entry.Id;\n                tempmodel.Duedate = new Date(entry.dueDate.year, entry.dueDate.month - 1, entry.dueDate.day).toLocaleDateString();\n                tempmodel.AddedBy = 1;\n                tempmodel.SourceID = entry.eventID;\n                tempmodel.CategoryID = entry.CategoryId;\n                tempmodel.RootCause = entry.RootCause;\n                tempmodel.ActionSourceID = entry.ActionSourceId;\n                tempmodel.Comments = entry.comments;\n                tempmodel.AssignedBy = entry.AssignedBy;\n                tempmodel.CorrectiveActionID = entry.CorrectiveActionID;\n                if (entry.responsiblePerson != null && entry.responsiblePerson.length > 0) {\n                    let eventArray1: ActionResponsiblePersonDataModel[] = [];\n                    for (let entry1 of entry.responsiblePerson) {\n                        if (entry1 > 0) {\n                            let tempmodel1: ActionResponsiblePersonDataModel = new ActionResponsiblePersonDataModel();\n                            tempmodel1.UserID = entry1;\n                            tempmodel.AddedBy = 1;\n                            eventArray1.push(tempmodel1);\n                        }\n                    }\n                    tempmodel.ActionResponsiblePersonDataModel = eventArray1;\n                }\n\n                eventArray.push(tempmodel);\n            }\n\n            currentEvent.ActionDataModel = eventArray;\n            this._dataService.updateActionData(eventArray[0]).subscribe((res: number) => {\n                if (buttonText == \"save\")\n                    this.router.navigate(['/pages/action/list']);\n                else {\n                    this.actionID = res;\n                    this._dataService.getActionData(this.actionID).subscribe((res: ActionDataModel) => {\n                        if (res.EventActionStatusID == 3) {\n                            this.buttonComplete.nativeElement.hidden = true;\n                            this.buttonSubmit.nativeElement.hidden = true;\n                        }\n                        const control1 = <FormArray>this.myForm.controls['actionlist'];\n                        control1.removeAt(0);\n                        if (res.CorrectiveActionID > 0)\n                            res.CorrectionStatusRequired = true;\n                        control1.push(this.initAction(res));\n                        this.acitonCommentList = res.ActionCommentsListModel;\n                    });\n                }\n            });\n        }\n    }\n    setActionText(selectedId: number) {\n        if (selectedId == 0) {\n            (this.myForm.controls.actionlist as any).controls[0].controls.title.setValue('');\n            (this.myForm.controls.actionlist as any).controls[0].controls.title.enable();\n            (this.myForm.controls.actionlist as any).controls[0].controls.title.updateValueAndValidity();\n            (this.myForm.controls.actionlist as any).controls[0].controls.title.valueChanges();\n\n        }\n        else {\n            let actionName = this.correctiveList.filter(x => x.CorrectiveActionId == selectedId)[0].CorrectiveActionName;\n\n            (this.myForm.controls.actionlist as any).controls[0].controls.title.setValue(actionName);\n            (this.myForm.controls.actionlist as any).controls[0].controls.title.disable();\n            (this.myForm.controls.actionlist as any).controls[0].controls.title.updateValueAndValidity();\n            (this.myForm.controls.actionlist as any).controls[0].controls.title.valueChanges();\n            this.myForm.updateValueAndValidity();\n\n        }\n\n    }\n\n    SetCorrectionRequired() {\n        let checked: boolean = (this.myForm.controls.actionlist as any).controls[0].controls.CorrectionStatusRequired.value;\n        if (checked) {\n            (this.myForm.controls.actionlist as any).controls[0].controls.CorrectiveActionID.enable();\n            (this.myForm.controls.actionlist as any).controls[0].controls.CorrectiveActionID.updateValueAndValidity();\n        }\n        else {\n            (this.myForm.controls.actionlist as any).controls[0].controls.CorrectiveActionID.setValue(\"0\");\n            (this.myForm.controls.actionlist as any).controls[0].controls.CorrectiveActionID.disable();\n            (this.myForm.controls.actionlist as any).controls[0].controls.CorrectiveActionID.updateValueAndValidity();\n            this.setActionText(0);\n        }\n    }\n    fileName: string;\n    fileChange(input) {\n        const reader = new FileReader();\n        if (input.files.length) {\n            this.fileName = input.files[0].name;\n            this.fileToUpload = input.files[0];\n        }\n    }\n\n    removeFile(): void {\n        this.fileName = '';\n        this.fileToUpload = null;\n    }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/eventactions/eventaction.component.ts","module.exports = \"<p-dataTable [value]=\\\"data\\\" [lazy]=\\\"true\\\" [rows]=\\\"10\\\" [paginator]=\\\"true\\\" [rowsPerPageOptions]=\\\"[5,10,20,50]\\\"\\r\\n             #dt resizableColumns=\\\"true\\\" reorderableColumns=\\\"true\\\" [responsive]=\\\"true\\\"  [totalRecords]=\\\"totalRecords\\\" (onLazyLoad)=\\\"loadCarsLazy($event)\\\">\\r\\n    <!--<p-footer>\\r\\n    \\r\\n    </p-footer>-->\\r\\n    <p-column field=\\\"Title\\\" [filter]=\\\"true\\\" header=\\\"Title\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n    <p-column field=\\\"Duedate\\\" [filter]=\\\"true\\\" header=\\\"Due Date\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n    <p-column field=\\\"EventActionStatusText\\\" [filter]=\\\"true\\\" header=\\\"Status\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n    <p-column field=\\\"SourceText\\\" header=\\\"Source\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n    <p-column field=\\\"AddedBy\\\" [filter]=\\\"true\\\" header=\\\"Organizer\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n    <p-column field=\\\"AssignedTo\\\" header=\\\"Assigned To\\\"></p-column>\\r\\n    <p-column styleClass=\\\"col-button\\\">\\r\\n        <ng-template pTemplate=\\\"header\\\">\\r\\n            <div class=\\\"ui-helper-clearfix\\\" style=\\\"width:100%\\\">\\r\\n                <button type=\\\"button\\\" pButton icon=\\\"fa-plus\\\" style=\\\"float:left\\\" (click)=\\\"redirectToNewPage()\\\" label=\\\"Add\\\"></button>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n        <ng-template let-meeting=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n            <button type=\\\"button\\\" title=\\\"Edit\\\" pButton (click)=\\\"redirectToEditPage(meeting)\\\" icon=\\\"fa fa-pencil-square-o\\\"></button>\\r\\n            <button type=\\\"button\\\" title=\\\"Cancel\\\" pButton (click)=\\\"deleteAction(meeting)\\\" icon=\\\"fa fa-trash-o\\\"></button>\\r\\n        </ng-template>\\r\\n\\r\\n    </p-column>\\r\\n</p-dataTable>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/eventactions/eventaction.list.component.html\n// module id = ../../../../../src/app/pages/eventactions/eventaction.list.component.html\n// module chunks = eventaction.list.module","\nimport { Component, ViewEncapsulation, ViewChild, TemplateRef, OnInit } from '@angular/core';\n\nimport { Subject } from 'rxjs/Subject';\nimport { Validators, FormGroup, FormArray, FormBuilder } from '@angular/forms';\nimport { EventActionService } from '../eventactions/eventaction.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { IMultiSelectOption, IMultiSelectSettings, IMultiSelectTexts } from 'angular-2-dropdown-multiselect';\nimport { Observable } from 'rxjs/Observable';\nimport { Http, URLSearchParams } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport { LocationModel, TitleModel, SubTitleModel, Title, SubTitle, Action, EventActionStatusModel, events, EventFilterModel, EventViewModel, EventDataModel, EventFilterViewModel, EventAttendeeDataModel, ActionDataModel, ActionResponsiblePersonDataModel, AgendaDataModel } from '../calendar/formeventdata';\nimport { CategoryModel, ActionSourceModel, ActionCommentsListModel, filterDropDown, ActionList, ActionListViewModel } from '../eventactions/eventaction.model';\nimport { MasterEventDataService } from '../calendar/Mastereventdata';\nimport { ServerDataSource } from '../../../../node_modules/ng2-smart-table/lib/data-source/server/server.data-source';\nimport { LazyLoadEvent, FilterMetadata } from 'primeng/components/common/api';\r\nimport { AccordionModule, MultiSelectModule, SelectItem, CheckboxModule } from 'primeng/primeng';     //accordion and accordion tab\r\nimport { MenuItem } from 'primeng/primeng';\n\n\n@Component({\n    selector: 'app-eventaction',\n    templateUrl: './eventaction.list.component.html',\n    encapsulation: ViewEncapsulation.None,\n    providers: [EventActionService, MasterEventDataService],\n    styleUrls: ['../../../../node_modules/primeng/resources/primeng.min.css',\n        \"../../../../node_modules/primeng/resources/themes/omega/theme.css\"],\n\n})\n\nexport class EventActionComponent implements OnInit {\n    eventActionStatusList: EventActionStatusModel[] = [];\n    data: ActionList[] = [];\n    totalRecords: number = 0;\n    pageNumber: number = 1;\n    sortColumn: string = \"Title\";\n    sortOrder: string = \"asc\";\n    pageSize: number = 10;\n    titleFilter: string = '';\n    dueDateFilter: string = '';\n    statusFilter: string = '';\n    organizerFilter: string = '';\n    evantActionStatusFilter = [\r\n        { value: 'To-Do', title: 'To-Do7622' },\r\n        { value: 'In-Progress', title: 'In-Progresser' },\r\n        { value: 'Completed', title: 'Completeder' },\r\n        { value: 'Archived', title: 'Archived' }\r\n    ];\n    constructor(private router: Router, private location: Location, private _fb: FormBuilder,\n        private _dataService: EventActionService, private route: ActivatedRoute,\n        private _masterDataService: MasterEventDataService) { }\n    ngOnInit() {\n\n\n        //this._masterDataService.getEventActionStatusList().subscribe((res: EventActionStatusModel[]) => {\n        //    this.eventActionStatusList = [];\n        //    for (let eventAction of res) {\n        //        let eve: EventActionStatusModel = new EventActionStatusModel();\n        //        eve.EventActionStatusID = eventAction.EventActionStatusID;\n        //        eve.ActionName = eventAction.ActionName;\n        //        this.eventActionStatusList.push(\n        //            eve);\n\n        //        //this.evantActionStatusFilter.push({ title: eventAction.ActionName, value: eventAction.EventActionStatusID.toString() });\n        //    }\n        //});\n        //this.getData((data) => {\n\n        //});\n    }\n\n    getEventActionStatus() {\n        this._masterDataService.getEventActionStatusList().subscribe((res: EventActionStatusModel[]) => {\n            this.eventActionStatusList = [];\n            for (let eventAction of res) {\n                this.evantActionStatusFilter.push({ title: eventAction.ActionName, value: eventAction.EventActionStatusID.toString() });\n            }\n            return this.evantActionStatusFilter;\n        });\n\n    }\n\n    loadCarsLazy(event: LazyLoadEvent) {\r\n\r\n        this.pageNumber = (event.first / event.rows) + 1;\r\n        this.pageSize = event.rows;\r\n        this.sortColumn = event.sortField;\r\n        this.sortOrder = event.sortOrder == 1 ? \"asc\" : \"desc\";\r\n        this.titleFilter = event.filters.Title == undefined ? '' : event.filters.Title.value;\r\n        this.dueDateFilter = event.filters.Duedate == undefined ? '' : event.filters.Duedate.value;\r\n        this.statusFilter = event.filters.EventActionStatusText == undefined ? '' : event.filters.EventActionStatusText.value;\r\n        this.organizerFilter = event.filters.AddedBy == undefined ? '' : event.filters.AddedBy.value;\r\n\r\n        this.getList(this.pageNumber, this.pageSize, this.sortColumn, this.sortOrder\r\n            , this.titleFilter, this.dueDateFilter, this.statusFilter, this.organizerFilter);\r\n\r\n    }\n\n    getList(pageNo: number, pageSize: number, sortColumn: string, sortOrder: string,\n        titleFilter: string,\n        dueDateFilter: string,\n        statusFilter: string,\n        organizerFilter: string) {\r\n        this._dataService.getActionList(pageNo, pageSize, sortColumn, sortOrder, titleFilter, dueDateFilter, statusFilter, organizerFilter).subscribe((res: ActionListViewModel) => {\n            this.data = res.ActionListing;\n            this.totalRecords = res.TotalRecords;\n        });\r\n    }\n    public redirectToEditPage(event: ActionList) {\n        this.router.navigate(['/pages/action/' + event.ActionID]);\n    }\n    public deleteAction(event: ActionList) {\n        if (confirm(\"Are you sure want to archive this action ?\")) {\n            this._dataService.deleteAction(event.ActionID).subscribe(res => {\n                this.getList(this.pageNumber, this.pageSize, this.sortColumn, this.sortOrder, this.titleFilter, this.dueDateFilter, this.statusFilter, this.organizerFilter);\n            });\n        }\n    }\n\n    redirectToNewPage() {\n        this.router.navigate(['/pages/action']);\n    }\n\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/eventactions/eventaction.list.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { DirectivesModule } from '../../theme/directives/directives.module';\nimport { EventActionComponent } from './eventaction.list.component';\nimport { EventActionEditComponent } from './eventaction.component';\nimport { MultiselectDropdownModule } from 'angular-2-dropdown-multiselect';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ChartModule, CalendarModule, SharedModule, DataTableModule, MultiSelectModule, SelectItem, CheckboxModule } from 'primeng/primeng';\nimport { AuthenticatedHttpService } from '../../pages/errors/401.service';\nimport { HttpModule, Http } from '@angular/http';\n\nexport const routes = [\n    { path: '', component: EventActionEditComponent, pathMatch: 'full' },\n    { path: 'list', component: EventActionComponent, data: { breadcrumb: 'Action List' } },\n    { path: 'action', component: EventActionEditComponent, data: { breadcrumb: 'Action' } },\n    { path: ':id', component: EventActionEditComponent, data: { breadcrumb: 'Edit' } },\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        Ng2SmartTableModule,\n        NgxDatatableModule,\n        DirectivesModule,\n        MultiselectDropdownModule,\n        NgbModule.forRoot(),\n        CalendarModule,\r\n        SharedModule,\n        DataTableModule,\n        MultiSelectModule,\n        CheckboxModule,\n        RouterModule.forChild(routes)\n    ],\n    providers: [{ provide: Http, useClass: AuthenticatedHttpService }],\n    declarations: [\n        EventActionComponent,\n        EventActionEditComponent\n    ]\n})\nexport class EventActionModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/eventactions/eventaction.list.module.ts"],"sourceRoot":"webpack:///"}