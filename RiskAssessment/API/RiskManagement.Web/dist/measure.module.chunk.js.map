{"version":3,"sources":["C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/measure/measure-chart.component.html","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/measure/measure-chart.component.ts","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/measure/measure-list.component.html","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/measure/measure-list.component.ts","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/measure/measure.component.css","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/measure/measure.model.ts","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/measure/measure.module.ts","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/measure/newmeasure.component.html","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/measure/newmeasure.component.ts"],"names":[],"mappings":"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","file":"measure.module.chunk.js","sourcesContent":["module.exports = \"<div style=\\\"margin-top:10px;\\\">\\r\\n    <div style=\\\"margin:20px;\\\">\\r\\n        <div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label>Measure</label>\\r\\n                <select [(ngModel)]=\\\"measureId\\\" class=\\\"form-control\\\">\\r\\n                    <option value=\\\"0\\\">--Select--</option>\\r\\n                    <option *ngFor=\\\"let measure of measureList\\\"\\r\\n                            value={{measure.MeasureId}}>\\r\\n                        {{measure.Description}}\\r\\n                    </option>\\r\\n                </select>\\r\\n            </div>\\r\\n            <div style=\\\"display:none;\\\" class=\\\"form-group\\\">\\r\\n                <label>Column</label>\\r\\n                <select [(ngModel)]=\\\"measureColumnId\\\" class=\\\"form-control\\\"\\r\\n                        (change)=\\\"onMeasureColumnChange()\\\">\\r\\n                    <option value=\\\"0\\\">--Select--</option>\\r\\n                    <option *ngFor=\\\"let column of measureColumns\\\"\\r\\n                            value={{column.MeasureColumnId}}>\\r\\n                        {{column.ColumnName}}\\r\\n                    </option>\\r\\n                </select>\\r\\n                <!--<p-multiSelect  [options]=\\\"measureColumns\\\" [(ngModel)]=\\\"selectedMeasureIds\\\" (change)=\\\"onMeasureColumnChange($event.value)\\\"></p-multiSelect>-->\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label>Start Date</label>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"input-group\\\">\\r\\n                        <input class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\" name=\\\"startDate\\\" [(ngModel)]=\\\"startDate\\\" ngbDatepicker #p=\\\"ngbDatepicker\\\">\\r\\n                        <div class=\\\"input-group-addon\\\" (click)=\\\"p.toggle()\\\">\\r\\n                            <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label>End Date</label>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"input-group\\\">\\r\\n                        <input class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\" name=\\\"endDate\\\" [(ngModel)]=\\\"endDate\\\" ngbDatepicker #p1=\\\"ngbDatepicker\\\">\\r\\n                        <div class=\\\"input-group-addon\\\" (click)=\\\"p1.toggle()\\\">\\r\\n                            <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button type=\\\"button\\\" (click)=\\\"onMeasureColumnChange();\\\" class=\\\"btn btn-primary\\\">Get Data</button>\\r\\n\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div>\\r\\n    <p-chart type=\\\"line\\\" [data]=\\\"measureColumnsChartData\\\" [options]=\\\"options\\\"></p-chart>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/measure/measure-chart.component.html\n// module id = ../../../../../src/app/pages/measure/measure-chart.component.html\n// module chunks = measure.module","import { Component, ViewEncapsulation, ViewChild, TemplateRef, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { Observable } from 'rxjs/Observable';\nimport { Http, URLSearchParams } from '@angular/http';\nimport { NgbModal, NgbDateStruct, NgbTimeStruct } from '@ng-bootstrap/ng-bootstrap';\n\nimport { CalendarModule, ChartModule, MultiSelectModule } from 'primeng/primeng';\nimport { environment } from '../../../environments/environment';\nimport { MeasureService } from './measure.service';\nimport { MeasureViewModel, FrequencyViewModel, MeasureColumnViewModel, MeasureObjectiveViewModel, MeasureColumnDataViewModel, MeasureColumnDataByDateViewModel, MeasureColumnChartData } from './measure.model';\n\nlet apiURL = environment.apiEndpoint;\n\n@Component({\n    selector: 'app-measureChart-component',\n    templateUrl: './measure-chart.component.html',\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['../../../../node_modules/primeng/resources/primeng.min.css',\n        \"../../../../node_modules/primeng/resources/themes/omega/theme.css\",\n        '../form-elements/controls/file-uploader/file-uploader.component.scss',\n        './measure.component.css'\n    ],\n    providers: [],\n\n\n})\n\nexport class MeasureChartComponent implements OnInit {\n    @Input('measureId') measureId: number = 0;\n    measureColumnId: number = 0;\n    measureList: MeasureViewModel[] = [];\n    measureColumns: MeasureColumnViewModel[] = [];\n    measureColumnsData: MeasureColumnDataViewModel[] = [];\n    measureColumnsChartData: MeasureColumnChartData;\n    public startDate: NgbDateStruct;\n    public endDate: NgbDateStruct;\n    options: any;\n\n\n    data: any;\n\n    constructor(private _measureService: MeasureService, private router: Router, private location: Location, private route: ActivatedRoute) {\n        this.data = {\r\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n            datasets: [\r\n                {\r\n                    label: 'First Dataset',\r\n                    data: [65, 59, 80, 81, 56, 55, 40]\r\n                },\r\n                {\r\n                    label: 'Second Dataset',\r\n                    data: [28, 48, 40, 19, 86, 27, 90]\r\n                }\r\n            ]\r\n        };\n\n        this.options = {\r\n            title: {\r\n                display: true,\r\n                text: 'Measure Chart',\r\n                fontSize: 16\r\n            },\r\n            legend: {\r\n                position: 'bottom'\r\n            },\r\n            trendlines: { 0: {} }\r\n        };\n    }\n    ngOnInit() {\n\n        this.getMeasureList();\n    }\n\n    getMeasureList() {\n        this._measureService.getMeasureList().subscribe((res: MeasureViewModel[]) => {\n            this.measureList = res;\n        });\r\n    }\n\n    onMeasureChange() {\n        this.getChartData(this.measureId, 0);\n        //this.getMeasureColumns(this.measureId);\r\n    }\n\n    getMeasureColumns(id: number) {\n        this._measureService.getMeasureColumns(id).subscribe((res: MeasureColumnViewModel[]) => {\n            this.measureColumns = res;\n        });\r\n    }\n\n    onMeasureColumnChange() {\r\n        this.getChartData(this.measureId, this.measureColumnId);\r\n    }\n\n    getChartData(measureId: number, measureColumnnId: number) {\n        let sD: string = '';\n        let eD: string = '';\n        if (this.startDate != null && this.startDate != undefined)\n            sD = new Date(this.startDate.year, (this.startDate.month - 1), this.startDate.day).toLocaleDateString();\n        if (this.endDate != null && this.endDate != undefined)\n            eD = new Date(this.endDate.year, (this.endDate.month - 1), this.endDate.day).toLocaleDateString();\n        this._measureService.getChartData(measureId, measureColumnnId, sD, eD).subscribe((res: MeasureColumnChartData) => {\n            this.measureColumnsChartData = res;\n        });\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/measure/measure-chart.component.ts","module.exports = \"<div class=\\\"modal-body\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n\\r\\n        <p-dataTable [value]=\\\"measureList\\\" [rows]=\\\"10\\\" [paginator]=\\\"true\\\" [rowsPerPageOptions]=\\\"[5,10,20,50]\\\"\\r\\n                     resizableColumns=\\\"true\\\" sortField=\\\"StartDate\\\" #dt [responsive]=\\\"true\\\">\\r\\n\\r\\n            <p-column field=\\\"Description\\\" header=\\\"Measure\\\" [filter]=\\\"true\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n            <p-column field=\\\"Frequency.Description\\\" header=\\\"Frequency\\\" [filter]=\\\"true\\\" [sortable]=\\\"true\\\"></p-column>-->\\r\\n            <p-column field=\\\"Target\\\" header=\\\"Target\\\" [filter]=\\\"true\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n            <p-column header=\\\"Columns\\\">\\r\\n                <ng-template let-col let-cols=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                    <div class=\\\"form-group\\\" [hidden]=\\\"cols.MeasureColumns.length ==0\\\">\\r\\n                        <span>{{cols.MeasureColumns.length}} &nbsp;Columns &nbsp; <i data-toggle=\\\"modal\\\" (click)=\\\"getMeasureColumns(cols.MeasureColumns)\\\" data-target=\\\"#lg-modal-cols\\\" class=\\\"fa fa-info\\\" aria-hidden=\\\"true\\\"></i></span>\\r\\n                    </div>\\r\\n                </ng-template>\\r\\n            </p-column>\\r\\n            <p-column header=\\\"Objectives\\\">\\r\\n                <ng-template let-col let-cols=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                    <div class=\\\"form-group\\\" [hidden]=\\\"cols.MeasureObjectives.length ==0\\\">\\r\\n                        <span>{{cols.MeasureObjectives.length}} &nbsp;Objectives &nbsp; <i data-toggle=\\\"modal\\\" (click)=\\\"getMeasureObjectives(cols.MeasureObjectives)\\\" data-target=\\\"#lg-modal-objs\\\" class=\\\"fa fa-info\\\" aria-hidden=\\\"true\\\"></i></span>\\r\\n                    </div>\\r\\n                </ng-template>\\r\\n            </p-column>\\r\\n            <p-column header=\\\"Data\\\">\\r\\n                <ng-template let-col let-cols=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <span>\\r\\n                            Data &nbsp; <i data-toggle=\\\"modal\\\" (click)=\\\"getMeasureColumnsData(cols.MeasureId)\\\" data-target=\\\"#lg-modal-dataview\\\" class=\\\"fa fa-info\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                            &nbsp; <i data-toggle=\\\"modal\\\" (click)=\\\"showChart(cols.MeasureId)\\\" data-target=\\\"#lg-modalChart\\\" class=\\\"fa fa-line-chart\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </ng-template>\\r\\n            </p-column>\\r\\n            <p-column field=\\\"LastDate\\\" header=\\\"Last Date\\\" [filter]=\\\"false\\\" [sortable]=\\\"false\\\"></p-column>\\r\\n            <p-column field=\\\"NextDate\\\" header=\\\"Next Date\\\" [filter]=\\\"false\\\" [sortable]=\\\"false\\\"></p-column>\\r\\n            <p-column styleClass=\\\"col-button\\\">\\r\\n                <ng-template pTemplate=\\\"header\\\">\\r\\n                    <div class=\\\"form-group\\\" style=\\\"width:100%\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" pButton icon=\\\"fa-plus\\\" (click)=\\\"redirectToNewPage()\\\" label=\\\"Add\\\">Add New</button>\\r\\n                    </div>\\r\\n                </ng-template>\\r\\n                <ng-template let-cols=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                    <div class=\\\"form-group\\\" [hidden]=\\\"cols.MeasureColumns.length ==0\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#lg-modal-data\\\" (click)=\\\"addEditMeasureColumnData(cols)\\\" label=\\\"Add\\\">Add Data</button>\\r\\n                    </div>\\r\\n                </ng-template>\\r\\n            </p-column>\\r\\n\\r\\n        </p-dataTable>\\r\\n\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<!--Columns-->\\r\\n<div class=\\\"modal fade\\\" data-backdrop=\\\"static\\\" data-keyboard=\\\"false\\\" id=\\\"lg-modal-cols\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"modal-large-label\\\" style=\\\"display: none;\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header state modal-primary\\\">\\r\\n                <h4 class=\\\"modal-title\\\" id=\\\"modal-large-label\\\">Column List</h4>\\r\\n                <button type=\\\"button\\\" #closeDialog class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">×</span></button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <p-dataTable [editable]=\\\"true\\\" [value]=\\\"measureColumns\\\" [responsive]=\\\"true\\\">\\r\\n                        <p-column field=\\\"ColumnName\\\" header=\\\"Column Names\\\"></p-column>\\r\\n                    </p-dataTable>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!--Objectives-->\\r\\n<div class=\\\"modal fade\\\" data-backdrop=\\\"static\\\" data-keyboard=\\\"false\\\" id=\\\"lg-modal-objs\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"modal-large-label\\\" style=\\\"display: none;\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header state modal-primary\\\">\\r\\n                <h4 class=\\\"modal-title\\\" id=\\\"modal-large-label\\\">Objectives</h4>\\r\\n                <button type=\\\"button\\\" #closeDialog class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">×</span></button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <p-dataTable [editable]=\\\"true\\\" [value]=\\\"measureObjectives\\\" [responsive]=\\\"true\\\">\\r\\n                        <p-column field=\\\"Description\\\" header=\\\"Objectives\\\"></p-column>\\r\\n                    </p-dataTable>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!--Columns Data-->\\r\\n<div class=\\\"modal fade\\\" data-backdrop=\\\"static\\\" data-keyboard=\\\"false\\\" id=\\\"lg-modal-dataview\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"modal-large-label\\\" style=\\\"display: none;\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header state modal-primary\\\">\\r\\n                <h4 class=\\\"modal-title\\\" id=\\\"modal-large-label\\\">Data</h4>\\r\\n                <button type=\\\"button\\\" #closeDialog class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">×</span></button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <p-dataTable [editable]=\\\"true\\\" [value]=\\\"measureColumnsDataByDate\\\" [responsive]=\\\"true\\\">\\r\\n                        <p-column field=\\\"Date\\\" header=\\\"Date\\\" [sortable]=\\\"true\\\">\\r\\n                            <ng-template let-col let-report=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                                <label>{{report.Date | date: 'dd/MM/yyyy'}}</label>\\r\\n                            </ng-template>\\r\\n                        </p-column>\\r\\n                        <p-column header=\\\"Data\\\">\\r\\n                            <ng-template let-col let-report=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                                <div class=\\\"form-group\\\" *ngFor=\\\"let data of report.MeasureColumnData\\\">\\r\\n                                    <label><h6>{{data.ColumnName}}</h6></label>&nbsp;:&nbsp;\\r\\n                                    <input type=\\\"text\\\" readonly [ngModel]=\\\"data.ColumnValue\\\" />\\r\\n                                </div>\\r\\n                            </ng-template>\\r\\n                        </p-column>\\r\\n                    </p-dataTable>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!--Column Data Form-->\\r\\n<div class=\\\"modal fade\\\" data-backdrop=\\\"static\\\" data-keyboard=\\\"false\\\" id=\\\"lg-modal-data\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"modal-large-label\\\" style=\\\"display: none;\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header state modal-primary\\\">\\r\\n                <h4 class=\\\"modal-title\\\" id=\\\"modal-large-label\\\">Add Data</h4>\\r\\n                <button type=\\\"button\\\" #closeDialog class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">×</span></button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>Date</label>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <div class=\\\"input-group\\\">\\r\\n                            <input class=\\\"form-control validation-field\\\" [(ngModel)]=\\\"columnDataDate\\\" placeholder=\\\"yyyy-mm-dd\\\" ngbDatepicker #d=\\\"ngbDatepicker\\\">\\r\\n                            <div class=\\\"input-group-addon\\\" (click)=\\\"d.toggle()\\\">\\r\\n                                <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <small [hidden]=\\\"columnDataDate\\\" class=\\\"text-danger\\\">\\r\\n                            Date is required\\r\\n                        </small>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div *ngFor=\\\"let column of measureColumnsData;let i=index;\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label><b>{{column.ColumnName}} </b></label>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <input type=\\\"number\\\" min=\\\"0\\\" class=\\\"form-control\\\" rows=\\\"5\\\" [(ngModel)]=\\\"column.ColumnValue\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"modal-footer\\\">\\r\\n                    <input type=\\\"button\\\" #closeDialog data-dismiss=\\\"modal\\\" class=\\\"btn btn-primary\\\" value=\\\"Save\\\" (click)=\\\"saveMeasureColumnData()\\\" [disabled]=\\\"!columnDataDate\\\" />\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal fade\\\" id=\\\"lg-modalChart\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"modal-large-label\\\" style=\\\"display:none;\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header state modal-primary\\\">\\r\\n                <h4 class=\\\"modal-title\\\" id=\\\"modal-large-label\\\">Measure Chart </h4>\\r\\n                <button #closeDialogChart type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">×</span></button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\" style=\\\"overflow:scroll\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>Start Date</label>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <div class=\\\"input-group\\\">\\r\\n                            <input class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\" name=\\\"startDate\\\" [(ngModel)]=\\\"startDate\\\" ngbDatepicker #p=\\\"ngbDatepicker\\\">\\r\\n                            <div class=\\\"input-group-addon\\\" (click)=\\\"p.toggle()\\\">\\r\\n                                <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>End Date</label>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <div class=\\\"input-group\\\">\\r\\n                            <input class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\" name=\\\"endDate\\\" [(ngModel)]=\\\"endDate\\\" ngbDatepicker #p1=\\\"ngbDatepicker\\\">\\r\\n                            <div class=\\\"input-group-addon\\\" (click)=\\\"p1.toggle()\\\">\\r\\n                                <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"modal-footer\\\">\\r\\n                    <button type=\\\"button\\\" (click)=\\\"filterChartData();\\\" class=\\\"btn btn-primary\\\">Get Data</button>\\r\\n\\r\\n\\r\\n                </div>\\r\\n                <p-chart type=\\\"line\\\" [data]=\\\"measureColumnsChartData\\\" [options]=\\\"options\\\"></p-chart>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/measure/measure-list.component.html\n// module id = ../../../../../src/app/pages/measure/measure-list.component.html\n// module chunks = measure.module","import { Component, ViewEncapsulation, ViewChild, TemplateRef, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { Observable } from 'rxjs/Observable';\nimport { Http, URLSearchParams } from '@angular/http';\nimport { NgbModal, NgbDateStruct, NgbTimeStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { CalendarModule, ChartModule, MultiSelectModule } from 'primeng/primeng';\nimport { environment } from '../../../environments/environment';\nimport { MeasureService } from './measure.service';\nimport { MeasureViewModel, MeasureColumnChartData, FrequencyViewModel, MeasureColumnViewModel, MeasureObjectiveViewModel, MeasureColumnDataViewModel, MeasureColumnDataByDateViewModel } from './measure.model';\n\nlet apiURL = environment.apiEndpoint;\n\n@Component({\n    selector: 'app-measureList-component',\n    templateUrl: './measure-list.component.html',\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['../../../../node_modules/primeng/resources/primeng.min.css',\n        \"../../../../node_modules/primeng/resources/themes/omega/theme.css\",\n        '../form-elements/controls/file-uploader/file-uploader.component.scss',\n        './measure.component.css'\n    ],\n    providers: [],\n\n\n})\n\nexport class MeasureListComponent implements OnInit {\n    measureId: number = 0;\n    measureList: MeasureViewModel[] = [];\n    measureColumns: MeasureColumnViewModel[] = [];\r\n    measureObjectives: MeasureObjectiveViewModel[] = [];\n    measureColumnsData: MeasureColumnDataViewModel[] = [];\n    measureColumnsDataByDate: MeasureColumnDataByDateViewModel[] = [];\n    columnDataDate: NgbDateStruct = null;\n    measureColumnsChartData: MeasureColumnChartData;\n    public startDate: NgbDateStruct;\n    public endDate: NgbDateStruct;\n    options: any;\n    constructor(private _measureService: MeasureService, private router: Router, private location: Location, private route: ActivatedRoute) {\n        this.options = {\r\n            title: {\r\n                display: true,\r\n                text: 'Measure Chart',\r\n                fontSize: 16\r\n            },\r\n            legend: {\r\n                position: 'bottom'\r\n            },\r\n            trendlines: { 0: {} }\r\n        };\n    }\n    ngOnInit() {\n\n        this.getMeasureList();\n    }\n    getChartData(measureId: number, measureColumnnId: number) {\n        let sD: string = '';\n        let eD: string = '';\n        if (this.startDate != null && this.startDate != undefined)\n            sD = new Date(this.startDate.year, (this.startDate.month - 1), this.startDate.day).toLocaleDateString();\n        if (this.endDate != null && this.endDate != undefined)\n            eD = new Date(this.endDate.year, (this.endDate.month - 1), this.endDate.day).toLocaleDateString();\n        this.measureColumnsChartData = new MeasureColumnChartData();\n        this._measureService.getChartData(measureId, measureColumnnId, sD, eD).subscribe((res: MeasureColumnChartData) => {\n            this.measureColumnsChartData = res;\n        });\n    }\n    getMeasureList() {\n        this._measureService.getMeasureList().subscribe((res: MeasureViewModel[]) => {\n            this.measureList = res;\n        });\r\n    }\n\n    getMeasureColumns(columns: MeasureColumnViewModel[]) {\n        this.measureColumns = columns;\r\n    }\n\n    getMeasureObjectives(objectives: MeasureObjectiveViewModel[]) {\n        this.measureObjectives = objectives;\r\n    }\n\n    addEditMeasureColumnData(measure: MeasureViewModel) {\n        this.measureColumnsData = [];\r\n        this.columnDataDate = null;\r\n        for (let column of measure.MeasureColumns) {\r\n            let data: MeasureColumnDataViewModel = new MeasureColumnDataViewModel();\r\n            data.MeasureColumnDataId = 0;\r\n            data.MeasureId = column.MeasureId;\r\n            data.MeasureColumnId = column.MeasureColumnId;\r\n            data.ColumnName = column.ColumnName;\r\n            data.ColumnValue = '';\r\n            data.Date = '';\r\n            this.measureColumnsData.push(data);\r\n        }\r\n        //(new Date(this.startDate.year, this.startDate.month - 1, this.startDate.day)).toLocaleDateString()\r\n    }\n\n    saveMeasureColumnData() {\n        let dataDate = (new Date(this.columnDataDate.year, this.columnDataDate.month - 1, this.columnDataDate.day)).toLocaleDateString();\n        for (let columnData of this.measureColumnsData) {\n            columnData.Date = dataDate;\n        }\n        this._measureService.saveMeasureColumnData(this.measureColumnsData).subscribe((res) => {\n            console.log(res);\n        }, error => {\n            console.log(error);\n        });\r\n    }\n\n    getMeasureColumnsData(measureId: number) {\n        this._measureService.getMeasureColumnsDataByDate(measureId).subscribe((res: MeasureColumnDataByDateViewModel[]) => {\n            this.measureColumnsDataByDate = res;\n        });\r\n    }\n    public selectedMeasureId: number = 0;\n    showChart(measureId: number) {\n        this.selectedMeasureId = measureId;\n        this.startDate = null;\n        this.endDate = null;\n        this.getChartData(measureId, 0);\r\n    }\n    redirectToNewPage() {\n        this.router.navigate(['/pages/measure']);\n    }\n    filterChartData() {\n        this.getChartData(this.selectedMeasureId, 0);\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/measure/measure-list.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/measure/measure.component.css\n// module id = ../../../../../src/app/pages/measure/measure.component.css\n// module chunks = measure.module","export class FrequencyViewModel {\r\n    FrequencyId: number;\r\n    Description: string;\r\n}\r\n\r\nexport class MeasureViewModel {\r\n    MeasureId: number;\r\n    FrequencyId: number;\r\n    Description: string;\r\n    LastDate: string;\r\n    NextDate: string;\r\n    Target: number;\r\n    MeasureColumns: MeasureColumnViewModel[];\r\n    MeasureObjectives: MeasureObjectiveViewModel[];\r\n    Frequency: FrequencyViewModel;\r\n}\r\n\r\nexport class MeasureColumnViewModel {\r\n    MeasureColumnId: number;\r\n    MeasureId: number;\r\n    ColumnName: string;\r\n}\r\n\r\nexport class MeasureObjectiveViewModel {\r\n    MeasureObjectiveId: number;\r\n    MeasureId: number;\r\n    Description: string;\r\n}\r\n\r\nexport class MeasureColumnDataViewModel {\r\n    MeasureColumnDataId: number;\r\n    MeasureId: number;\r\n    MeasureColumnId: number;\r\n    ColumnValue: string;\r\n    Date: string;\r\n    ColumnName: string;\r\n}\r\n\r\nexport class MeasureColumnDataByDateViewModel {\r\n    MeasureId: number;\r\n    Date: Date;\r\n    MeasureColumnData: MeasureColumnDataViewModel[];\r\n}\r\n\r\nexport class MeasureColumnChartData {\r\n    labels: string[];\r\n    datasets: MeasureColumnDataSet[];\r\n}\r\nexport class MeasureColumnDataSet {\r\n    label: string;\r\n    data: number[];\r\n    fill: boolean;\r\n    borderColor: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/measure/measure.model.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { DirectivesModule } from '../../theme/directives/directives.module';\nimport { DataTableModule, SharedModule, ChartModule, MultiSelectModule } from 'primeng/primeng';\nimport { MeasureComponent } from './newmeasure.component';\nimport { MeasureListComponent } from './measure-list.component';\nimport { MeasureChartComponent } from './measure-chart.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { MeasureService } from './measure.service';\n\nexport const routes = [\n    { path: '', component: MeasureComponent, pathMatch: 'full' },\n    { path: 'measure', component: MeasureComponent, data: { breadcrumb: 'Measure' } },\n    { path: 'list', component: MeasureListComponent, data: { breadcrumb: 'List' } },\n    { path: 'chart', component: MeasureChartComponent, data: { breadcrumb: 'Chart' } },\n    { path: ':id', component: MeasureComponent, data: { breadcrumb: 'Edit' } },\n]\n\n@NgModule({\n    imports: [\n        CommonModule,\n        DirectivesModule,\n        NgbModule.forRoot(),\n        FormsModule,\n        DataTableModule,\n        ChartModule,\n        MultiSelectModule,\n        SharedModule,\n        RouterModule.forChild(routes)\n    ],\n    declarations: [\n        MeasureListComponent,\n        MeasureComponent,\n        MeasureChartComponent\n    ],\n    providers: [MeasureService]\n})\nexport class MeasureModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/measure/measure.module.ts","module.exports = \"<div style=\\\"margin-top:10px;\\\">\\r\\n    <div style=\\\"margin:20px;\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label>Measure</label>\\r\\n            <input name=\\\"description\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"measure.Description\\\" />\\r\\n            <small [hidden]=\\\"measure.Description\\\" class=\\\"text-danger\\\">\\r\\n                Measure is required\\r\\n            </small>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label>Frequency</label>\\r\\n            <select [(ngModel)]=\\\"measure.FrequencyId\\\" class=\\\"form-control\\\">\\r\\n                <option value=\\\"0\\\">--Select--</option>\\r\\n                <option *ngFor=\\\"let frequency of frequencyList\\\"\\r\\n                        value={{frequency.FrequencyId}}>\\r\\n                    {{frequency.Description}}\\r\\n                </option>\\r\\n            </select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label>Target</label>\\r\\n            <input name=\\\"target\\\" type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"measure.Target\\\" />\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" (click)=\\\"onSaveMeasure()\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"measure.Description && measure.FrequencyId ===0\\\">Save</button>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"form-group\\\" *ngIf=\\\"measureId>0\\\">\\r\\n    <h4>Column List</h4>\\r\\n    <p-dataTable [editable]=\\\"true\\\" [value]=\\\"measureColumns\\\" [responsive]=\\\"true\\\" *ngIf=\\\"refreshGrid\\\">\\r\\n        <p-column field=\\\"ColumnName\\\" header=\\\"Column Names\\\" ></p-column>\\r\\n        <p-column styleClass=\\\"col-button\\\">\\r\\n            <ng-template pTemplate=\\\"header\\\">\\r\\n                <div class=\\\"ui-helper-clearfix\\\" style=\\\"width:100%\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#lg-modal\\\" (click)=\\\"addEditMeasureColumn(null,'addmeasure')\\\" [disabled]=\\\"measureId == 0\\\" label=\\\"Add\\\">Add</button>\\r\\n                </div>\\r\\n            </ng-template>\\r\\n            <ng-template let-measure=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                <div class=\\\"ui-helper-clearfix\\\" style=\\\"width:100%\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#lg-modal\\\" (click)=\\\"addEditMeasureColumn(measure,'editmeasure')\\\" [disabled]=\\\"measureId == 0\\\" label=\\\"Add\\\">Edit</button>\\r\\n                </div>\\r\\n            </ng-template>\\r\\n        </p-column>\\r\\n    </p-dataTable>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"modal fade\\\" data-backdrop=\\\"static\\\" data-keyboard=\\\"false\\\" id=\\\"lg-modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"modal-large-label\\\" style=\\\"display: none;\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header state modal-primary\\\">\\r\\n                <h4 class=\\\"modal-title\\\" id=\\\"modal-large-label\\\">Add Column</h4>\\r\\n                <button type=\\\"button\\\" #closeDialog class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">×</span></button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>Column</label>\\r\\n                    <input name=\\\"column\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"measureColumn.ColumnName\\\" />\\r\\n                    <small [hidden]=\\\"measureColumn.ColumnName\\\" class=\\\"text-danger\\\">\\r\\n                        Column is required\\r\\n                    </small>\\r\\n                </div>\\r\\n                <div class=\\\"modal-footer\\\">\\r\\n                    <button type=\\\"button\\\" #closeDialog data-dismiss=\\\"modal\\\" (click)=\\\"onSaveColumn('')\\\" data-toggle=\\\"modal\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!measureColumn.ColumnName\\\">Save</button>\\r\\n                    <button type=\\\"button\\\" (click)=\\\"onSaveColumn('SaveAndAdd')\\\" data-toggle=\\\"modal\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!measureColumn.ColumnName\\\">Save and Add</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<!--Objectives-->\\r\\n<div class=\\\"form-group\\\" *ngIf=\\\"measureId>0\\\">\\r\\n    <h4>Objectives</h4>\\r\\n    <p-dataTable [editable]=\\\"true\\\" [value]=\\\"measureObjectives\\\" [responsive]=\\\"true\\\" *ngIf=\\\"refreshGrid\\\">\\r\\n        <p-column field=\\\"Description\\\" header=\\\"Objectives\\\"></p-column>\\r\\n        <p-column styleClass=\\\"col-button\\\">\\r\\n            <ng-template pTemplate=\\\"header\\\">\\r\\n                <div class=\\\"ui-helper-clearfix\\\" style=\\\"width:100%\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#lg-modal-objective\\\" (click)=\\\"addEditObjective(null,'addobjective')\\\" [disabled]=\\\"measureId == 0\\\" label=\\\"Add\\\">Add</button>\\r\\n                </div>\\r\\n            </ng-template>\\r\\n            <ng-template let-measure=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                <div class=\\\"ui-helper-clearfix\\\" style=\\\"width:100%\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#lg-modal-objective\\\" (click)=\\\"addEditObjective(measure,'editobjective')\\\" [disabled]=\\\"measureId == 0\\\" label=\\\"Add\\\">Edit</button>\\r\\n                </div>\\r\\n            </ng-template>\\r\\n        </p-column>\\r\\n    </p-dataTable>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"modal fade\\\" data-backdrop=\\\"static\\\" data-keyboard=\\\"false\\\" id=\\\"lg-modal-objective\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"modal-large-label\\\" style=\\\"display: none;\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header state modal-primary\\\">\\r\\n                <h4 class=\\\"modal-title\\\" id=\\\"modal-large-label\\\">Add Objective</h4>\\r\\n                <button type=\\\"button\\\" #closeDialog class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">×</span></button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>Objective</label>\\r\\n                    <input name=\\\"column\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"measureObjective.Description\\\" />\\r\\n                    <small [hidden]=\\\"measureObjective.Description\\\" class=\\\"text-danger\\\">\\r\\n                        Objective is required\\r\\n                    </small>\\r\\n                </div>\\r\\n                <div class=\\\"modal-footer\\\">\\r\\n                    <button type=\\\"button\\\" #closeDialog data-dismiss=\\\"modal\\\" (click)=\\\"onSaveObjective('')\\\" data-toggle=\\\"modal\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!measureObjective.Description\\\">Save</button>\\r\\n                    <button type=\\\"button\\\" (click)=\\\"onSaveObjective('SaveAndAdd')\\\" data-toggle=\\\"modal\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!measureObjective.Description\\\">Save and Add</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/measure/newmeasure.component.html\n// module id = ../../../../../src/app/pages/measure/newmeasure.component.html\n// module chunks = measure.module","import { Component, ViewEncapsulation, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\nimport { MeasureService } from './measure.service';\r\nimport { LazyLoadEvent, FilterMetadata } from 'primeng/components/common/api';\r\nimport * as FileSaver from 'file-saver';\r\nimport { MeasureViewModel, FrequencyViewModel, MeasureColumnViewModel, MeasureObjectiveViewModel } from './measure.model';\r\n\r\n@Component({\r\n    selector: 'app-measure-component',\n    templateUrl: './newmeasure.component.html',\r\n    encapsulation: ViewEncapsulation.None,\r\n    styleUrls: ['../../../../node_modules/primeng/resources/primeng.min.css',\r\n        \"../../../../node_modules/primeng/resources/themes/omega/theme.css\",\r\n        '../form-elements/controls/file-uploader/file-uploader.component.scss',\r\n        './measure.component.css'\r\n    ],\r\n    providers: [MeasureService]\r\n})\r\n\r\nexport class MeasureComponent implements OnInit {\r\n    measureId: number = 0;\n    measure: MeasureViewModel;\n    measureColumn: MeasureColumnViewModel;\r\n    measureColumns: MeasureColumnViewModel[] = [];\r\n    measureObjective: MeasureObjectiveViewModel;\r\n    measureObjectives: MeasureObjectiveViewModel[] = [];\r\n    frequencyList: FrequencyViewModel[] = [];\r\n    trainerId: number = 0;\r\n    refreshGrid: boolean = true;\r\n\r\n    constructor(private _measureService: MeasureService, private router: Router, private route: ActivatedRoute ) { }\r\n\r\n    ngOnInit() {        \r\n        this.getTrainerList();\r\n        this.measure = new MeasureViewModel();\r\n        this.measure.Description = '';\r\n        this.measure.MeasureId = 0;\r\n        this.measure.FrequencyId = 0;\r\n        this.measure.Target = null;\r\n\r\n        this.measureColumn = new MeasureColumnViewModel();\r\n        this.measureColumn.MeasureColumnId = 0;\r\n        this.measureColumn.MeasureId = this.measureId;\r\n        this.measureColumn.ColumnName = \"\";\r\n\r\n        this.measureObjective = new MeasureObjectiveViewModel();\r\n        this.measureObjective.MeasureObjectiveId = 0;\r\n        this.measureObjective.MeasureId = this.measureId;\r\n        this.measureObjective.Description = \"\";\r\n\r\n        this.route.params.subscribe(params => {\r\n            this.measureId = params['id'];\r\n        });\n        if (this.measureId === undefined || this.measureId === null || this.measureId === 0) {\n            this.measure.MeasureId = 0;\r\n        }\n        else\n        {\n            this.getMeasure(this.measureId);\r\n        }\r\n    }\r\n\r\n    getTrainerList() {\r\n        this._measureService.getFrequency().subscribe((res: FrequencyViewModel[]) => {\r\n            this.frequencyList = res;\r\n        });\r\n    }\r\n\r\n    getMeasure(id) {\n        this._measureService.getMeasure(id).subscribe((res: MeasureViewModel) => {\n            this.measure = res; \n            this.measureColumns = this.measure.MeasureColumns;\n            this.measureObjectives = this.measure.MeasureObjectives;\n        });\n    }\r\n\r\n    onSaveMeasure() {\r\n        debugger;\n        this._measureService.saveMeasure(this.measure).subscribe((res: number) => {\n            console.log(res);\n            this.router.navigate(['/pages/measure/' + res.toString()]);\n            }, error => {\n                console.log(error);\n            });\n    }\r\n\r\n    addEditMeasureColumn(measure: MeasureColumnViewModel, action: string) {\n        if (action == \"addmeasure\") {\r\n            this.measureColumn = new MeasureColumnViewModel();\r\n            this.measureColumn.MeasureColumnId = 0;\r\n            this.measureColumn.MeasureId = this.measureId;\r\n            this.measureColumn.ColumnName = \"\";\r\n        }\r\n        else {\r\n            this.measureColumn = measure;\r\n        }\r\n    }\r\n\r\n    onSaveColumn(action: string) {\n        this.refreshGrid = false;\n        let isNewColumn: number = this.measureColumn.MeasureColumnId;\n        this._measureService.saveMeasureColumn(this.measureColumn).subscribe((res: MeasureColumnViewModel) => {\n            console.log(res);\n            if (isNewColumn === 0)\n            {\n                this.measureColumns.push(res);\r\n            }            \n            this.refreshGrid = true;\n            if (action === \"SaveAndAdd\")\n            {\n                this.measureColumn = new MeasureColumnViewModel();\r\n                this.measureColumn.MeasureColumnId = 0;\r\n                this.measureColumn.MeasureId = this.measureId;\r\n                this.measureColumn.ColumnName = \"\";\r\n            }\n        }, error => {\n            console.log(error);\n        });\n    }\r\n\r\n    addEditObjective(objective: MeasureObjectiveViewModel, action: string) {\n        if (action == \"addobjective\") {\r\n            this.measureObjective = new MeasureObjectiveViewModel();\r\n            this.measureObjective.MeasureObjectiveId = 0;\r\n            this.measureObjective.MeasureId = this.measureId;\r\n            this.measureObjective.Description = \"\";\r\n        }\r\n        else {\r\n            this.measureObjective = objective;\r\n        }\r\n    }\r\n\r\n    onSaveObjective(action: string) {\n        this.refreshGrid = false;\n        let isNewColumn: number = this.measureObjective.MeasureObjectiveId;\n        this._measureService.saveMeasureObjective(this.measureObjective).subscribe((res: MeasureObjectiveViewModel) => {\n            console.log(res);\n            if (isNewColumn === 0) {\n                this.measureObjectives.push(res);\r\n            }\n            this.refreshGrid = true;\n            if (action === \"SaveAndAdd\") {\n                this.measureObjective = new MeasureObjectiveViewModel();\r\n                this.measureObjective.MeasureObjectiveId = 0;\r\n                this.measureObjective.MeasureId = this.measureId;\r\n                this.measureObjective.Description = \"\";\r\n            }\n        }, error => {\n            console.log(error);\n        });\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/measure/newmeasure.component.ts"],"sourceRoot":"webpack:///"}