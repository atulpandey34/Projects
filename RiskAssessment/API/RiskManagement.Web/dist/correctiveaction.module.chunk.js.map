{"version":3,"sources":["C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/correctiveaction/correctiveaction.actionrequired.conmponent.html","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/correctiveaction/correctiveaction.actionrequired.conmponent.ts","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/correctiveaction/correctiveaction.component.html","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/correctiveaction/correctiveaction.component.ts","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/correctiveaction/correctiveaction.model.ts","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/correctiveaction/correctiveaction.module.ts","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/correctiveaction/correctiveaction.service.ts","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/correctiveaction/correctiveactionlist.component.html","C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/correctiveaction/correctiveactionlist.component.ts"],"names":[],"mappings":"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","file":"correctiveaction.module.chunk.js","sourcesContent":["module.exports = \"<div class=\\\"modal-body\\\">\\r\\n    <form [formGroup]=\\\"myForm\\\" novalidate (ngSubmit)=\\\"saveeventformdata(myForm.value)\\\">\\r\\n\\r\\n        <div style=\\\"border: 1px solid black;margin-top:10px;\\\">\\r\\n            <div style=\\\"margin:20px;\\\">\\r\\n                <div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Action</label>\\r\\n                        <!--<input type=\\\"text\\\" formControlName=\\\"title\\\" class=\\\"form-control\\\">-->\\r\\n                        <textarea formControlName=\\\"Title\\\" id=\\\"Title\\\" rows=\\\"6\\\" class=\\\"form-control validation-field\\\"></textarea>\\r\\n                        <!--display error message if agenda is not valid-->\\r\\n                        <small [hidden]=\\\"myForm.controls.Title.valid\\\" class=\\\"text-danger\\\">\\r\\n                            Action is required\\r\\n                        </small>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Due Date</label>\\r\\n                        <!--<input type=\\\"text\\\" formControlName=\\\"duedate\\\" type=\\\"date\\\" class=\\\"form-control\\\">-->\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input class=\\\"form-control validation-field\\\" placeholder=\\\"yyyy-mm-dd\\\" name=\\\"dueDate\\\" formControlName=\\\"dueDateStruct\\\" ngbDatepicker #d=\\\"ngbDatepicker\\\">\\r\\n                                <div class=\\\"input-group-addon\\\" (click)=\\\"d.toggle()\\\">\\r\\n                                    <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <!--display error message if agenda is not valid-->\\r\\n                        <small [hidden]=\\\"myForm.controls.dueDateStruct.valid\\\" class=\\\"text-danger\\\">\\r\\n                            Due date is required\\r\\n                        </small>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Assigned By</label>\\r\\n                        <select formControlName=\\\"AssignedBy\\\" class=\\\"form-control validation-field\\\">\\r\\n                            <option value=\\\"\\\">--Select--</option>\\r\\n                            <option *ngFor=\\\"let evebtStatus of responsiblePersonOptions\\\"\\r\\n                                    value={{evebtStatus.id}}>\\r\\n                                {{evebtStatus.name}}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                        <small [hidden]=\\\"myForm.controls.AssignedBy.valid\\\" class=\\\"text-danger\\\">\\r\\n                            Assigned By is required .\\r\\n                        </small>\\r\\n                    </div>\\r\\n                    <!--<div class=\\\"form-group\\\">\\r\\n                        <label>Category</label>\\r\\n                        <select formControlName=\\\"CategoryID\\\" class=\\\"form-control validation-field\\\">\\r\\n                            <option value=\\\"\\\">--Select--</option>\\r\\n                            <option *ngFor=\\\"let evebtStatus of categoryList\\\"\\r\\n                                    value={{evebtStatus.CategoryID}}>\\r\\n                                {{evebtStatus.CategoryName}}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                      \\r\\n                        <small [hidden]=\\\"myForm.controls.CategoryID.valid\\\" class=\\\"text-danger\\\">\\r\\n                            Category is required .\\r\\n                        </small>\\r\\n                    </div>-->\\r\\n                    <!--<div class=\\\"form-group\\\">\\r\\n                        <label>Source</label>\\r\\n                        <select formControlName=\\\"ActionSourceID\\\" class=\\\"form-control validation-field\\\">\\r\\n                            <option value=\\\"\\\">--Select--</option>\\r\\n                            <option *ngFor=\\\"let evebtStatus of actionSourceList\\\"\\r\\n                                    value={{evebtStatus.ActionSourceID}}>\\r\\n                                {{evebtStatus.Source}}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                        \\r\\n                        <small [hidden]=\\\"myForm.controls.ActionSourceID.valid\\\" class=\\\"text-danger\\\">\\r\\n                            Action Source is required .\\r\\n                        </small>\\r\\n                    </div>-->\\r\\n                    <div>\\r\\n                        <label>Root Cause</label>\\r\\n                        <textarea formControlName=\\\"RootCause\\\" rows=\\\"6\\\" class=\\\"form-control validation-field\\\"></textarea>\\r\\n                        <!--<input type=\\\"text\\\" formControlName=\\\"title\\\" class=\\\"form-control\\\">-->\\r\\n                        <!--display error message if agenda is not valid-->\\r\\n\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Action Taken</label>\\r\\n                        <!--<input type=\\\"text\\\" formControlName=\\\"title\\\" class=\\\"form-control\\\">-->\\r\\n                        <textarea formControlName=\\\"ActionTaken\\\" rows=\\\"6\\\" class=\\\"form-control validation-field\\\"></textarea>\\r\\n                        <!--display error message if agenda is not valid-->\\r\\n                        <small [hidden]=\\\"myForm.controls.ActionTaken.valid\\\" class=\\\"text-danger\\\">\\r\\n                            Action Taken is required\\r\\n                        </small>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n        <!-- we will place our fields here -->\\r\\n        <!--<button type=\\\"submit\\\" [disabled]=\\\"!myForm.valid\\\">Submit</button>-->\\r\\n\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"submit\\\" #buttonSubmit class=\\\"btn btn-primary\\\" [disabled]=\\\"!myForm.valid\\\">Save</button>\\r\\n        </div>\\r\\n    </form>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/correctiveaction/correctiveaction.actionrequired.conmponent.html\n// module id = ../../../../../src/app/pages/correctiveaction/correctiveaction.actionrequired.conmponent.html\n// module chunks = correctiveaction.module","\nimport { Component, ViewEncapsulation, ViewChild, TemplateRef, OnInit } from '@angular/core';\n\nimport { Subject } from 'rxjs/Subject';\nimport { Validators, FormGroup, FormArray, FormBuilder } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { EventActionService } from '../eventactions/eventaction.service';\nimport { Location } from '@angular/common';\nimport { IMultiSelectOption, IMultiSelectSettings, IMultiSelectTexts } from 'angular-2-dropdown-multiselect';\nimport { Observable } from 'rxjs/Observable';\nimport { Http, URLSearchParams } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport { LocationModel, TitleModel, SubTitleModel, Title, SubTitle, Action, EventActionStatusModel, events, EventFilterModel, EventViewModel, EventDataModel, EventFilterViewModel, EventAttendeeDataModel, ActionDataModel, ActionResponsiblePersonDataModel, AgendaDataModel } from '../calendar/formeventdata';\nimport { CategoryModel, ActionSourceModel, ActionCommentsListModel, CorrectiveActionModel } from '../eventactions/eventaction.model';\nimport { MasterEventDataService } from '../calendar/Mastereventdata';\nimport { CorrectiveActionService } from '../correctiveaction/correctiveaction.service';\nimport { CorrectiveActionDataModel } from '../correctiveaction/correctiveaction.model';\n\n@Component({\n    selector: 'app-correctiveactionrequiored',\n    templateUrl: './correctiveaction.actionrequired.conmponent.html',\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['../../../../node_modules/primeng/resources/primeng.min.css'\n\n    ],\n    providers: [EventActionService, MasterEventDataService, CorrectiveActionService],\n\n\n})\n\nexport class CorrectiveActionRequiredComponent implements OnInit {\n\r\n    actionID: number = 0;\n    public responsiblePersonOptions: IMultiSelectOption[] = [];\n    myOptions: IMultiSelectOption[];\n    eventActionStatusList: EventActionStatusModel[] = [];\n    public responsiblePersonTexts: IMultiSelectTexts = {\n        checkAll: 'Select all',\n        uncheckAll: 'Unselect all',\n        checked: 'item selected',\n        checkedPlural: 'items selected',\n        searchPlaceholder: 'Find...',\n        defaultTitle: 'Select',\n        allSelected: 'All selected',\n    };\n    public responsiblePersonSettings: IMultiSelectSettings = {\n        enableSearch: true,\n        checkedStyle: 'fontawesome',\n        buttonClasses: 'btn btn-secondary btn-block',\n        dynamicTitleMaxItems: 3,\n        displayAllSelectedText: true,\n        maxHeight: '300px'\n    };\n    correctiveList: CorrectiveActionModel[];\n    onResponsiblePersonChange(s) {\n    }\n    actionSourceList: ActionSourceModel[] = [];\n    categoryList: CategoryModel[] = [];\n\n    constructor(private _CorrectiveActionService: CorrectiveActionService, private router: Router, private location: Location, private _fb: FormBuilder, private _dataService: EventActionService, private route: ActivatedRoute, private _masterDataService: MasterEventDataService) { }\n    ngOnInit() {\n\n        let dataModel: CorrectiveActionDataModel = new CorrectiveActionDataModel();\n        dataModel.AssignedBy = sessionStorage[\"UserId\"] as number;\n        this.addhtmltoform(dataModel);\n        this.route.params.subscribe(params => {\r\n            this.actionID = params['id'] as number; //log the value of id\r\n        });\n        this._masterDataService.getEventActionStatusList().subscribe((res: EventActionStatusModel[]) => {\n            this.eventActionStatusList = [];\n            for (let eventAction of res) {\n                let eve: EventActionStatusModel = new EventActionStatusModel();\n                eve.EventActionStatusID = eventAction.EventActionStatusID;\n                eve.ActionName = eventAction.ActionName;\n                this.eventActionStatusList.push(\n                    eve);\n            }\n        });\n        this._masterDataService.getUserList().subscribe(res => { this.myOptions = res; this.responsiblePersonOptions = res; });\n        this._dataService.getAllCategories().subscribe(res => { this.categoryList = res; });\n        this._dataService.getAllActionSource().subscribe(res => { this.actionSourceList = res; });\n        this._dataService.getAllCorrectedAction().subscribe((res: CorrectiveActionModel[]) => {\n            this.correctiveList = res;\n        });\n        if (this.actionID > 0) {\n\n\n            this._CorrectiveActionService.getCorrectiveActionByActionId(this.actionID).subscribe((res: CorrectiveActionDataModel) => {\n\n                this.addhtmltoform(res);\n\n            });\n        }\n\n    }\n    acitonCommentList: ActionCommentsListModel[] = [];\n    public myForm: FormGroup; // our form model\n\r\n\r\n    addhtmltoform(actionModel: CorrectiveActionDataModel) {\n        this.myForm = this._fb.group({\n            ActionID: [actionModel.ActionID],\n            CorrectiveActionId: [actionModel.CorrectiveActionId],\n            Title: [actionModel.Title, Validators.required],\n            dueDateStruct: [{ year: new Date(actionModel.Duedate).getFullYear(), month: new Date(actionModel.Duedate).getMonth() + 1, day: new Date(actionModel.Duedate).getDate() }, Validators.required],\n            CategoryID: [actionModel.CategoryID],\n            ActionSourceID: [actionModel.ActionSourceID],\n            RootCause: [actionModel.RootCause],\n            AssignedBy: [actionModel.AssignedBy, Validators.required],\n            ActionTaken: [actionModel.ActionTaken, Validators.required],\n        });\n    }\n\n\n\n\n\n    saveeventformdata(data: CorrectiveActionDataModel) {\n        data.Duedate = new Date(data.dueDateStruct.year, data.dueDateStruct.month - 1, data.dueDateStruct.day).toLocaleDateString();\n        this._CorrectiveActionService.addCorrectiveActionFromAction(data).subscribe((res: string) => {\n            if (res == \"added successfully\") {\n                this.router.navigate(['/pages/correctiveaction/list']);\n            }\n        });\n    }\n\n\n\n\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/correctiveaction/correctiveaction.actionrequired.conmponent.ts","module.exports = \"<div class=\\\"modal-body\\\">\\r\\n    <form [formGroup]=\\\"myForm\\\" novalidate (ngSubmit)=\\\"saveeventformdata(myForm.value)\\\">\\r\\n\\r\\n        <div style=\\\"border: 1px solid black;margin-top:10px;\\\">\\r\\n            <div style=\\\"margin:20px;\\\">\\r\\n                <div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Action</label>\\r\\n                        <!--<input type=\\\"text\\\" formControlName=\\\"title\\\" class=\\\"form-control\\\">-->\\r\\n                        <textarea [attr.disabled]=\\\"disabledAllControl? true : null\\\" formControlName=\\\"Title\\\" id=\\\"Title\\\" rows=\\\"6\\\" class=\\\"form-control validation-field\\\"></textarea>\\r\\n                        <!--display error message if agenda is not valid-->\\r\\n                        <small [hidden]=\\\"myForm.controls.Title.valid\\\" class=\\\"text-danger\\\">\\r\\n                            Action is required\\r\\n                        </small>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Due Date</label>\\r\\n                        <!--<input type=\\\"text\\\" formControlName=\\\"duedate\\\" type=\\\"date\\\" class=\\\"form-control\\\">-->\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input [attr.disabled]=\\\"disabledAllControl? true : null\\\" class=\\\"form-control validation-field\\\" placeholder=\\\"yyyy-mm-dd\\\" name=\\\"dueDate\\\" formControlName=\\\"dueDateStruct\\\" ngbDatepicker #d=\\\"ngbDatepicker\\\">\\r\\n                                <div class=\\\"input-group-addon\\\" (click)=\\\"d.toggle()\\\">\\r\\n                                    <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <!--display error message if agenda is not valid-->\\r\\n                        <small [hidden]=\\\"myForm.controls.dueDateStruct.valid\\\" class=\\\"text-danger\\\">\\r\\n                            Due date is required\\r\\n                        </small>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Assigned By</label>\\r\\n                        <select [attr.disabled]=\\\"disabledAllControl? true : null\\\" formControlName=\\\"AssignedBy\\\" class=\\\"form-control validation-field\\\">\\r\\n                            <option value=\\\"\\\">--Select--</option>\\r\\n                            <option *ngFor=\\\"let evebtStatus of responsiblePersonOptions\\\"\\r\\n                                    value={{evebtStatus.id}}>\\r\\n                                {{evebtStatus.name}}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                        <small [hidden]=\\\"myForm.controls.AssignedBy.valid\\\" class=\\\"text-danger\\\">\\r\\n                            Assigned By is required .\\r\\n                        </small>\\r\\n                    </div>\\r\\n                    <!--<div style=\\\"\\\" class=\\\"form-group\\\">\\r\\n                        <label>Category</label>\\r\\n                        <select [attr.disabled]=\\\"disabledAllControl? true : null\\\" formControlName=\\\"CategoryID\\\" class=\\\"form-control validation-field\\\">\\r\\n                            <option value=\\\"\\\">--Select--</option>\\r\\n                            <option *ngFor=\\\"let evebtStatus of categoryList\\\"\\r\\n                                    value={{evebtStatus.CategoryID}}>\\r\\n                                {{evebtStatus.CategoryName}}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                      \\r\\n                        <small [hidden]=\\\"myForm.controls.CategoryID.valid\\\" class=\\\"text-danger\\\">\\r\\n                            Category is required .\\r\\n                        </small>\\r\\n                    </div>-->\\r\\n                    <!--<div class=\\\"form-group\\\">\\r\\n                        <label>Source</label>\\r\\n                        <select [attr.disabled]=\\\"disabledAllControl? true : null\\\" formControlName=\\\"ActionSourceID\\\" class=\\\"form-control validation-field\\\">\\r\\n                            <option value=\\\"\\\">--Select--</option>\\r\\n                            <option *ngFor=\\\"let evebtStatus of actionSourceList\\\"\\r\\n                                    value={{evebtStatus.ActionSourceID}}>\\r\\n                                {{evebtStatus.Source}}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                       \\r\\n                        <small [hidden]=\\\"myForm.controls.ActionSourceID.valid\\\" class=\\\"text-danger\\\">\\r\\n                            Action Source is required .\\r\\n                        </small>\\r\\n                    </div>-->\\r\\n                    <div>\\r\\n                        <label>Root Cause</label>\\r\\n                        <textarea [attr.disabled]=\\\"disabledAllControl? true : null\\\" formControlName=\\\"RootCause\\\" rows=\\\"6\\\" class=\\\"form-control validation-field\\\"></textarea>\\r\\n                        <!--<input type=\\\"text\\\" formControlName=\\\"title\\\" class=\\\"form-control\\\">-->\\r\\n                        <!--display error message if agenda is not valid-->\\r\\n\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Action Taken</label>\\r\\n                        <!--<input type=\\\"text\\\" formControlName=\\\"title\\\" class=\\\"form-control\\\">-->\\r\\n                        <textarea [attr.disabled]=\\\"disabledAllControl? true : null\\\" formControlName=\\\"ActionTaken\\\" rows=\\\"6\\\" class=\\\"form-control validation-field\\\"></textarea>\\r\\n                        <!--display error message if agenda is not valid-->\\r\\n                        <small [hidden]=\\\"myForm.controls.ActionTaken.valid\\\" class=\\\"text-danger\\\">\\r\\n                            Action Taken is required\\r\\n                        </small>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\" [hidden]=\\\"hiddenControl\\\">\\r\\n                        <div class=\\\"custom-controls-stacked\\\">\\r\\n                            <label class=\\\"custom-control custom-checkbox\\\">\\r\\n                                <input formControlName=\\\"CorrectiveActionNeeded\\\" type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked>\\r\\n                                <span class=\\\"custom-control-indicator\\\"></span>\\r\\n                                <span class=\\\"custom-control-description\\\">Corrective Action Needed</span>\\r\\n                            </label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\" [hidden]=\\\"hiddenControl\\\">\\r\\n                        <label>Identified Corrective Action</label>\\r\\n                        <!--<input type=\\\"text\\\" formControlName=\\\"title\\\" class=\\\"form-control\\\">-->\\r\\n                        <textarea rows=\\\"6\\\" formControlName=\\\"IdentifiedCorrectiveAction\\\" class=\\\"form-control validation-field\\\" ></textarea>\\r\\n                        <!--display error message if agenda is not valid-->\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\" [hidden]=\\\"hiddenControl\\\">\\r\\n                        <label>Risk Level</label>\\r\\n                        <select formControlName=\\\"RiskLevel\\\" class=\\\"form-control validation-field\\\">\\r\\n                            <option value=\\\"\\\">--Select--</option>\\r\\n                            <option value=\\\"1\\\">High</option>\\r\\n                            <option value=\\\"2\\\">Medium</option>\\r\\n                            <option value=\\\"3\\\">Low</option>\\r\\n                        </select>\\r\\n\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Assigned To</label>\\r\\n                        <ss-multiselect-dropdown [options]=\\\"responsiblePersonOptions\\\" [texts]=\\\"responsiblePersonTexts\\\" [settings]=\\\"responsiblePersonSettings\\\" formControlName=\\\"actionResponsiblePersonDataModel\\\"\\r\\n                                                 ></ss-multiselect-dropdown>\\r\\n                        <small [hidden]=\\\"myForm.controls.actionResponsiblePersonDataModel.valid\\\" class=\\\"text-danger\\\">\\r\\n                            Assigned To is required\\r\\n                        </small>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\" [hidden]=\\\"hiddenControl\\\">\\r\\n                        <label>Responsible Party</label>\\r\\n                        <select formControlName=\\\"ResponsibleParty\\\" class=\\\"form-control validation-field\\\">\\r\\n                            <option value=\\\"\\\">--Select--</option>\\r\\n                            <option *ngFor=\\\"let evebtStatus of responsiblePersonOptions\\\"\\r\\n                                    value={{evebtStatus.id}}>\\r\\n                                {{evebtStatus.name}}\\r\\n                            </option>\\r\\n                        </select>\\r\\n\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\" >\\r\\n                        <label>Corrective Action Due Date</label>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\" name=\\\"CorrectiveActionDueDateStruct\\\" formControlName=\\\"CorrectiveActionDueDateStruct\\\" ngbDatepicker #d1=\\\"ngbDatepicker\\\">\\r\\n                                <div class=\\\"input-group-addon\\\" (click)=\\\"d1.toggle()\\\">\\r\\n                                    <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <small [hidden]=\\\"myForm.controls.CorrectiveActionDueDateStruct.valid\\\" class=\\\"text-danger\\\">\\r\\n                                Corrective Action Due Date is required\\r\\n                            </small>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Date resolved</label>\\r\\n                        <!--<input type=\\\"text\\\" formControlName=\\\"duedate\\\" type=\\\"date\\\" class=\\\"form-control\\\">-->\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input class=\\\"form-control validation-field\\\" placeholder=\\\"yyyy-mm-dd\\\" name=\\\"dateResolved\\\" formControlName=\\\"dateResolved\\\" ngbDatepicker #d2=\\\"ngbDatepicker\\\">\\r\\n                                <div class=\\\"input-group-addon\\\" (click)=\\\"d2.toggle()\\\">\\r\\n                                    <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <!--display error message if agenda is not valid-->\\r\\n                        <small [hidden]=\\\"myForm.controls.dueDateStruct.valid\\\" class=\\\"text-danger\\\">\\r\\n                            Due resolved is required\\r\\n                        </small>\\r\\n                    </div>\\r\\n\\r\\n                    <div style=\\\"border:1px solid black;margin-top:10px;\\\" [hidden]=\\\"hiddenControl\\\">\\r\\n                        <div style=\\\"margin:20px;\\\" formArrayName=\\\"resultList\\\">\\r\\n                            <span class=\\\"fa fa-plus-square pull-right\\\" (click)=\\\"AddMoreResultList()\\\"></span>\\r\\n                            <div style=\\\"border-bottom:1px solid black;\\\" *ngFor=\\\"let agnda of myForm['controls'].resultList['controls']; let i=index\\\">\\r\\n                                <div>\\r\\n                                    <!--<span>Agenda {{i + 1}}</span>-->\\r\\n                                    \\r\\n\\r\\n\\r\\n                                    <span class=\\\"fa fa-remove pull-right\\\" *ngIf=\\\"myForm.controls.resultList.controls.length > 0\\\" (click)=\\\"RemoveList(i)\\\">\\r\\n                                    </span>\\r\\n                                </div>\\r\\n                                <div [formGroupName]=\\\"i\\\">\\r\\n                                    <!--agenda-->\\r\\n                                    <div>\\r\\n\\r\\n                                        <label>Corrective Action result</label>\\r\\n                                        <!--<a (click)=\\\"AddMoreAgenda()\\\" style=\\\"cursor: default;float:right;\\\">\\r\\n                                            +\\r\\n                                        </a>-->\\r\\n\\r\\n                                        <input type=\\\"text\\\" formControlName=\\\"Result\\\" class=\\\"form-control\\\">\\r\\n                                        <!--display error message if agenda is not valid-->\\r\\n                                        <small [hidden]=\\\"myForm.controls.resultList.controls[i].controls.Result.valid\\\" class=\\\"text-danger\\\">\\r\\n                                            Corrective Action result is required\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <!--<div style=\\\"margin:20px;\\\" class=\\\"margin-20\\\">\\r\\n                            <a (click)=\\\"AddMoreAgenda()\\\" style=\\\"cursor: default\\\">\\r\\n                                Add another Agenda +\\r\\n                            </a>\\r\\n                        </div>-->\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\" [hidden]=\\\"hiddenControl\\\">\\r\\n                        <div class=\\\"custom-controls-stacked\\\">\\r\\n                            <label class=\\\"custom-control custom-checkbox\\\">\\r\\n                                <input formControlName=\\\"IssueResolved\\\" type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked>\\r\\n                                <span class=\\\"custom-control-indicator\\\"></span>\\r\\n                                <span class=\\\"custom-control-description\\\">Issue Resolved</span>\\r\\n                            </label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n        <!-- we will place our fields here -->\\r\\n        <!--<button type=\\\"submit\\\" [disabled]=\\\"!myForm.valid\\\">Submit</button>-->\\r\\n\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"submit\\\" #buttonSubmit class=\\\"btn btn-primary\\\" [disabled]=\\\"!myForm.valid\\\">Save</button>\\r\\n        </div>\\r\\n    </form>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/correctiveaction/correctiveaction.component.html\n// module id = ../../../../../src/app/pages/correctiveaction/correctiveaction.component.html\n// module chunks = correctiveaction.module","\nimport { Component, ViewEncapsulation, ViewChild, TemplateRef, OnInit } from '@angular/core';\n\nimport { Subject } from 'rxjs/Subject';\nimport { Validators, FormGroup, FormArray, FormBuilder } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { EventActionService } from '../eventactions/eventaction.service';\nimport { Location } from '@angular/common';\nimport { IMultiSelectOption, IMultiSelectSettings, IMultiSelectTexts } from 'angular-2-dropdown-multiselect';\nimport { Observable } from 'rxjs/Observable';\nimport { Http, URLSearchParams } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport { LocationModel, TitleModel, SubTitleModel, Title, SubTitle, Action, EventActionStatusModel, events, EventFilterModel, EventViewModel, EventDataModel, EventFilterViewModel, EventAttendeeDataModel, ActionDataModel, ActionResponsiblePersonDataModel, AgendaDataModel } from '../calendar/formeventdata';\nimport { CategoryModel, ActionSourceModel, ActionCommentsListModel, CorrectiveActionModel } from '../eventactions/eventaction.model';\nimport { MasterEventDataService } from '../calendar/Mastereventdata';\nimport { CorrectiveActionService } from '../correctiveaction/correctiveaction.service';\nimport { CorrectiveActionDataModel } from '../correctiveaction/correctiveaction.model';\n\n@Component({\n    selector: 'app-correctiveaction',\n    templateUrl: './correctiveaction.component.html',\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['../../../../node_modules/primeng/resources/primeng.min.css'\n\n    ],\n    providers: [EventActionService, MasterEventDataService, CorrectiveActionService],\n\n\n})\n\nexport class CorrectiveActionComponent implements OnInit {\n    disabledAllControl: boolean = false;\r\n    hiddenControl: boolean = true;\r\n    correctiveActionID: number = 0;\n    public responsiblePersonOptions: IMultiSelectOption[] = [];\n    myOptions: IMultiSelectOption[];\n    eventActionStatusList: EventActionStatusModel[] = [];\n    public responsiblePersonTexts: IMultiSelectTexts = {\n        checkAll: 'Select all',\n        uncheckAll: 'Unselect all',\n        checked: 'item selected',\n        checkedPlural: 'items selected',\n        searchPlaceholder: 'Find...',\n        defaultTitle: 'Select',\n        allSelected: 'All selected',\n    };\n    public responsiblePersonSettings: IMultiSelectSettings = {\n        enableSearch: true,\n        checkedStyle: 'fontawesome',\n        buttonClasses: 'btn btn-secondary btn-block',\n        dynamicTitleMaxItems: 3,\n        displayAllSelectedText: true,\n        maxHeight: '300px'\n    };\n    correctiveList: CorrectiveActionModel[];\n    onResponsiblePersonChange(s) {\n    }\n    actionSourceList: ActionSourceModel[] = [];\n    categoryList: CategoryModel[] = [];\n\n    constructor(private _CorrectiveActionService: CorrectiveActionService, private router: Router, private location: Location, private _fb: FormBuilder, private _dataService: EventActionService, private route: ActivatedRoute, private _masterDataService: MasterEventDataService) { }\n    ngOnInit() {\n\n        let dataModel: CorrectiveActionDataModel = new CorrectiveActionDataModel();\n        dataModel.AssignedBy = sessionStorage[\"UserId\"] as number;\n        this.addhtmltoform(dataModel);\n        const control = <FormArray>this.myForm.controls['resultList'];\n        control.removeAt(0);\n        this.route.params.subscribe(params => {\r\n            this.correctiveActionID = params['id'] as number; //log the value of id\r\n        });\n        this._masterDataService.getEventActionStatusList().subscribe((res: EventActionStatusModel[]) => {\n            this.eventActionStatusList = [];\n            for (let eventAction of res) {\n                let eve: EventActionStatusModel = new EventActionStatusModel();\n                eve.EventActionStatusID = eventAction.EventActionStatusID;\n                eve.ActionName = eventAction.ActionName;\n                this.eventActionStatusList.push(\n                    eve);\n            }\n        });\n        this._masterDataService.getUserList().subscribe(res => { this.myOptions = res; this.responsiblePersonOptions = res; });\n        this._dataService.getAllCategories().subscribe(res => { this.categoryList = res; });\n        this._dataService.getAllActionSource().subscribe(res => { this.actionSourceList = res; });\n        this._dataService.getAllCorrectedAction().subscribe((res: CorrectiveActionModel[]) => {\n            this.correctiveList = res;\n        });\n        if (this.correctiveActionID > 0) {\n\n            this.disabledAllControl = true;\n            this.hiddenControl = false;\n            this._CorrectiveActionService.getCorrectiveActionData(this.correctiveActionID).subscribe((res: CorrectiveActionDataModel) => {\n\n                this.addhtmltoform(res);\n\n                //control.removeAt(0);\n                for (let x of res.ResultList as string[]) {\n                    control.push(this.initResult(x));\n                }\n\n            });\n        }\n\n    }\n    RemoveList(i: number) {\n        const control = <FormArray>this.myForm.controls['resultList'];\n        control.removeAt(i);\n    }\n    AddMoreResultList() {\n        // add action to the list\n        const control = <FormArray>this.myForm.controls['resultList'];\n        control.push(this.initResult());\n    }\n    acitonCommentList: ActionCommentsListModel[] = [];\n    public myForm: FormGroup; // our form model\n\r\n\r\n    addhtmltoform(actionModel: CorrectiveActionDataModel) {\n        if (actionModel.ActionResponsiblePersonDataModel == null || actionModel.ActionResponsiblePersonDataModel == undefined)\n            actionModel.ActionResponsiblePersonDataModel = [new ActionResponsiblePersonDataModel()];\n        this.myForm = this._fb.group({\n            ActionID: [actionModel.ActionID],\n            CorrectiveActionId: [actionModel.CorrectiveActionId],\n            Title: [actionModel.Title, Validators.required],\n            dueDateStruct: [{ year: new Date(actionModel.Duedate).getFullYear(), month: new Date(actionModel.Duedate).getMonth() + 1, day: new Date(actionModel.Duedate).getDate() }, Validators.required],\n            CategoryID: [actionModel.CategoryID],\n            ActionSourceID: [actionModel.ActionSourceID],\n            RootCause: [actionModel.RootCause],\n            AssignedBy: [actionModel.AssignedBy, Validators.required],\n            ActionTaken: [actionModel.ActionTaken, Validators.required],\n            CorrectiveActionNeeded: [actionModel.CorrectiveActionNeeded],\n            IdentifiedCorrectiveAction: [actionModel.IdentifiedCorrectiveAction],\n            RiskLevel: [actionModel.RiskLevel],\n            ResponsibleParty: [actionModel.ResponsibleParty],\n            CorrectiveActionDueDateStruct: [{ year: new Date(actionModel.CorrectiveActionDueDate).getFullYear(), month: new Date(actionModel.CorrectiveActionDueDate).getMonth() + 1, day: new Date(actionModel.CorrectiveActionDueDate).getDate() }, Validators.required],\n            IssueResolved: [actionModel.IssueResolved],\n            dateResolved: [{ year: new Date(actionModel.DateResolved).getFullYear(), month: new Date(actionModel.DateResolved).getMonth() + 1, day: new Date(actionModel.DateResolved).getDate() }, Validators.required],\n            actionResponsiblePersonDataModel: [actionModel.ActionResponsiblePersonDataModel.map(x => x.UserID), Validators.required],\n            resultList:\n            this._fb.array([\n                this.initResult()\n            ]),\n        });\n    }\n    initResult(result: string = '') {\n        return this._fb.group({\n            Result: [result, Validators.required],\r\n        })\n    }\n\n\n\n\n    saveeventformdata(data: CorrectiveActionDataModel) {\n        data.ResultList = [];\n        data.ActionResponsiblePersonDataModel = [];\n        data.Duedate = new Date(data.dueDateStruct.year, data.dueDateStruct.month - 1, data.dueDateStruct.day).toLocaleDateString()\n        data.DateResolved = new Date(data.dateResolved.year, data.dateResolved.month - 1, data.dateResolved.day).toLocaleDateString();\n        if (data != null && data.actionResponsiblePersonDataModel != null && data.actionResponsiblePersonDataModel.length > 0) {\n            for (let childModel of data.actionResponsiblePersonDataModel) {\n                if (childModel != undefined) {\n                    let childdata = new ActionResponsiblePersonDataModel();\n                    childdata.UserID = childModel as any;\n                    data.ActionResponsiblePersonDataModel.push(childdata);\n                }\n            }\n        }\n        if (data.CorrectiveActionDueDateStruct.year != NaN)\n            data.CorrectiveActionDueDate = new Date(data.CorrectiveActionDueDateStruct.year, data.CorrectiveActionDueDateStruct.month - 1, data.CorrectiveActionDueDateStruct.day).toLocaleDateString();\n        var d = ((data as any).resultList);\n        for (let i = 0; i < d.length; i++) {\n            var dString = d[i].Result;\n            data.ResultList.push(dString);\n        }\n        this._CorrectiveActionService.addCorrectiveActionFromAction(data).subscribe((res: string) => {\n            if (res == \"added successfully\") {\n                this.router.navigate(['/pages/correctiveaction/list']);\n            }\n        });\n    }\n\n\n\n\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/correctiveaction/correctiveaction.component.ts","import { NgbDateParserFormatter, NgbDateStruct, NgbTimeStruct } from '@ng-bootstrap/ng-bootstrap';\r\nimport { LocationModel, TitleModel, SubTitleModel, Title, SubTitle, Action, EventActionStatusModel, events, EventFilterModel, EventViewModel, EventDataModel, EventFilterViewModel, EventAttendeeDataModel, ActionDataModel, ActionResponsiblePersonDataModel, AgendaDataModel } from '../calendar/formeventdata';\r\nexport class CorrectiveActionDataModel {\r\n    public ActionID: number;\r\n    public CorrectiveActionId: number;\r\n    public Title: string;\r\n    public AssignedBy: number;\r\n    public CategoryID: number;\r\n    public ActionSourceID: number;\r\n    public ActionTaken: string;\r\n    public Duedate: string;\r\n    public dueDateStruct: NgbDateStruct;\r\n    public RootCause: string;\r\n    public CorrectiveActionNeeded: boolean;\r\n    public IdentifiedCorrectiveAction: string;\r\n    public RiskLevel: number;\r\n    public ResponsibleParty: number;\r\n    public CorrectiveActionDueDate: string;\r\n    public CorrectiveActionDueDateStruct: NgbDateStruct;\r\n    public IssueResolved: boolean;\r\n    public DateResolved: string;\r\n    public dateResolved: NgbDateStruct;\r\n    public resultList: string[];\r\n    public ResultList: string[];\r\n    public ActionResponsiblePersonDataModel: ActionResponsiblePersonDataModel[];\r\n    public actionResponsiblePersonDataModel: ActionResponsiblePersonDataModel[];\r\n    constructor() {\r\n    }\r\n}\r\n\r\nexport class CorretiveActionListPageFilterModel {\r\n    public PageNo: number;\r\n    public PageSize: number;\r\n    public SortColumn: string;\r\n    public SortOrder: string;\r\n    public TitleFilter: string;\r\n    public AssignedByFilter: string;\r\n    public CategoryFilter: string;\r\n    public SourceFilter: string;\r\n    public ActionTakenFilter: string;\r\n    public DueDateFilter: string;\r\n    public RootCauseFilter: string;\r\n}\r\n\r\nexport class CorrectiveActionListModel {\r\n    public CorrectiveActionId: number;\r\n    public Title: string;\r\n    public AssignedBy: string;\r\n    public CategoryName: string;\r\n    public ActionSource: string;\r\n    public ActionTaken: string;\r\n    public DueDate: string;\r\n    public RootCause: string;\r\n    public RowID: number;\r\n}\r\n\r\nexport class CorrectiveActionList {\r\n\r\n    public CorrectiveActionListModel: CorrectiveActionListModel[];\r\n    public TotalRecords: number;\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/correctiveaction/correctiveaction.model.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { DirectivesModule } from '../../theme/directives/directives.module';\r\nimport { CorrectiveActionListComponent } from '../correctiveaction/correctiveactionlist.component';\r\nimport { CorrectiveActionComponent } from '../correctiveaction/correctiveaction.component';\r\nimport { CorrectiveActionRequiredComponent } from '../correctiveaction/correctiveaction.actionrequired.conmponent';\r\nimport { MultiselectDropdownModule } from 'angular-2-dropdown-multiselect';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ChartModule, CalendarModule, SharedModule, DataTableModule, MultiSelectModule, SelectItem, CheckboxModule } from 'primeng/primeng';\r\n\r\nexport const routes = [\r\n    { path: '', component: CorrectiveActionComponent, pathMatch: 'full' },\r\n    { path: 'list', component: CorrectiveActionListComponent, data: { breadcrumb: 'Corrective Action List' } },\r\n    { path: 'correctiveaction', component: CorrectiveActionComponent, data: { breadcrumb: 'Corrective Action' } },\r\n    { path: 'actionrequired/:id', component: CorrectiveActionRequiredComponent, data: { breadcrumb: 'Corrective Action Required' } },\r\n    { path: ':id', component: CorrectiveActionComponent, data: { breadcrumb: 'Edit' } },\r\n]\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        DirectivesModule,\r\n        MultiselectDropdownModule,\r\n        NgbModule.forRoot(),\r\n        CalendarModule,\r\n        SharedModule,\r\n        DataTableModule,\r\n        MultiSelectModule,\r\n        CheckboxModule,\r\n        RouterModule.forChild(routes)\r\n    ],\r\n    declarations: [\r\n        CorrectiveActionComponent,\r\n        CorrectiveActionListComponent,\r\n        CorrectiveActionRequiredComponent\r\n    ]\r\n})\r\nexport class CorrectiveActionModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/correctiveaction/correctiveaction.module.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { Observable } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport 'rxjs/add/operator/map';\r\nimport { environment } from '../../../environments/environment';\r\nlet apiURL = environment.apiEndpoint;\r\n\r\n@Injectable()\r\nexport class CorrectiveActionService {\r\n\r\n    constructor(private http: Http) {\r\n\r\n    }\r\n\r\n    getCorrectiveActionByActionId(id: number): Observable<any> {\r\n        return this.http.get(apiURL + \"/CorrectiveAction/GetCorrectiveActionByActionId?actionId=\" + id).map(res => res.json());\r\n    }\r\n    addCorrectiveActionFromAction(model: any): Observable<any> {\r\n        return this.http.post(apiURL + \"/CorrectiveAction/AddCorrectiveActionFromAction\", model).map(res => res.json());\r\n    }\r\n    getCorrectiveActionList(model: any): Observable<any> {\r\n        return this.http.post(apiURL + \"/CorrectiveAction/GetCorrectiveActionList\", model).map(res => res.json());\r\n    }\r\n    getCorrectiveActionData(id: number): Observable<any> {\r\n        return this.http.get(apiURL + \"/CorrectiveAction/GetCorrectiveData?CorrectiveActionDataID=\" + id).map(res => res.json());\r\n    }\r\n    deleteCorrectiveAction(id: number) {\r\n        return this.http.get(apiURL + \"/CorrectiveAction/DeleteCorrectiveAction?CorrectiveActionId=\" + id).map(res => res.json());\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/correctiveaction/correctiveaction.service.ts","module.exports = \"<p-dataTable [value]=\\\"data\\\" [lazy]=\\\"true\\\" [rows]=\\\"10\\\" [paginator]=\\\"true\\\" [rowsPerPageOptions]=\\\"[5,10,20,50]\\\"\\r\\n             #dt resizableColumns=\\\"true\\\" reorderableColumns=\\\"true\\\" [responsive]=\\\"true\\\" [totalRecords]=\\\"totalRecords\\\" (onLazyLoad)=\\\"loadCarsLazy($event)\\\">\\r\\n    <!--<p-footer><div class=\\\"ui-helper-clearfix\\\" style=\\\"width:100%\\\">\\r\\n\\r\\n        </div></p-footer>-->\\r\\n    <p-column field=\\\"Title\\\" header=\\\"Action\\\" [filter]=\\\"true\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n    <p-column field=\\\"AssignedBy\\\" header=\\\"Assigned By\\\" [filter]=\\\"true\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n    <p-column field=\\\"DueDate\\\" header=\\\"Due Date\\\" [filter]=\\\"true\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n    <p-column field=\\\"ActionTaken\\\" [filter]=\\\"true\\\" header=\\\"Action Taken\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n    <p-column field=\\\"RootCause\\\" header=\\\"Root Cause\\\" [filter]=\\\"true\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n    <!--<p-column field=\\\"CategoryName\\\" header=\\\"Category\\\" [filter]=\\\"true\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n    <p-column field=\\\"ActionSource\\\" header=\\\"Source\\\" [filter]=\\\"true\\\" [sortable]=\\\"true\\\"></p-column>-->\\r\\n\\r\\n    <p-column styleClass=\\\"col-button\\\">\\r\\n        <ng-template pTemplate=\\\"header\\\">\\r\\n            <div class=\\\"ui-helper-clearfix\\\" style=\\\"width:100%\\\">\\r\\n                <button type=\\\"button\\\" pButton icon=\\\"fa-plus\\\" (click)=\\\"redirectToNewPage()\\\" label=\\\"Add\\\"></button>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n        <ng-template let-meeting=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n            <button type=\\\"button\\\" title=\\\"Edit\\\" pButton (click)=\\\"redirectToEditPage(meeting)\\\" icon=\\\"fa fa-pencil-square-o\\\"></button>\\r\\n            <button type=\\\"button\\\" title=\\\"Cancel\\\" pButton (click)=\\\"deleteAction(meeting)\\\" icon=\\\"fa fa-trash-o\\\"></button>\\r\\n        </ng-template>\\r\\n\\r\\n    </p-column>\\r\\n</p-dataTable>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/correctiveaction/correctiveactionlist.component.html\n// module id = ../../../../../src/app/pages/correctiveaction/correctiveactionlist.component.html\n// module chunks = correctiveaction.module","import { Component, ViewEncapsulation, ViewChild, TemplateRef, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Validators, FormGroup, FormArray, FormBuilder } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { EventActionService } from '../eventactions/eventaction.service';\nimport { Location } from '@angular/common';\nimport { IMultiSelectOption, IMultiSelectSettings, IMultiSelectTexts } from 'angular-2-dropdown-multiselect';\nimport { Observable } from 'rxjs/Observable';\nimport { Http, URLSearchParams } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport { LocationModel, TitleModel, SubTitleModel, Title, SubTitle, Action, EventActionStatusModel, events, EventFilterModel, EventViewModel, EventDataModel, EventFilterViewModel, EventAttendeeDataModel, ActionDataModel, ActionResponsiblePersonDataModel, AgendaDataModel } from '../calendar/formeventdata';\nimport { CategoryModel, ActionSourceModel, ActionCommentsListModel } from '../eventactions/eventaction.model';\nimport { MasterEventDataService } from '../calendar/Mastereventdata';\nimport { LazyLoadEvent, FilterMetadata } from 'primeng/components/common/api';\r\nimport { UserViewModel, RoleViewModel, SecurityQuestionModel, OrgaizationViewModel, UserViewListModel, UserViewList } from '../user/user.model';\r\nimport { AccordionModule, MultiSelectModule, SelectItem, CheckboxModule } from 'primeng/primeng';     //accordion and accordion tab\r\nimport { MenuItem } from 'primeng/primeng';\nimport { UserService } from \"../user/user.service\";\nimport { CorrectiveActionService } from '../correctiveaction/correctiveaction.service';\nimport { CorrectiveActionList, CorrectiveActionListModel, CorretiveActionListPageFilterModel } from '../correctiveaction/correctiveaction.model';\n@Component({\n    selector: 'app-correctiveactionlist',\n    templateUrl: './correctiveactionlist.component.html',\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['../../../../node_modules/primeng/resources/primeng.min.css',\n        \"../../../../node_modules/primeng/resources/themes/omega/theme.css\"],\n    providers: [EventActionService, MasterEventDataService, UserService, CorrectiveActionService],\n\n\n})\r\n\r\nexport class CorrectiveActionListComponent implements OnInit {\r\n    correctiveActionFilterModel: CorretiveActionListPageFilterModel;\r\n    data: CorrectiveActionListModel[];\r\n    totalRecords: number = 0;\r\n    constructor(private _CorrectiveActionService: CorrectiveActionService, private _UserService: UserService, private router: Router, private location: Location, private _fb: FormBuilder, private _dataService: EventActionService, private route: ActivatedRoute, private _masterDataService: MasterEventDataService) {\r\n        this.correctiveActionFilterModel = new CorretiveActionListPageFilterModel();\r\n        this.correctiveActionFilterModel.PageNo = 1;\r\n        this.correctiveActionFilterModel.PageSize = 10;\r\n        this.correctiveActionFilterModel.SortColumn = \"Title\";\r\n        this.correctiveActionFilterModel.SortOrder = \"asc\";\r\n    }\r\n    ngOnInit() {\n\n\n    }\r\n\r\n    loadCarsLazy(event: LazyLoadEvent) {\r\n        //in a real application, make a remote request to load data using state metadata from event\r\n        //event.first = First row offset\r\n        //event.rows = Number of rows per page\r\n        //event.sortField = Field name to sort with\r\n        //event.sortOrder = Sort order as number, 1 for asc and -1 for dec\r\n        //filters: FilterMetadata object having field as key and filter value, filter matchMode as value\r\n\r\n        //imitate db connection over a network\r\n        this.correctiveActionFilterModel.PageNo = (event.first / event.rows) + 1;\r\n        this.correctiveActionFilterModel.PageSize = event.rows;\r\n        this.correctiveActionFilterModel.SortColumn = event.sortField;\r\n        this.correctiveActionFilterModel.SortOrder = event.sortOrder == 1 ? \"asc\" : \"desc\";\r\n        this.correctiveActionFilterModel.TitleFilter = event.filters.Title == undefined ? '' : event.filters.Title.value;\r\n        this.correctiveActionFilterModel.ActionTakenFilter = event.filters.ActionTaken == undefined ? '' : event.filters.ActionTaken.value;\r\n        this.correctiveActionFilterModel.AssignedByFilter = event.filters.AssignedBy == undefined ? '' : event.filters.AssignedBy.value;\r\n        this.correctiveActionFilterModel.CategoryFilter = event.filters.CategoryName == undefined ? '' : event.filters.CategoryName.value;\r\n        this.correctiveActionFilterModel.SourceFilter = event.filters.ActionSource == undefined ? '' : event.filters.ActionSource.value;\r\n        this.correctiveActionFilterModel.DueDateFilter = event.filters.DueDate == undefined ? '' : event.filters.DueDate.value;\r\n        this.correctiveActionFilterModel.RootCauseFilter = event.filters.RootCause == undefined ? '' : event.filters.RootCause.value;\r\n\r\n        this.getList();\r\n\r\n    }\n\n    getList() {\r\n        this._CorrectiveActionService.getCorrectiveActionList(this.correctiveActionFilterModel)\r\n            .subscribe((res: CorrectiveActionList) => {\r\n                this.totalRecords = res.TotalRecords;\r\n                this.data = res.CorrectiveActionListModel\r\n            });\r\n    }\r\n\r\n    public redirectToEditPage(event: CorrectiveActionListModel) {\n        this.router.navigate(['/pages/correctiveaction/' + event.CorrectiveActionId]);\n    }\n    public deleteAction(event: CorrectiveActionListModel) {\n        if (confirm(\"Are you sure want to delete this corrective action ?\")) {\n            this._CorrectiveActionService.deleteCorrectiveAction(event.CorrectiveActionId).subscribe();\n            this.getList();\n        }\n    }\n    redirectToNewPage() {\n        this.router.navigate(['/pages/correctiveaction']);\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Harsh/Projects/RiskMgmt/Code/QaRelease/RiskAssessment/API/RiskManagement.Web/src/app/pages/correctiveaction/correctiveactionlist.component.ts"],"sourceRoot":"webpack:///"}